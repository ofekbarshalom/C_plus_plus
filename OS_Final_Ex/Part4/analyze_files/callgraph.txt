--------------------------------------------------------------------------------
Profile data file 'callgrind.out.248728' (creator: callgrind-3.24.0)
--------------------------------------------------------------------------------
I1 cache: 
D1 cache: 
LL cache: 
Timerange: Basic block 0 - 871391
Trigger: Program termination
Profiled target:  ./main -v 5 -e 10 -s 123 (PID 248728, part 1)
Events recorded:  Ir
Events shown:     Ir
Event sort order: Ir
Thresholds:       99
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
Ir                 
--------------------------------------------------------------------------------
4,277,999 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir                file:function
--------------------------------------------------------------------------------
489,130 (11.43%)  ./elf/./elf/dl-lookup.c:do_lookup_x [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
488,054 (11.41%)  ./elf/../sysdeps/generic/dl-new-hash.h:_dl_lookup_symbol_x
322,319 ( 7.53%)  ./libio/./libio/iofwrite.c:fwrite [/usr/lib/x86_64-linux-gnu/libc.so.6]
286,775 ( 6.70%)  ./libio/./libio/fileops.c:_IO_file_xsputn@@GLIBC_2.2.5 [/usr/lib/x86_64-linux-gnu/libc.so.6]
220,044 ( 5.14%)  ./libio/./libio/iofread.c:fread [/usr/lib/x86_64-linux-gnu/libc.so.6]
210,305 ( 4.92%)  ???:gcov_do_dump.constprop.0 [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
188,512 ( 4.41%)  ./elf/./elf/dl-lookup.c:_dl_lookup_symbol_x [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
176,131 ( 4.12%)  ./gmon/./gmon/mcount.c:__mcount_internal [/usr/lib/x86_64-linux-gnu/libc.so.6]
160,197 ( 3.74%)  ./libio/./libio/fileops.c:_IO_file_xsgetn [/usr/lib/x86_64-linux-gnu/libc.so.6]
147,051 ( 3.44%)  ./elf/./elf/dl-reloc.c:_dl_relocate_object_no_relro [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
139,180 ( 3.25%)  ./gmon/../sysdeps/x86_64/_mcount.S:mcount [/usr/lib/x86_64-linux-gnu/libc.so.6]
123,974 ( 2.90%)  ./elf/../sysdeps/x86_64/dl-machine.h:_dl_relocate_object_no_relro
118,023 ( 2.76%)  ./elf/./elf/do-rel.h:_dl_relocate_object_no_relro
103,166 ( 2.41%)  ./elf/./elf/dl-lookup.c:check_match [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
101,151 ( 2.36%)  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__mempcpy_avx_unaligned_erms [/usr/lib/x86_64-linux-gnu/libc.so.6]
101,120 ( 2.36%)  ./libio/./libio/libioP.h:fwrite
 78,118 ( 1.83%)  ./string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S:strcmp [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
 76,424 ( 1.79%)  ???:__gcov_read_unsigned [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
 70,637 ( 1.65%)  ./gmon/./gmon/gmon.c:write_gmon [/usr/lib/x86_64-linux-gnu/libc.so.6]
 67,723 ( 1.58%)  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_avx_unaligned_erms [/usr/lib/x86_64-linux-gnu/libc.so.6]
 55,011 ( 1.29%)  ./libio/./libio/libioP.h:fread
 35,007 ( 0.82%)  ./libio/./libio/genops.c:_IO_sgetn [/usr/lib/x86_64-linux-gnu/libc.so.6]
 25,005 ( 0.58%)  ./libio/./libio/libioP.h:_IO_sgetn
 23,600 ( 0.55%)  ???:__gcov_read_counter [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
 20,004 ( 0.47%)  ./libio/../string/bits/string_fortified.h:_IO_file_xsgetn
 19,083 ( 0.45%)  ./elf/./elf/dl-tunables.c:__GI___tunables_init [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
 15,287 ( 0.36%)  ./elf/./elf/dl-version.c:_dl_check_map_versions [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
 12,164 ( 0.28%)  ???:std::locale::_Impl::_M_install_facet(std::locale::id const*, std::locale::facet const*) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
 10,576 ( 0.25%)  ???:__gcov_merge_add [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
 10,336 ( 0.24%)  ./stdlib/./stdlib/random_r.c:random_r [/usr/lib/x86_64-linux-gnu/libc.so.6]
 10,292 ( 0.24%)  ./elf/../sysdeps/generic/ldsodefs.h:_dl_relocate_object_no_relro
 10,199 ( 0.24%)  ./elf/./elf/dl-runtime.c:_dl_fixup [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  9,470 ( 0.22%)  ./elf/../sysdeps/generic/ldsodefs.h:do_lookup_x
  9,231 ( 0.22%)  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_chk_avx_unaligned_erms [/usr/lib/x86_64-linux-gnu/libc.so.6]
  7,936 ( 0.19%)  ./wcsmbs/./wcsmbs/btowc.c:btowc [/usr/lib/x86_64-linux-gnu/libc.so.6]
  7,598 ( 0.18%)  ./elf/../sysdeps/generic/dl-protected.h:do_lookup_x
  5,838 ( 0.14%)  ./malloc/./malloc/malloc.c:_int_malloc [/usr/lib/x86_64-linux-gnu/libc.so.6]
  5,802 ( 0.14%)  /usr/include/c++/14/bits/stl_pair.h:bool std::operator< <int, int>(std::pair<int, int> const&, std::pair<int, int> const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  5,116 ( 0.12%)  ./elf/./elf/dl-tunables.h:__GI___tunables_init
  5,001 ( 0.12%)  ./libio/./libio/libioP.h:_IO_file_xsgetn
  4,872 ( 0.11%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_key(std::_Rb_tree_node<std::pair<int, int> > const*) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  4,672 ( 0.11%)  ???:std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, long) const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  4,351 ( 0.10%)  ./gmon/../string/bits/string_fortified.h:write_gmon
  4,326 ( 0.10%)  main.cpp:main [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  4,296 ( 0.10%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int, int> > const*, std::_Rb_tree_node_base const*, std::pair<int, int> const&) const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  4,237 ( 0.10%)  ???:std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  4,200 ( 0.10%)  ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  4,176 ( 0.10%)  /usr/include/c++/14/bits/stl_function.h:std::less<std::pair<int, int> >::operator()(std::pair<int, int> const&, std::pair<int, int> const&) const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  3,654 ( 0.09%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_node<std::pair<int, int> >::_M_valptr() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  3,638 ( 0.09%)  ./elf/./elf/dl-load.c:_dl_map_object_from_fd [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  3,506 ( 0.08%)  ./elf/../sysdeps/x86/dl-cacheinfo.h:intel_check_word.constprop.0 [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  3,480 ( 0.08%)  /usr/include/c++/14/ext/aligned_buffer.h:__gnu_cxx::__aligned_membuf<std::pair<int, int> >::_M_ptr() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  3,456 ( 0.08%)  /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::base() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  3,224 ( 0.08%)  /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_iterator_base::_M_incr(long) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  3,223 ( 0.08%)  ???:std::ostream::sentry::sentry(std::ostream&) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  3,208 ( 0.07%)  ./elf/./elf/dl-misc.c:_dl_name_match_p [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  3,147 ( 0.07%)  ???:std::ctype<wchar_t>::_M_initialize_ctype() [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  3,110 ( 0.07%)  ./elf/./elf/dl-cache.c:_dl_cache_libcmp [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  3,101 ( 0.07%)  ./stdlib/./stdlib/getenv.c:getenv [/usr/lib/x86_64-linux-gnu/libc.so.6]
  3,100 ( 0.07%)  /usr/include/c++/14/bits/stl_iterator.h:bool __gnu_cxx::operator!=<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&, __gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  3,077 ( 0.07%)  ./malloc/./malloc/malloc.c:free [/usr/lib/x86_64-linux-gnu/libc.so.6]
  2,980 ( 0.07%)  ???:std::ostream& std::ostream::_M_insert<long>(long) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  2,958 ( 0.07%)  /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::__normal_iterator(GraphAlgo::Edge* const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  2,762 ( 0.06%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::find(std::pair<int, int> const&) const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  2,688 ( 0.06%)  ./wcsmbs/./wcsmbs/wctob.c:wctob [/usr/lib/x86_64-linux-gnu/libc.so.6]
  2,648 ( 0.06%)  GraphAlgorithms.cpp:GraphAlgo::GraphAlgorithms::findEulerianCircuit() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  2,420 ( 0.06%)  ./elf/./elf/dl-load.c:_dl_map_object [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  2,342 ( 0.05%)  ./elf/./elf/dl-deps.c:_dl_map_object_deps [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  2,265 ( 0.05%)  /usr/include/c++/14/bits/vector.tcc:void std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_realloc_append<int&, int&>(int&, int&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  2,262 ( 0.05%)  /usr/include/c++/14/bits/stl_function.h:std::_Identity<std::pair<int, int> >::operator()(std::pair<int, int> const&) const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  2,124 ( 0.05%)  GraphAlgorithms.cpp:GraphAlgo::GraphAlgorithms::dfsUtil(int, std::vector<bool, std::allocator<bool> >&) const'2 [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  2,100 ( 0.05%)  /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_iterator::operator*() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  2,099 ( 0.05%)  ./string/../sysdeps/x86_64/multiarch/strlen-avx2.S:__strlen_avx2 [/usr/lib/x86_64-linux-gnu/libc.so.6]
  2,093 ( 0.05%)  ./malloc/./malloc/malloc.c:malloc [/usr/lib/x86_64-linux-gnu/libc.so.6]
  2,088 ( 0.05%)  /usr/include/c++/14/ext/aligned_buffer.h:__gnu_cxx::__aligned_membuf<std::pair<int, int> >::_M_addr() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  2,006 ( 0.05%)  /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::__normal_iterator(GraphAlgo::Edge const* const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,941 ( 0.05%)  Graph.cpp:GraphAlgo::Graph::printGraph() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,922 ( 0.04%)  /usr/include/c++/14/bits/stl_bvector.h:std::operator+(std::_Bit_iterator const&, long) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,860 ( 0.04%)  ./elf/../bits/stdlib-bsearch.h:intel_check_word.constprop.0
  1,850 ( 0.04%)  ./stdlib/./stdlib/random_r.c:srandom_r [/usr/lib/x86_64-linux-gnu/libc.so.6]
  1,804 ( 0.04%)  ./elf/./elf/get-dynamic-info.h:_dl_map_object_from_fd
  1,800 ( 0.04%)  /usr/include/c++/14/bits/move.h:int& std::forward<int&>(std::remove_reference<int&>::type&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,792 ( 0.04%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_const_iterator<std::pair<int, int> >::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,760 ( 0.04%)  ./stdlib/./stdlib/random.c:random [/usr/lib/x86_64-linux-gnu/libc.so.6]
  1,751 ( 0.04%)  ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  1,740 ( 0.04%)  /usr/include/c++/14/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::operator[](unsigned long) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,711 ( 0.04%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_get_insert_unique_pos(std::pair<int, int> const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,701 ( 0.04%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::end() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,680 ( 0.04%)  /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_iterator::operator[](long) const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,638 ( 0.04%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::end() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,620 ( 0.04%)  /usr/include/c++/14/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::begin() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,512 ( 0.04%)  ???:0x0000000000132140 [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  1,440 ( 0.03%)  /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::base() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,440 ( 0.03%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::operator[](unsigned long) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,434 ( 0.03%)  /usr/include/c++/14/bits/stl_set.h:std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::count(std::pair<int, int> const&) const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,426 ( 0.03%)  /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_iterator::_Bit_iterator(unsigned long*, unsigned int) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,400 ( 0.03%)  /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_iterator_base::_Bit_iterator_base(unsigned long*, unsigned int) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,391 ( 0.03%)  /usr/include/c++/14/new:operator new(unsigned long, void*) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,360 ( 0.03%)  /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator++() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,350 ( 0.03%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::size() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,348 ( 0.03%)  ./libio/./libio/fileops.c:_IO_file_overflow@@GLIBC_2.2.5 [/usr/lib/x86_64-linux-gnu/libc.so.6]
  1,305 ( 0.03%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_check_len(unsigned long, char const*) const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,302 ( 0.03%)  /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_iterator::operator+=(long) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,284 ( 0.03%)  ???:std::locale::id::_M_id() const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  1,254 ( 0.03%)  ./elf/./elf/rtld.c:dl_main [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  1,232 ( 0.03%)  ???:0x000000000012e310 [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
  1,224 ( 0.03%)  /usr/include/c++/14/bits/stl_tree.h:std::operator==(std::_Rb_tree_const_iterator<std::pair<int, int> > const&, std::_Rb_tree_const_iterator<std::pair<int, int> > const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,224 ( 0.03%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::empty() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,200 ( 0.03%)  /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_reference::_Bit_reference(unsigned long*, unsigned long) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,175 ( 0.03%)  /usr/include/c++/14/bits/vector.tcc:GraphAlgo::Edge& std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::emplace_back<int&, int&>(int&, int&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,162 ( 0.03%)  GraphAlgorithms.cpp:GraphAlgo::GraphAlgorithms::isEulerian() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,143 ( 0.03%)  ./wctype/./wctype/wctype_l.c:wctype_l [/usr/lib/x86_64-linux-gnu/libc.so.6]
  1,137 ( 0.03%)  ./elf/./elf/dl-object.c:_dl_new_object [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  1,134 ( 0.03%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::end() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,087 ( 0.03%)  ./elf/./elf/dl-minimal-malloc.c:__minimal_malloc [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  1,080 ( 0.03%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::begin() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,054 ( 0.02%)  /usr/include/c++/14/bits/stl_iterator.h:bool __gnu_cxx::operator==<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&, __gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,050 ( 0.02%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::back() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,045 ( 0.02%)  ./string/../sysdeps/x86_64/multiarch/memcmp-avx2-movbe.S:__memcmp_avx2_movbe [/usr/lib/x86_64-linux-gnu/libc.so.6]
  1,040 ( 0.02%)  /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator*() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,036 ( 0.02%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_iterator<std::pair<int, int> > std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_insert_<std::pair<int, int>, std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<int, int>&&, std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Alloc_node&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
  1,006 ( 0.02%)  ./elf/./elf/dl-cache.c:search_cache [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    992 ( 0.02%)  /usr/include/c++/14/bits/stl_iterator.h:bool __gnu_cxx::operator!=<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&, __gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    977 ( 0.02%)  ???:__gnu_cxx::stdio_sync_filebuf<char, std::char_traits<char> >::xsputn(char const*, long) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    968 ( 0.02%)  /usr/include/c++/14/bits/stl_pair.h:std::pair<int, int>::pair<int, int, true>(int const&, int const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    950 ( 0.02%)  /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_reference::operator bool() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    944 ( 0.02%)  /usr/include/c++/14/bits/stl_algobase.h:int const& std::min<int>(int const&, int const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    904 ( 0.02%)  /usr/include/c++/14/bits/stl_algobase.h:int const& std::max<int>(int const&, int const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    900 ( 0.02%)  /usr/include/c++/14/bits/stl_set.h:std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::size() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    899 ( 0.02%)  ./stdlib/./stdlib/cxa_finalize.c:__cxa_finalize [/usr/lib/x86_64-linux-gnu/libc.so.6]
    893 ( 0.02%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_key(std::_Rb_tree_node_base const*) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    885 ( 0.02%)  /usr/include/c++/14/bits/stl_uninitialized.h:GraphAlgo::Edge* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, GraphAlgo::Edge*>(__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, __gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, GraphAlgo::Edge*) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    878 ( 0.02%)  ./string/../sysdeps/x86_64/multiarch/../multiarch/memset-vec-unaligned-erms.S:memset [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    870 ( 0.02%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_S_max_size(std::allocator<GraphAlgo::Edge> const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    840 ( 0.02%)  /usr/include/c++/14/bits/move.h:std::pair<int, int>&& std::forward<std::pair<int, int> >(std::remove_reference<std::pair<int, int> >::type&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    840 ( 0.02%)  /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator-(long) const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    837 ( 0.02%)  ./elf/./elf/dl-tunables.c:__tunable_get_val [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    824 ( 0.02%)  ./string/../sysdeps/x86_64/multiarch/../multiarch/strlen-sse2.S:strlen [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    809 ( 0.02%)  ./malloc/./malloc/malloc.c:malloc_consolidate [/usr/lib/x86_64-linux-gnu/libc.so.6]
    802 ( 0.02%)  ./string/../sysdeps/x86_64/multiarch/strcmp-avx2.S:__strncmp_avx2 [/usr/lib/x86_64-linux-gnu/libc.so.6]
    801 ( 0.02%)  ./libio/./libio/genops.c:_IO_default_xsputn [/usr/lib/x86_64-linux-gnu/libc.so.6]
    795 ( 0.02%)  /usr/include/c++/14/bits/stl_uninitialized.h:GraphAlgo::Edge* std::__relocate_a_1<GraphAlgo::Edge*, GraphAlgo::Edge*, std::allocator<GraphAlgo::Edge> >(GraphAlgo::Edge*, GraphAlgo::Edge*, GraphAlgo::Edge*, std::allocator<GraphAlgo::Edge>&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    788 ( 0.02%)  ???:std::locale::_Impl::_Impl(unsigned long) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    780 ( 0.02%)  /usr/include/c++/14/bits/move.h:GraphAlgo::Edge* std::__addressof<GraphAlgo::Edge>(GraphAlgo::Edge&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    779 ( 0.02%)  /usr/include/c++/14/bits/stl_algobase.h:unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    774 ( 0.02%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<int, std::allocator<int> >::size() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    771 ( 0.02%)  ./malloc/./malloc/malloc.c:ptmalloc_init.part.0
    768 ( 0.02%)  Graph.cpp:GraphAlgo::Graph::getNeighbors(int) const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    765 ( 0.02%)  /usr/include/c++/14/bits/stl_uninitialized.h:GraphAlgo::Edge* std::__relocate_a<GraphAlgo::Edge*, GraphAlgo::Edge*, std::allocator<GraphAlgo::Edge> >(GraphAlgo::Edge*, GraphAlgo::Edge*, GraphAlgo::Edge*, std::allocator<GraphAlgo::Edge>&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    764 ( 0.02%)  ./string/../sysdeps/x86_64/multiarch/../multiarch/strchr-sse2.S:index [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    756 ( 0.02%)  /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator+(long) const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    751 ( 0.02%)  ???:std::ctype<char>::_M_widen_init() const [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    750 ( 0.02%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::max_size() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    740 ( 0.02%)  /usr/include/c++/14/bits/stl_construct.h:void std::_Construct<GraphAlgo::Edge, GraphAlgo::Edge const&>(GraphAlgo::Edge*, GraphAlgo::Edge const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    740 ( 0.02%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::operator[](unsigned long) const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    739 ( 0.02%)  ./elf/./dl-map-segments.h:_dl_map_object_from_fd
    731 ( 0.02%)  ./malloc/./malloc/malloc.c:_int_free_chunk [/usr/lib/x86_64-linux-gnu/libc.so.6]
    720 ( 0.02%)  /usr/include/c++/14/bits/stl_tree.h:std::pair<std::_Rb_tree_iterator<std::pair<int, int> >, bool> std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_insert_unique<std::pair<int, int> >(std::pair<int, int>&&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    715 ( 0.02%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_left(std::_Rb_tree_node_base const*) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    714 ( 0.02%)  /usr/include/c++/14/bits/stl_deque.h:std::deque<int, std::allocator<int> >::back() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    700 ( 0.02%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::begin() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    700 ( 0.02%)  /usr/include/c++/14/bits/vector.tcc:void std::vector<int, std::allocator<int> >::_M_realloc_append<int const&>(int const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    680 ( 0.02%)  /usr/include/c++/14/bits/new_allocator.h:std::__new_allocator<GraphAlgo::Edge>::allocate(unsigned long, void const*) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    676 ( 0.02%)  ???:std::ostream::operator<<(int) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    674 ( 0.02%)  ./libio/./libio/fileops.c:new_do_write [/usr/lib/x86_64-linux-gnu/libc.so.6]
    667 ( 0.02%)  /usr/include/c++/14/bits/stl_deque.h:std::_Deque_iterator<int, int&, int*>::_Deque_iterator(std::_Deque_iterator<int, int&, int*> const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    645 ( 0.02%)  /usr/include/c++/14/bits/stl_uninitialized.h:void std::__relocate_object_a<GraphAlgo::Edge, GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >(GraphAlgo::Edge*, GraphAlgo::Edge*, std::allocator<GraphAlgo::Edge>&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    640 ( 0.01%)  ./elf/./elf/libc-dl-profstub.c:_dl_mcount_wrapper_check [/usr/lib/x86_64-linux-gnu/libc.so.6]
    640 ( 0.01%)  ./iconv/./iconv/gconv_simple.c:__gconv_btwoc_ascii [/usr/lib/x86_64-linux-gnu/libc.so.6]
    637 ( 0.01%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_right(std::_Rb_tree_node_base const*) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    632 ( 0.01%)  /usr/include/c++/14/bits/vector.tcc:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_erase(__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    627 ( 0.01%)  ./elf/./elf/dl-load.c:open_verify.constprop.0 [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    618 ( 0.01%)  ./elf/./elf/dl-load.c:open_path [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    610 ( 0.01%)  Graph.cpp:GraphAlgo::Graph::addEdge(int, int, int) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    588 ( 0.01%)  /usr/include/c++/14/bits/move.h:int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    588 ( 0.01%)  /usr/include/c++/14/bits/stl_algobase.h:GraphAlgo::Edge* std::__niter_base<GraphAlgo::Edge*>(GraphAlgo::Edge*) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    585 ( 0.01%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::size() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    560 ( 0.01%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::erase(__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    554 ( 0.01%)  ./libio/./libio/fileops.c:_IO_file_write@@GLIBC_2.2.5 [/usr/lib/x86_64-linux-gnu/libc.so.6]
    540 ( 0.01%)  /usr/include/c++/14/bits/new_allocator.h:void std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_realloc_append<int&, int&>(int&, int&)
    538 ( 0.01%)  ./elf/./elf/dl-sort-maps.c:dfs_traversal.part.0 [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    538 ( 0.01%)  GraphAlgorithms.cpp:GraphAlgo::GraphAlgorithms::dfsUtil(int, std::vector<bool, std::allocator<bool> >&) const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    534 ( 0.01%)  ./elf/./elf/dl-init.c:call_init [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    533 ( 0.01%)  ???:operator new(unsigned long) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    528 ( 0.01%)  /usr/include/c++/14/bits/stl_deque.h:std::deque<int, std::allocator<int> >::empty() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    520 ( 0.01%)  /usr/include/c++/14/bits/stl_tree.h:void std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_construct_node<std::pair<int, int> >(std::_Rb_tree_node<std::pair<int, int> >*, std::pair<int, int>&&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    519 ( 0.01%)  ./misc/../sysdeps/unix/sysv/linux/mmap64.c:mmap [/usr/lib/x86_64-linux-gnu/libc.so.6]
    512 ( 0.01%)  ./wcsmbs/./wcsmbsload.h:btowc
    511 ( 0.01%)  ./elf/./elf/dl-environ.c:_dl_next_ld_env_entry [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    510 ( 0.01%)  /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::difference_type __gnu_cxx::operator-<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&, __gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    507 ( 0.01%)  ./elf/./elf/dl-catch.c:_dl_catch_exception [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    504 ( 0.01%)  ./elf/../sysdeps/x86/dl-cacheinfo.h:handle_intel.constprop.0 [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    489 ( 0.01%)  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:memcpy [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    488 ( 0.01%)  ???:std::ios_base::ios_base() [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    484 ( 0.01%)  /usr/include/c++/14/bits/stl_deque.h:std::deque<int, std::allocator<int> >::end() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    483 ( 0.01%)  /usr/include/c++/14/bits/stl_deque.h:std::_Deque_iterator<int, int&, int*>::operator--() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    481 ( 0.01%)  ./stdlib/./stdlib/cxa_atexit.c:__internal_atexit [/usr/lib/x86_64-linux-gnu/libc.so.6]
    480 ( 0.01%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_get_Node_allocator() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    469 ( 0.01%)  ./posix/./posix/getopt.c:_getopt_internal_r [/usr/lib/x86_64-linux-gnu/libc.so.6]
    464 ( 0.01%)  /usr/include/c++/14/bits/new_allocator.h:std::__new_allocator<GraphAlgo::Edge>::deallocate(GraphAlgo::Edge*, unsigned long) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    462 ( 0.01%)  /usr/include/c++/14/bits/stl_deque.h:std::deque<int, std::allocator<int> >::pop_back() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    451 ( 0.01%)  ./stdlib/./stdlib/cxa_atexit.c:__new_exitfn [/usr/lib/x86_64-linux-gnu/libc.so.6]
    451 ( 0.01%)  /usr/include/c++/14/bits/stl_deque.h:std::deque<int, std::allocator<int> >::push_back(int const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    442 ( 0.01%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_begin() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    442 ( 0.01%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_end() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    440 ( 0.01%)  /usr/include/c++/14/bits/stl_stack.h:std::stack<int, std::deque<int, std::allocator<int> > >::empty() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    435 ( 0.01%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<int, std::allocator<int> >::_M_check_len(unsigned long, char const*) const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    432 ( 0.01%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_iterator<std::pair<int, int> >::_Rb_tree_iterator(std::_Rb_tree_node_base*) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    426 ( 0.01%)  ./elf/./dl-find_object.h:_dl_find_object_from_map [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    425 ( 0.01%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::vector(std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    423 ( 0.01%)  /usr/include/c++/14/bits/stl_algobase.h:unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    421 ( 0.01%)  ???:std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    420 ( 0.01%)  /usr/include/c++/14/bits/stl_set.h:std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::insert(std::pair<int, int>&&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    420 ( 0.01%)  /usr/include/c++/14/bits/stl_stack.h:std::stack<int, std::deque<int, std::allocator<int> > >::top() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    420 ( 0.01%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_node<std::pair<int, int> >::_M_valptr() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    420 ( 0.01%)  /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_allocate(unsigned long) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    420 ( 0.01%)  /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_get_Tp_allocator() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    418 ( 0.01%)  ???:std::__cxx11::numpunct<char>::_M_initialize_numpunct(__locale_struct*) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    418 ( 0.01%)  ???:std::numpunct<char>::_M_initialize_numpunct(__locale_struct*) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    405 ( 0.01%)  ./elf/./elf/dl-hwcaps_split.c:_dl_hwcaps_split [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    400 ( 0.01%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<int, std::allocator<int> >::push_back(int const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    400 ( 0.01%)  /usr/include/c++/14/ext/aligned_buffer.h:__gnu_cxx::__aligned_membuf<std::pair<int, int> >::_M_ptr() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    400 ( 0.01%)  Graph.hpp:GraphAlgo::Edge::Edge(int, int) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    398 ( 0.01%)  ./stdlib/../string/bits/string_fortified.h:random_r
    396 ( 0.01%)  /usr/include/c++/14/bits/stl_deque.h:std::operator==(std::_Deque_iterator<int, int&, int*> const&, std::_Deque_iterator<int, int&, int*> const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    390 ( 0.01%)  /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator*() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    390 ( 0.01%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_S_relocate(GraphAlgo::Edge*, GraphAlgo::Edge*, GraphAlgo::Edge*, std::allocator<GraphAlgo::Edge>&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    388 ( 0.01%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_erase(std::_Rb_tree_node<std::pair<int, int> >*)'2 [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    380 ( 0.01%)  /usr/include/c++/14/bits/stl_pair.h:std::pair<std::_Rb_tree_const_iterator<std::pair<int, int> >, bool>::pair<std::_Rb_tree_iterator<std::pair<int, int> >&, bool&, true>(std::_Rb_tree_iterator<std::pair<int, int> >&, bool&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    374 ( 0.01%)  ???:std::locale::locale() [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    370 ( 0.01%)  /usr/include/c++/14/bits/new_allocator.h:std::__new_allocator<std::_Rb_tree_node<std::pair<int, int> > >::allocate(unsigned long, void const*) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    364 ( 0.01%)  ./libio/./libio/iofflush.c:fflush [/usr/lib/x86_64-linux-gnu/libc.so.6]
    364 ( 0.01%)  Graph.cpp:GraphAlgo::Graph::getVertexCount() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    361 ( 0.01%)  ???:__cpu_indicator_init [/usr/lib/x86_64-linux-gnu/libgcc_s.so.1]
    360 ( 0.01%)  /usr/include/c++/14/bits/move.h:GraphAlgo::Edge&& std::forward<GraphAlgo::Edge>(std::remove_reference<GraphAlgo::Edge>::type&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    360 ( 0.01%)  /usr/include/c++/14/bits/new_allocator.h:void std::__relocate_object_a<GraphAlgo::Edge, GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >(GraphAlgo::Edge*, GraphAlgo::Edge*, std::allocator<GraphAlgo::Edge>&)
    360 ( 0.01%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_node<std::pair<int, int> >* std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_create_node<std::pair<int, int> >(std::pair<int, int>&&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    360 ( 0.01%)  /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_get_Tp_allocator() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    360 ( 0.01%)  /usr/include/c++/14/bits/vector.tcc:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_realloc_append<int&, int&>(int&, int&)::_Guard::_Guard(GraphAlgo::Edge*, unsigned long, std::allocator<GraphAlgo::Edge>&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    360 ( 0.01%)  /usr/include/c++/14/bits/vector.tcc:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_realloc_append<int&, int&>(int&, int&)::_Guard::~_Guard() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    358 ( 0.01%)  ???:0x00000000000e1650 [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    356 ( 0.01%)  ./elf/../sysdeps/nptl/dl-tls_init_tp.c:rtld_mutex_dummy [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    352 ( 0.01%)  ./elf/./elf/dl-sort-maps.c:_dl_sort_maps [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    352 ( 0.01%)  ./stdlib/./stdlib/rand.c:rand [/usr/lib/x86_64-linux-gnu/libc.so.6]
    352 ( 0.01%)  ???:std::__cxx11::numpunct<wchar_t>::_M_initialize_numpunct(__locale_struct*) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    352 ( 0.01%)  ???:std::numpunct<wchar_t>::_M_initialize_numpunct(__locale_struct*) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    351 ( 0.01%)  ./stdlib/../stdlib/strtol_l.c:____strtol_l_internal [/usr/lib/x86_64-linux-gnu/libc.so.6]
    350 ( 0.01%)  ./elf/./get-dynamic-info.h:dl_main
    350 ( 0.01%)  /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::~_Vector_base() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    348 ( 0.01%)  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:mempcpy [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    340 ( 0.01%)  /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::difference_type __gnu_cxx::operator-<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&, __gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    336 ( 0.01%)  ./libio/./libio/fileops.c:_IO_file_underflow@@GLIBC_2.2.5 [/usr/lib/x86_64-linux-gnu/libc.so.6]
    326 ( 0.01%)  ./elf/../sysdeps/unix/sysv/linux/dl-sysdep.c:_dl_sysdep_parse_arguments [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    320 ( 0.01%)  /usr/include/c++/14/bits/stl_pair.h:std::pair<std::_Rb_tree_iterator<std::pair<int, int> >, bool>::pair<std::_Rb_tree_iterator<std::pair<int, int> >, bool, true>(std::_Rb_tree_iterator<std::pair<int, int> >&&, bool&&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    320 ( 0.01%)  /usr/include/c++/14/bits/stl_pair.h:std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node<std::pair<int, int> >*&, std::_Rb_tree_node_base*&, true>(std::_Rb_tree_node<std::pair<int, int> >*&, std::_Rb_tree_node_base*&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    314 ( 0.01%)  ./elf/./dl-tls_block_align.h:_dl_allocate_tls_storage
    311 ( 0.01%)  ./elf/./elf/dl-fini.c:_dl_fini [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    311 ( 0.01%)  ???:std::ios_base::Init::Init() [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    310 ( 0.01%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_destroy_node(std::_Rb_tree_node<std::pair<int, int> >*) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    310 ( 0.01%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_node<std::pair<int, int> >* std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Alloc_node::operator()<std::pair<int, int> >(std::pair<int, int>&&) const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    310 ( 0.01%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::~vector() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    308 ( 0.01%)  ./nptl/./nptl/cancellation.c:__syscall_cancel [/usr/lib/x86_64-linux-gnu/libc.so.6]
    303 ( 0.01%)  ./elf/./elf/dl-load.c:_dl_init_paths [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    300 ( 0.01%)  /usr/include/c++/14/bits/alloc_traits.h:void std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_realloc_append<int&, int&>(int&, int&)
    296 ( 0.01%)  ???:std::ostream::put(char) [/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33]
    290 ( 0.01%)  /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_reference::operator=(bool) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    290 ( 0.01%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_drop_node(std::_Rb_tree_node<std::pair<int, int> >*) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    290 ( 0.01%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    288 ( 0.01%)  /usr/include/c++/14/bits/stl_iterator.h:GraphAlgo::Edge* std::__niter_base<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    288 ( 0.01%)  /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    286 ( 0.01%)  /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator->() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    286 ( 0.01%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_left(std::_Rb_tree_node_base*) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    283 ( 0.01%)  ./nptl/./nptl/cancellation.c:__internal_syscall_cancel [/usr/lib/x86_64-linux-gnu/libc.so.6]
    278 ( 0.01%)  ./elf/./elf/rtld.c:_dl_start [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    276 ( 0.01%)  ./elf/./elf/dl-find_object.c:_dlfo_process_initial [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    273 ( 0.01%)  /usr/include/c++/14/bits/stl_deque.h:std::_Deque_iterator<int, int&, int*>::operator*() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    273 ( 0.01%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_right(std::_Rb_tree_node_base*) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    270 ( 0.01%)  /usr/include/c++/14/bits/new_allocator.h:std::__new_allocator<std::_Rb_tree_node<std::pair<int, int> > >::deallocate(std::_Rb_tree_node<std::pair<int, int> >*, unsigned long) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    268 ( 0.01%)  ./elf/./get-dynamic-info.h:_dl_start
    265 ( 0.01%)  ./elf/./elf/dl-object.c:_dl_add_to_namespace_list [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    265 ( 0.01%)  ./setjmp/../sysdeps/x86_64/setjmp.S:__sigsetjmp [/usr/lib/x86_64-linux-gnu/libc.so.6]
    263 ( 0.01%)  ./stdlib/./stdlib/exit.c:__run_exit_handlers [/usr/lib/x86_64-linux-gnu/libc.so.6]
    260 ( 0.01%)  /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_end() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    260 ( 0.01%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::pop_back() [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    259 ( 0.01%)  ./elf/../sysdeps/x86/dl-cacheinfo.h:init_cpu_features.constprop.0
    258 ( 0.01%)  ./elf/./elf/dl-find_object.c:_dlfo_sort_mappings [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    255 ( 0.01%)  /usr/include/c++/14/bits/stl_uninitialized.h:int* std::__relocate_a<int*, int*, std::allocator<int> >(int*, int*, int*, std::allocator<int>&) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    253 ( 0.01%)  ./string/../string/strcspn.c:strcspn [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    253 ( 0.01%)  /usr/include/c++/14/bits/new_allocator.h:std::deque<int, std::allocator<int> >::push_back(int const&)
    250 ( 0.01%)  /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_deallocate(GraphAlgo::Edge*, unsigned long) [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    250 ( 0.01%)  /usr/include/c++/14/bits/stl_vector.h:std::vector<int, std::allocator<int> >::max_size() const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    249 ( 0.01%)  ./libio/./libio/fileops.c:_IO_file_seekoff@@GLIBC_2.2.5 [/usr/lib/x86_64-linux-gnu/libc.so.6]
    247 ( 0.01%)  /usr/include/c++/14/bits/stl_function.h:std::_Identity<std::pair<int, int> >::operator()(std::pair<int, int>&) const [/home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/main]
    246 ( 0.01%)  ./elf/./elf/dl-minimal.c:strsep [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/bits/alloc_traits.h
--------------------------------------------------------------------------------
Ir           

-- line 507 ----------------------------------------
  .                  *  @param  __a  An allocator.
  .                  *  @param  __n  The number of objects to allocate space for.
  .                  *
  .                  *  Calls @c a.allocate(n)
  .                 */
  .                 [[__nodiscard__,__gnu__::__always_inline__]]
  .                 static _GLIBCXX20_CONSTEXPR pointer
  .                 allocate(allocator_type& __a, size_type __n)
449 ( 0.01%)        { return __a.allocate(__n); }
264 ( 0.01%)  => /usr/include/c++/14/bits/new_allocator.h:std::__new_allocator<unsigned long>::allocate(unsigned long, void const*) (2x)
  .           
  .                 /**
  .                  *  @brief  Allocate memory.
  .                  *  @param  __a  An allocator.
  .                  *  @param  __n  The number of objects to allocate space for.
  .                  *  @param  __hint Aid to locality.
  .                  *  @return Memory of suitable size and alignment for @a n objects
  .                  *          of type @c value_type
-- line 523 ----------------------------------------
-- line 542 ----------------------------------------
  .                  *  @param  __p  Pointer to the memory to deallocate.
  .                  *  @param  __n  The number of objects space was allocated for.
  .                  *
  .                  *  Calls <tt> a.deallocate(p, n) </tt>
  .                 */
  .                 [[__gnu__::__always_inline__]]
  .                 static _GLIBCXX20_CONSTEXPR void
  .                 deallocate(allocator_type& __a, pointer __p, size_type __n)
410 ( 0.01%)        { __a.deallocate(__p, __n); }
282 ( 0.01%)  => /usr/include/c++/14/bits/new_allocator.h:std::__new_allocator<unsigned long>::deallocate(unsigned long*, unsigned long) (2x)
  .           
  .                 /**
  .                  *  @brief  Construct an object of type `_Up`
  .                  *  @param  __a  An allocator.
  .                  *  @param  __p  Pointer to memory of suitable size and alignment for
  .                  *	       an object of type `_Up`.
  .                  *  @param  __args Constructor arguments.
  .                  *
-- line 558 ----------------------------------------
-- line 567 ----------------------------------------
  .           		  _Up* __p, _Args&&... __args)
  .           #if __cplusplus <= 201703L
  .           	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
  .           #else
  .           	noexcept(__is_nothrow_new_constructible<_Up, _Args...>)
  .           #endif
  .           	{
  .           #if __cplusplus <= 201703L
897 ( 0.02%)  	  __a.construct(__p, std::forward<_Args>(__args)...);
574 ( 0.01%)  => /usr/include/c++/14/bits/move.h:std::pair<int, int>&& std::forward<std::pair<int, int> >(std::remove_reference<std::pair<int, int> >::type&) (10x)
  .           #elif __cpp_constexpr_dynamic_alloc // >= C++20
  .           	  std::construct_at(__p, std::forward<_Args>(__args)...);
  .           #else
  .           	  std::_Construct(__p, std::forward<_Args>(__args)...);
  .           #endif
 67 ( 0.00%)  	}
  .           
  .                 /**
  .                  *  @brief  Destroy an object of type @a _Up
  .                  *  @param  __a  An allocator.
  .                  *  @param  __p  Pointer to the object to destroy
  .                  *
  .                  *  Calls @c __a.destroy(__p).
  .                 */
-- line 589 ----------------------------------------
-- line 593 ----------------------------------------
  .           	destroy(allocator_type& __a __attribute__((__unused__)), _Up* __p)
  .           	noexcept(is_nothrow_destructible<_Up>::value)
  .           	{
  .           #if __cplusplus <= 201703L
  .           	  __a.destroy(__p);
  .           #else
  .           	  std::destroy_at(__p);
  .           #endif
 86 ( 0.00%)  	}
  .           
  .                 /**
  .                  *  @brief  The maximum supported allocation size
  .                  *  @param  __a  An allocator.
  .                  *  @return @c __a.max_size()
  .                 */
  .                 [[__gnu__::__always_inline__]]
  .                 static _GLIBCXX20_CONSTEXPR size_type
  .                 max_size(const allocator_type& __a __attribute__((__unused__))) noexcept
  .                 {
  .           #if __cplusplus <= 201703L
 41 ( 0.00%)  	return __a.max_size();
  .           #else
  .           	return size_t(-1) / sizeof(value_type);
  .           #endif
  .                 }
  .           
  .                 /**
  .                  *  @brief  Obtain an allocator to use when copying a container.
  .                  *  @param  __rhs  An allocator.
  .                  *  @return @c __rhs
  .                 */
  .                 [[__gnu__::__always_inline__]]
  .                 static _GLIBCXX20_CONSTEXPR allocator_type
  .                 select_on_container_copy_construction(const allocator_type& __rhs)
  6 ( 0.00%)        { return __rhs; }
  .               };
  .           
  .             /**
  .              * @brief  Explicit specialization for `std::allocator<void>`
  .              * @headerfile memory
  .              * @ingroup allocators
  .              * @since C++11
  .              * @see std::allocator_traits
-- line 635 ----------------------------------------
-- line 985 ----------------------------------------
  .           
  .           #if _GLIBCXX_HOSTED
  .             template<typename _ForwardIterator, typename _Tp>
  .               __attribute__((__always_inline__)) _GLIBCXX20_CONSTEXPR
  .               inline void
  .               _Destroy(_ForwardIterator __first, _ForwardIterator __last,
  .           	     allocator<_Tp>&)
  .               {
 65 ( 0.00%)        std::_Destroy(__first, __last);
132 ( 0.00%)  => /usr/include/c++/14/bits/stl_construct.h:void std::_Destroy<int*>(int*, int*) (1x)
 52 ( 0.00%)      }
  .           #endif
  .             /// @endcond
  .           
  .           _GLIBCXX_END_NAMESPACE_VERSION
  .           } // namespace std
  .           #endif // _ALLOC_TRAITS_H

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/bits/stl_uninitialized.h
--------------------------------------------------------------------------------
Ir           

-- line 105 ----------------------------------------
  .           // should be too.
  .           # define _GLIBCXX_USE_ASSIGN_FOR_INIT(T, U) \
  .               __is_trivial(T) && __is_assignable(T&, U)
  .           #endif
  .           
  .             template<typename _InputIterator, typename _ForwardIterator>
  .               _GLIBCXX20_CONSTEXPR
  .               _ForwardIterator
 72 ( 0.00%)      __do_uninit_copy(_InputIterator __first, _InputIterator __last,
229 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (5x)
  .           		     _ForwardIterator __result)
  .               {
 12 ( 0.00%)        _ForwardIterator __cur = __result;
  .                 __try
  .           	{
491 ( 0.01%)  	  for (; __first != __last; ++__first, (void)++__cur)
4,754 ( 0.11%)  => /usr/include/c++/14/bits/stl_iterator.h:bool __gnu_cxx::operator!=<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&, __gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) (25x)
1,244 ( 0.03%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator++() (20x)
475 ( 0.01%)  	    std::_Construct(std::__addressof(*__cur), *__first);
3,952 ( 0.09%)  => /usr/include/c++/14/bits/stl_construct.h:void std::_Construct<GraphAlgo::Edge, GraphAlgo::Edge const&>(GraphAlgo::Edge*, GraphAlgo::Edge const&) (20x)
1,164 ( 0.03%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator*() const (20x)
1,144 ( 0.03%)  => /usr/include/c++/14/bits/move.h:GraphAlgo::Edge* std::__addressof<GraphAlgo::Edge>(GraphAlgo::Edge&) (20x)
 31 ( 0.00%)  	  return __cur;
  .           	}
  .                 __catch(...)
  .           	{
  .           	  std::_Destroy(__result, __cur);
  .           	  __throw_exception_again;
  .           	}
 18 ( 0.00%)      }
  .           
  .             template<bool _TrivialValueTypes>
  .               struct __uninitialized_copy
  .               {
  .                 template<typename _InputIterator, typename _ForwardIterator>
  .                   static _ForwardIterator
 66 ( 0.00%)          __uninit_copy(_InputIterator __first, _InputIterator __last,
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .           		      _ForwardIterator __result)
 78 ( 0.00%)  	{ return std::__do_uninit_copy(__first, __last, __result); }
24,246 ( 0.57%)  => /usr/include/c++/14/bits/stl_uninitialized.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > const*, std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > > >, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >*>(__gnu_cxx::__normal_iterator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > const*, std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > > >, __gnu_cxx::__normal_iterator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > const*, std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > > >, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >*) (1x)
  .               };
  .           
  .             template<>
  .               struct __uninitialized_copy<true>
  .               {
  .                 template<typename _InputIterator, typename _ForwardIterator>
  .                   static _ForwardIterator
  .                   __uninit_copy(_InputIterator __first, _InputIterator __last,
-- line 145 ----------------------------------------
-- line 155 ----------------------------------------
  .              *  @param  __last   An input iterator.
  .              *  @param  __result An output iterator.
  .              *  @return   __result + (__first - __last)
  .              *
  .              *  Like copy(), but does not require an initialized output range.
  .             */
  .             template<typename _InputIterator, typename _ForwardIterator>
  .               inline _ForwardIterator
 66 ( 0.00%)      uninitialized_copy(_InputIterator __first, _InputIterator __last,
229 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (5x)
  .           		       _ForwardIterator __result)
  .               {
  .                 typedef typename iterator_traits<_InputIterator>::value_type
  .           	_ValueType1;
  .                 typedef typename iterator_traits<_ForwardIterator>::value_type
  .           	_ValueType2;
  .           
  .                 // _ValueType1 must be trivially-copyable to use memmove, so don't
  .                 // bother optimizing to std::copy if it isn't.
  .                 // XXX Unnecessary because std::copy would check it anyway?
  6 ( 0.00%)        const bool __can_memmove = __is_trivial(_ValueType1);
  .           
  .           #if __cplusplus < 201103L
  .                 typedef typename iterator_traits<_InputIterator>::reference _From;
  .           #else
  .                 using _From = decltype(*__first);
  .           #endif
  6 ( 0.00%)        const bool __assignable
  .           	= _GLIBCXX_USE_ASSIGN_FOR_INIT(_ValueType2, _From);
  .           
  .                 return std::__uninitialized_copy<__can_memmove && __assignable>::
 66 ( 0.00%)  	__uninit_copy(__first, __last, __result);
13,721 ( 0.32%)  => /usr/include/c++/14/bits/stl_uninitialized.h:GraphAlgo::Edge* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, GraphAlgo::Edge*>(__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, __gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, GraphAlgo::Edge*) (5x)
 12 ( 0.00%)      }
  .           
  .             /// @cond undocumented
  .           
  .             template<typename _ForwardIterator, typename _Tp>
  .               _GLIBCXX20_CONSTEXPR void
  .               __do_uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
  .           		     const _Tp& __x)
  .               {
-- line 194 ----------------------------------------
-- line 358 ----------------------------------------
  .           	  __throw_exception_again;
  .           	}
  .               }
  .           
  .           #if _GLIBCXX_HOSTED
  .             template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
  .               _GLIBCXX20_CONSTEXPR
  .               inline _ForwardIterator
 72 ( 0.00%)      __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .           			   _ForwardIterator __result, allocator<_Tp>&)
  .               {
  .           #ifdef __cpp_lib_is_constant_evaluated
  .                 if (std::is_constant_evaluated())
  .           	return std::__do_uninit_copy(__first, __last, __result);
  .           #endif
 66 ( 0.00%)        return std::uninitialized_copy(__first, __last, __result);
24,394 ( 0.57%)  => /usr/include/c++/14/bits/stl_uninitialized.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > const*, std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > > >, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >*>(__gnu_cxx::__normal_iterator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > const*, std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > > >, __gnu_cxx::__normal_iterator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > const*, std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > > >, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >*) (1x)
 12 ( 0.00%)      }
  .           #endif
  .           
  .             template<typename _InputIterator, typename _ForwardIterator,
  .           	   typename _Allocator>
  .               _GLIBCXX20_CONSTEXPR
  .               inline _ForwardIterator
  .               __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
  .           			   _ForwardIterator __result, _Allocator& __alloc)
-- line 382 ----------------------------------------
-- line 629 ----------------------------------------
  .               };
  .           
  .             template<bool _TrivialValueType>
  .               struct __uninitialized_default_n_1
  .               {
  .                 template<typename _ForwardIterator, typename _Size>
  .           	_GLIBCXX20_CONSTEXPR
  .                   static _ForwardIterator
 10 ( 0.00%)          __uninit_default_n(_ForwardIterator __first, _Size __n)
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .                   {
  2 ( 0.00%)  	  _ForwardIterator __cur = __first;
  .           	  __try
  .           	    {
 41 ( 0.00%)  	      for (; __n > 0; --__n, (void) ++__cur)
 40 ( 0.00%)  		std::_Construct(std::__addressof(*__cur));
2,009 ( 0.05%)  => /usr/include/c++/14/bits/stl_construct.h:void std::_Construct<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >>(std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >*) (5x)
289 ( 0.01%)  => /usr/include/c++/14/bits/move.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >* std::__addressof<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >&) (5x)
  1 ( 0.00%)  	      return __cur;
  .           	    }
  .           	  __catch(...)
  .           	    {
  .           	      std::_Destroy(__first, __cur);
  .           	      __throw_exception_again;
  .           	    }
  2 ( 0.00%)  	}
  .               };
  .           
  .             template<>
  .               struct __uninitialized_default_n_1<true>
  .               {
  .                 template<typename _ForwardIterator, typename _Size>
  .           	_GLIBCXX20_CONSTEXPR
  .                   static _ForwardIterator
-- line 659 ----------------------------------------
-- line 688 ----------------------------------------
  .           	__uninit_default(__first, __last);
  .               }
  .           
  .             // __uninitialized_default_n
  .             // Fills [first, first + n) with value-initialized value_types.
  .             template<typename _ForwardIterator, typename _Size>
  .               _GLIBCXX20_CONSTEXPR
  .               inline _ForwardIterator
 10 ( 0.00%)      __uninitialized_default_n(_ForwardIterator __first, _Size __n)
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .               {
  .           #ifdef __cpp_lib_is_constant_evaluated
  .                 if (std::is_constant_evaluated())
  .           	return __uninitialized_default_n_1<false>::
  .           		 __uninit_default_n(__first, __n);
  .           #endif
  .           
  .                 typedef typename iterator_traits<_ForwardIterator>::value_type
  .           	_ValueType;
  .                 // See uninitialized_fill_n for the conditions for using std::fill_n.
  1 ( 0.00%)        constexpr bool __can_fill
  .           	= __and_<is_integral<_Size>, is_copy_assignable<_ValueType>>::value;
  .           
  .                 return __uninitialized_default_n_1<__is_trivial(_ValueType)
  .           					 && __can_fill>::
 10 ( 0.00%)  	__uninit_default_n(__first, __n);
2,443 ( 0.06%)  => /usr/include/c++/14/bits/stl_uninitialized.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >* std::__uninitialized_default_n_1<false>::__uninit_default_n<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >*, unsigned long>(std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >*, unsigned long) (1x)
  2 ( 0.00%)      }
  .           
  .           
  .             // __uninitialized_default_a
  .             // Fills [first, last) with value_types constructed by the allocator
  .             // alloc, with no arguments passed to the construct call.
  .             template<typename _ForwardIterator, typename _Allocator>
  .               void
  .               __uninitialized_default_a(_ForwardIterator __first,
-- line 721 ----------------------------------------
-- line 769 ----------------------------------------
  .               }
  .           
  .           #if _GLIBCXX_HOSTED
  .             // __uninitialized_default_n_a specialization for std::allocator,
  .             // which ignores the allocator and value-initializes the elements.
  .             template<typename _ForwardIterator, typename _Size, typename _Tp>
  .               _GLIBCXX20_CONSTEXPR
  .               inline _ForwardIterator
 11 ( 0.00%)      __uninitialized_default_n_a(_ForwardIterator __first, _Size __n,
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .           				allocator<_Tp>&)
 12 ( 0.00%)      { return std::__uninitialized_default_n(__first, __n); }
2,515 ( 0.06%)  => /usr/include/c++/14/bits/stl_uninitialized.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >* std::__uninitialized_default_n<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >*, unsigned long>(std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >*, unsigned long) (1x)
  .           #endif
  .           
  .             template<bool _TrivialValueType>
  .               struct __uninitialized_default_novalue_1
  .               {
  .                 template<typename _ForwardIterator>
  .           	static void
  .           	__uninit_default_novalue(_ForwardIterator __first,
-- line 787 ----------------------------------------
-- line 1059 ----------------------------------------
  .           #endif // __glibcxx_raw_memory_algorithms
  .           
  .           #if __cplusplus >= 201103L
  .             /// @cond undocumented
  .           
  .             template<typename _Tp, typename _Up, typename _Allocator>
  .               _GLIBCXX20_CONSTEXPR
  .               inline void
195 ( 0.00%)      __relocate_object_a(_Tp* __restrict __dest, _Up* __restrict __orig,
679 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (15x)
  .           			_Allocator& __alloc)
  .               noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
  .           			 __dest, std::move(*__orig)))
  .           	     && noexcept(std::allocator_traits<_Allocator>::destroy(
  .           			    __alloc, std::__addressof(*__orig))))
  .               {
  .                 typedef std::allocator_traits<_Allocator> __traits;
165 ( 0.00%)        __traits::construct(__alloc, __dest, std::move(*__orig));
859 ( 0.02%)  => /usr/include/c++/14/bits/move.h:std::remove_reference<GraphAlgo::Edge&>::type&& std::move<GraphAlgo::Edge&>(GraphAlgo::Edge&) (15x)
195 ( 0.00%)        __traits::destroy(__alloc, std::__addressof(*__orig));
859 ( 0.02%)  => /usr/include/c++/14/bits/move.h:GraphAlgo::Edge* std::__addressof<GraphAlgo::Edge>(GraphAlgo::Edge&) (15x)
 90 ( 0.00%)      }
  .           
  .             // This class may be specialized for specific types.
  .             // Also known as is_trivially_relocatable.
  .             template<typename _Tp, typename = void>
  .               struct __is_bitwise_relocatable
  .               : is_trivial<_Tp> { };
  .           
  .             template <typename _InputIterator, typename _ForwardIterator,
  .           	    typename _Allocator>
  .               _GLIBCXX20_CONSTEXPR
  .               inline _ForwardIterator
195 ( 0.00%)      __relocate_a_1(_InputIterator __first, _InputIterator __last,
679 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (15x)
  .           		   _ForwardIterator __result, _Allocator& __alloc)
  .               noexcept(noexcept(std::__relocate_object_a(std::addressof(*__result),
  .           					       std::addressof(*__first),
  .           					       __alloc)))
  .               {
  .                 typedef typename iterator_traits<_InputIterator>::value_type
  .           	_ValueType;
  .                 typedef typename iterator_traits<_ForwardIterator>::value_type
  .           	_ValueType2;
  .                 static_assert(std::is_same<_ValueType, _ValueType2>::value,
  .           	  "relocation is only possible for values of the same type");
 30 ( 0.00%)        _ForwardIterator __cur = __result;
225 ( 0.01%)        for (; __first != __last; ++__first, (void)++__cur)
285 ( 0.01%)  	std::__relocate_object_a(std::__addressof(*__cur),
6,189 ( 0.14%)  => /usr/include/c++/14/bits/stl_uninitialized.h:void std::__relocate_object_a<GraphAlgo::Edge, GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >(GraphAlgo::Edge*, GraphAlgo::Edge*, std::allocator<GraphAlgo::Edge>&) (15x)
1,718 ( 0.04%)  => /usr/include/c++/14/bits/move.h:GraphAlgo::Edge* std::__addressof<GraphAlgo::Edge>(GraphAlgo::Edge&) (30x)
  .           				 std::__addressof(*__first), __alloc);
 15 ( 0.00%)        return __cur;
 45 ( 0.00%)      }
  .           
  .           #if _GLIBCXX_HOSTED
  .             template <typename _Tp, typename _Up>
  .               _GLIBCXX20_CONSTEXPR
  .               inline __enable_if_t<std::__is_bitwise_relocatable<_Tp>::value, _Tp*>
 60 ( 0.00%)      __relocate_a_1(_Tp* __first, _Tp* __last,
229 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (5x)
  .           		   _Tp* __result,
  .           		   [[__maybe_unused__]] allocator<_Up>& __alloc) noexcept
  .               {
 20 ( 0.00%)        ptrdiff_t __count = __last - __first;
 22 ( 0.00%)        if (__count > 0)
  .           	{
  .           #ifdef __cpp_lib_is_constant_evaluated
  .           	  if (std::is_constant_evaluated())
  .           	    {
  .           	      // Can't use memcpy. Wrap the pointer so that __relocate_a_1
  .           	      // resolves to the non-trivial overload above.
  .           	      __gnu_cxx::__normal_iterator<_Tp*, void> __out(__result);
  .           	      __out = std::__relocate_a_1(__first, __last, __out, __alloc);
  .           	      return __out.base();
  .           	    }
  .           #endif
 44 ( 0.00%)  	  __builtin_memcpy(__result, __first, __count * sizeof(_Tp));
937 ( 0.02%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
 47 ( 0.00%)  => ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_avx_unaligned_erms (4x)
  .           	}
 20 ( 0.00%)        return __result + __count;
 10 ( 0.00%)      }
  .           #endif
  .           
  .             template <typename _InputIterator, typename _ForwardIterator,
  .           	    typename _Allocator>
  .               _GLIBCXX20_CONSTEXPR
  .               inline _ForwardIterator
280 ( 0.01%)      __relocate_a(_InputIterator __first, _InputIterator __last,
679 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (15x)
  .           		 _ForwardIterator __result, _Allocator& __alloc)
  .               noexcept(noexcept(__relocate_a_1(std::__niter_base(__first),
  .           				     std::__niter_base(__last),
  .           				     std::__niter_base(__result), __alloc)))
  .               {
540 ( 0.01%)        return std::__relocate_a_1(std::__niter_base(__first),
9,381 ( 0.22%)  => /usr/include/c++/14/bits/stl_uninitialized.h:GraphAlgo::Edge* std::__relocate_a_1<GraphAlgo::Edge*, GraphAlgo::Edge*, std::allocator<GraphAlgo::Edge> >(GraphAlgo::Edge*, GraphAlgo::Edge*, GraphAlgo::Edge*, std::allocator<GraphAlgo::Edge>&) (15x)
2,577 ( 0.06%)  => /usr/include/c++/14/bits/stl_algobase.h:GraphAlgo::Edge* std::__niter_base<GraphAlgo::Edge*>(GraphAlgo::Edge*) (45x)
  .           				 std::__niter_base(__last),
100 ( 0.00%)  				 std::__niter_base(__result), __alloc);
100 ( 0.00%)      }
  .           
  .             /// @endcond
  .           #endif // C++11
  .           
  .             /// @} group memory
  .           
  .           _GLIBCXX_END_NAMESPACE_VERSION
  .           } // namespace
-- line 1156 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: main.cpp
--------------------------------------------------------------------------------
Ir             

-- line 10 ----------------------------------------
    .           
    .           using namespace std;
    .           using namespace GraphAlgo;
    .           
    .           void print_usage() {
    .               cout << "Usage: ./main -v <vertices> -e <edges> -s <seed>" << endl;
    .           }
    .           
   15 ( 0.00%)  int main(int argc, char* argv[]) {
  778 ( 0.02%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
   29 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    3 ( 0.00%)      int vertices = -1, edges = -1, seed = -1;
    .           
    .               int opt;
   65 ( 0.00%)      while ((opt = getopt(argc, argv, "v:e:s:")) != -1) {
  771 ( 0.02%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
1,393 ( 0.03%)  => ./posix/./posix/getopt.c:getopt (4x)
   19 ( 0.00%)          switch (opt) {
    .                       case 'v':
    9 ( 0.00%)                  vertices = atoi(optarg);
  751 ( 0.02%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
  108 ( 0.00%)  => ./stdlib/./stdlib/atoi.c:atoi (1x)
    4 ( 0.00%)                  break;
    .                       case 'e':
    5 ( 0.00%)                  edges = atoi(optarg);
  128 ( 0.00%)  => ./stdlib/./stdlib/atoi.c:atoi (1x)
    4 ( 0.00%)                  break;
    .                       case 's':
    5 ( 0.00%)                  seed = atoi(optarg);
  148 ( 0.00%)  => ./stdlib/./stdlib/atoi.c:atoi (1x)
    1 ( 0.00%)                  break;
    .                       default:
    .                           print_usage();
    .                           return 1;
    .                   }
    .               }
    .           
   12 ( 0.00%)      if (vertices <= 0 || edges < 0 || seed < 0) {
    .                   print_usage();
    3 ( 0.00%)          return 1;
    .               }
    .           
    9 ( 0.00%)      if (edges > vertices * (vertices - 1) / 2) {
    .                   cout << "Too many edges for undirected simple graph." << endl;
    .                   return 1;
    .               }
    .           
   11 ( 0.00%)      srand(seed);
10,256 ( 0.24%)  => ./stdlib/./stdlib/random.c:srand (1x)
  783 ( 0.02%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
   16 ( 0.00%)      Graph g(vertices, false);
5,107 ( 0.12%)  => /home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/Graph.hpp:GraphAlgo::Graph::~Graph() (1x)
4,615 ( 0.11%)  => /home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/Graph.cpp:GraphAlgo::Graph::Graph(int, bool) (1x)
    .           
    9 ( 0.00%)      set<pair<int, int>> used_edges;
9,818 ( 0.23%)  => /usr/include/c++/14/bits/stl_set.h:std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::~set() (1x)
  415 ( 0.01%)  => /usr/include/c++/14/bits/stl_set.h:std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::set() (1x)
  722 ( 0.02%)      while (used_edges.size() < static_cast<size_t>(edges)) {
5,543 ( 0.13%)  => /usr/include/c++/14/bits/stl_set.h:std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::size() const (45x)
  400 ( 0.01%)      int u = rand() % vertices;
  776 ( 0.02%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
2,243 ( 0.05%)  => ./stdlib/./stdlib/rand.c:rand (44x)
  264 ( 0.01%)      int v = rand() % vertices;
2,243 ( 0.05%)  => ./stdlib/./stdlib/rand.c:rand (44x)
  318 ( 0.01%)      if (u == v) continue;
1,282 ( 0.03%)      if (used_edges.count({min(u, v), max(u, v)})) continue;
104,424 ( 2.44%)  => /usr/include/c++/14/bits/stl_set.h:std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::count(std::pair<int, int> const&) const (34x)
2,282 ( 0.05%)  => /usr/include/c++/14/bits/stl_pair.h:std::pair<int, int>::pair<int, int, true>(int const&, int const&) (34x)
2,260 ( 0.05%)  => /usr/include/c++/14/bits/stl_algobase.h:int const& std::min<int>(int const&, int const&) (34x)
2,236 ( 0.05%)  => /usr/include/c++/14/bits/stl_algobase.h:int const& std::max<int>(int const&, int const&) (34x)
    .           
   90 ( 0.00%)      g.addEdge(u, v);
75,916 ( 1.77%)  => /home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/Graph.cpp:GraphAlgo::Graph::addEdge(int, int, int) (10x)
  330 ( 0.01%)      used_edges.insert({min(u, v), max(u, v)});
57,495 ( 1.34%)  => /usr/include/c++/14/bits/stl_set.h:std::set<std::pair<int, int>, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::insert(std::pair<int, int>&&) (10x)
  674 ( 0.02%)  => /usr/include/c++/14/bits/stl_pair.h:std::pair<int, int>::pair<int, int, true>(int const&, int const&) (10x)
  672 ( 0.02%)  => /usr/include/c++/14/bits/stl_algobase.h:int const& std::min<int>(int const&, int const&) (10x)
  656 ( 0.02%)  => /usr/include/c++/14/bits/stl_algobase.h:int const& std::max<int>(int const&, int const&) (10x)
    .               }
    .           
    .           
   26 ( 0.00%)      cout << "Generated random graph:" << endl;
5,188 ( 0.12%)  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
5,694 ( 0.13%)  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
1,739 ( 0.04%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (2x)
    7 ( 0.00%)      g.printGraph();
50,889 ( 1.19%)  => /home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/Graph.cpp:GraphAlgo::Graph::printGraph() const (1x)
    .           
    9 ( 0.00%)      GraphAlgorithms algo(g);
   65 ( 0.00%)  => /home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/GraphAlgorithms.cpp:GraphAlgo::GraphAlgorithms::GraphAlgorithms(GraphAlgo::Graph const&) (1x)
    .           
   12 ( 0.00%)      if (algo.isEulerian()) {
45,070 ( 1.05%)  => /home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/GraphAlgorithms.cpp:GraphAlgo::GraphAlgorithms::isEulerian() const (1x)
   18 ( 0.00%)          cout << "The graph is Eulerian!" << endl;
  352 ( 0.01%)  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
  409 ( 0.01%)  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
    .           
    8 ( 0.00%)          vector<int> circuit = algo.findEulerianCircuit();
175,144 ( 4.09%)  => /home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/GraphAlgorithms.cpp:GraphAlgo::GraphAlgorithms::findEulerianCircuit() const (1x)
    9 ( 0.00%)          cout << "Eulerian Circuit: ";
  332 ( 0.01%)  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (1x)
  199 ( 0.00%)          for (size_t i = 0; i < circuit.size(); ++i) {
  760 ( 0.02%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<int, std::allocator<int> >::size() const (12x)
  198 ( 0.00%)              cout << circuit[i];
4,123 ( 0.10%)  => ???:std::ostream::operator<<(int) (11x)
  686 ( 0.02%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<int, std::allocator<int> >::operator[](unsigned long) (11x)
  151 ( 0.00%)              if (i != circuit.size() - 1)
  697 ( 0.02%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<int, std::allocator<int> >::size() const (11x)
   70 ( 0.00%)                  cout << " -> ";
2,660 ( 0.06%)  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (10x)
    .                   }
   10 ( 0.00%)          cout << endl;
  410 ( 0.01%)  => ???:std::ostream::operator<<(std::ostream& (*)(std::ostream&)) (1x)
    7 ( 0.00%)      } else {
  724 ( 0.02%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<int, std::allocator<int> >::~vector() (1x)
    .                   cout << "The graph is NOT Eulerian." << endl;
    .               }
    .           
    1 ( 0.00%)      return 0;
   17 ( 0.00%)  }
   29 ( 0.00%)  => ???:__gcov_init (1x)

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/bits/new_allocator.h
--------------------------------------------------------------------------------
Ir             

-- line 80 ----------------------------------------
    .           #if __cplusplus >= 201103L
    .                 // _GLIBCXX_RESOLVE_LIB_DEFECTS
    .                 // 2103. propagate_on_container_move_assignment
    .                 typedef std::true_type propagate_on_container_move_assignment;
    .           #endif
    .           
    .                 __attribute__((__always_inline__))
    .                 _GLIBCXX20_CONSTEXPR
   15 ( 0.00%)        __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
    .           
    .                 __attribute__((__always_inline__))
    .                 _GLIBCXX20_CONSTEXPR
   16 ( 0.00%)        __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
    .           
    .                 template<typename _Tp1>
    .           	__attribute__((__always_inline__))
    .           	_GLIBCXX20_CONSTEXPR
    .           	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
    .           
    .           #if __cplusplus >= 201103L
    .                 __new_allocator& operator=(const __new_allocator&) = default;
    .           #endif
    .           
    .           #if __cplusplus <= 201703L
  372 ( 0.01%)        ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .           
    .                 pointer
    .                 address(reference __x) const _GLIBCXX_NOEXCEPT
    .                 { return std::__addressof(__x); }
    .           
    .                 const_pointer
    .                 address(const_reference __x) const _GLIBCXX_NOEXCEPT
    .                 { return std::__addressof(__x); }
-- line 112 ----------------------------------------
-- line 118 ----------------------------------------
    .           #else
    .           # define _GLIBCXX_OPERATOR_NEW ::operator new
    .           # define _GLIBCXX_OPERATOR_DELETE ::operator delete
    .           #endif
    .           
    .                 // NB: __n is permitted to be 0.  The C++ standard says nothing
    .                 // about what the return value is when __n == 0.
    .                 _GLIBCXX_NODISCARD _Tp*
  533 ( 0.01%)        allocate(size_type __n, const void* = static_cast<const void*>(0))
  278 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (6x)
    .                 {
    .           #if __cplusplus >= 201103L
    .           	// _GLIBCXX_RESOLVE_LIB_DEFECTS
    .           	// 3308. std::allocator<void>().allocate(n)
    .           	static_assert(sizeof(_Tp) != 0, "cannot allocate incomplete types");
    .           #endif
    .           
  287 ( 0.01%)  	if (__builtin_expect(__n > this->_M_max_size(), false))
    .           	  {
    .           	    // _GLIBCXX_RESOLVE_LIB_DEFECTS
    .           	    // 3190. allocator::allocate sometimes returns too little storage
    .           	    if (__n > (std::size_t(-1) / sizeof(_Tp)))
    .           	      std::__throw_bad_array_new_length();
    .           	    std::__throw_bad_alloc();
    .           	  }
    .           
-- line 142 ----------------------------------------
-- line 143 ----------------------------------------
    .           #if __cpp_aligned_new && __cplusplus >= 201103L
    .           	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
    .           	  {
    .           	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
    .           	    return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp),
    .           							   __al));
    .           	  }
    .           #endif
  450 ( 0.01%)  	return static_cast<_Tp*>(_GLIBCXX_OPERATOR_NEW(__n * sizeof(_Tp)));
  754 ( 0.02%)  => ???:operator new(unsigned long) (6x)
  123 ( 0.00%)        }
    .           
    .                 // __p is not permitted to be a null pointer.
    .                 void
  451 ( 0.01%)        deallocate(_Tp* __p, size_type __n __attribute__ ((__unused__)))
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
    .                 {
    .           #if __cpp_sized_deallocation
    .           # define _GLIBCXX_SIZED_DEALLOC(p, n) (p), (n) * sizeof(_Tp)
    .           #else
    .           # define _GLIBCXX_SIZED_DEALLOC(p, n) (p)
    .           #endif
    .           
    .           #if __cpp_aligned_new && __cplusplus >= 201103L
    .           	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
    .           	  {
    .           	    _GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n),
    .           				     std::align_val_t(alignof(_Tp)));
    .           	    return;
    .           	  }
    .           #endif
  462 ( 0.01%)  	_GLIBCXX_OPERATOR_DELETE(_GLIBCXX_SIZED_DEALLOC(__p, __n));
  142 ( 0.00%)  => ???:operator delete(void*, unsigned long) (2x)
   82 ( 0.00%)        }
    .           
    .           #undef _GLIBCXX_SIZED_DEALLOC
    .           #undef _GLIBCXX_OPERATOR_DELETE
    .           #undef _GLIBCXX_OPERATOR_NEW
    .           
    .           #if __cplusplus <= 201703L
    .                 __attribute__((__always_inline__))
    .                 size_type
    .                 max_size() const _GLIBCXX_USE_NOEXCEPT
   41 ( 0.00%)        { return _M_max_size(); }
    .           
    .           #if __cplusplus >= 201103L
    .                 template<typename _Up, typename... _Args>
    .           	__attribute__((__always_inline__))
    .           	void
    .           	construct(_Up* __p, _Args&&... __args)
    .           	noexcept(__is_nothrow_new_constructible<_Up, _Args...>)
1,801 ( 0.04%)  	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  584 ( 0.01%)  => /usr/include/c++/14/new:operator new(unsigned long, void*) (10x)
  574 ( 0.01%)  => /usr/include/c++/14/bits/move.h:std::pair<int, int>&& std::forward<std::pair<int, int> >(std::remove_reference<std::pair<int, int> >::type&) (10x)
    .           
    .                 template<typename _Up>
    .           	__attribute__((__always_inline__))
    .           	void
    .           	destroy(_Up* __p)
    .           	noexcept(std::is_nothrow_destructible<_Up>::value)
   86 ( 0.00%)  	{ __p->~_Up(); }
    .           #else
    .                 // _GLIBCXX_RESOLVE_LIB_DEFECTS
    .                 // 402. wrong new expression in [some_] allocator::construct
    .                 __attribute__((__always_inline__))
    .                 void
    .                 construct(pointer __p, const _Tp& __val)
    .                 { ::new((void *)__p) _Tp(__val); }
    .           
-- line 206 ----------------------------------------
-- line 225 ----------------------------------------
    .           #endif
    .           
    .               private:
    .                 __attribute__((__always_inline__))
    .                 _GLIBCXX_CONSTEXPR size_type
    .                 _M_max_size() const _GLIBCXX_USE_NOEXCEPT
    .                 {
    .           #if __PTRDIFF_MAX__ < __SIZE_MAX__
   82 ( 0.00%)  	return std::size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
    .           #else
    .           	return std::size_t(-1) / sizeof(_Tp);
    .           #endif
    .                 }
    .               };
    .           
    .           _GLIBCXX_END_NAMESPACE_VERSION
    .           } // namespace
-- line 241 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/ext/aligned_buffer.h
--------------------------------------------------------------------------------
Ir             

-- line 56 ----------------------------------------
    .                 alignas(__alignof__(_Tp2::_M_t)) unsigned char _M_storage[sizeof(_Tp)];
    .           
    .                 __aligned_membuf() = default;
    .           
    .                 // Can be used to avoid value-initialization zeroing _M_storage.
    .                 __aligned_membuf(std::nullptr_t) { }
    .           
    .                 void*
  180 ( 0.00%)        _M_addr() noexcept
  904 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (20x)
   60 ( 0.00%)        { return static_cast<void*>(&_M_storage); }
    .           
    .                 const void*
1,566 ( 0.04%)        _M_addr() const noexcept
7,834 ( 0.18%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (174x)
  522 ( 0.01%)        { return static_cast<const void*>(&_M_storage); }
    .           
    .                 _Tp*
  180 ( 0.00%)        _M_ptr() noexcept
  904 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (20x)
  220 ( 0.01%)        { return static_cast<_Tp*>(_M_addr()); }
1,144 ( 0.03%)  => /usr/include/c++/14/ext/aligned_buffer.h:__gnu_cxx::__aligned_membuf<std::pair<int, int> >::_M_addr() (20x)
    .           
    .                 const _Tp*
1,566 ( 0.04%)        _M_ptr() const noexcept
7,834 ( 0.18%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (174x)
1,914 ( 0.04%)        { return static_cast<const _Tp*>(_M_addr()); }
9,922 ( 0.23%)  => /usr/include/c++/14/ext/aligned_buffer.h:__gnu_cxx::__aligned_membuf<std::pair<int, int> >::_M_addr() const (174x)
    .               };
    .           
    .           #if _GLIBCXX_INLINE_VERSION
    .             template<typename _Tp>
    .               using __aligned_buffer = __aligned_membuf<_Tp>;
    .           #else
    .           #pragma GCC diagnostic push
    .           #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
-- line 85 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/bits/stl_algobase.h
--------------------------------------------------------------------------------
Ir           

-- line 147 ----------------------------------------
  .              *  @return   Nothing.
  .              *
  .              *  This function swaps the values pointed to by two iterators, not the
  .              *  iterators themselves.
  .             */
  .             template<typename _ForwardIterator1, typename _ForwardIterator2>
  .               _GLIBCXX20_CONSTEXPR
  .               inline void
 55 ( 0.00%)      iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
229 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (5x)
  .               {
  .                 // concept requirements
  .                 __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
  .           				  _ForwardIterator1>)
  .                 __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
  .           				  _ForwardIterator2>)
  .           
  .           #if __cplusplus < 201103L
-- line 163 ----------------------------------------
-- line 177 ----------------------------------------
  .           	_ReferenceType2;
  .                 std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
  .           	&& __are_same<_ValueType1&, _ReferenceType1>::__value
  .           	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
  .           	iter_swap(__a, __b);
  .           #else
  .                 // _GLIBCXX_RESOLVE_LIB_DEFECTS
  .                 // 187. iter_swap underspecified
 95 ( 0.00%)        swap(*__a, *__b);
1,291 ( 0.03%)  => /usr/include/c++/14/bits/move.h:std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<int> >, std::is_move_constructible<int>, std::is_move_assignable<int> >::value, void>::type std::swap<int>(int&, int&) (5x)
588 ( 0.01%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::operator*() const (10x)
  .           #endif
 20 ( 0.00%)      }
  .           
  .             /**
  .              *  @brief Swap the elements of two sequences.
  .              *  @ingroup mutating_algorithms
  .              *  @param  __first1  A forward iterator.
  .              *  @param  __last1   A forward iterator.
  .              *  @param  __first2  A forward iterator.
  .              *  @return   An iterator equal to @p first2+(last1-first1).
-- line 195 ----------------------------------------
-- line 225 ----------------------------------------
  .              *
  .              *  This is the simple classic generic implementation.  It will work on
  .              *  temporary expressions, since they are only evaluated once, unlike a
  .              *  preprocessor macro.
  .             */
  .             template<typename _Tp>
  .               _GLIBCXX_NODISCARD _GLIBCXX14_CONSTEXPR
  .               inline const _Tp&
850 ( 0.02%)      min(const _Tp& __a, const _Tp& __b)
1,988 ( 0.05%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (44x)
  .               {
  .                 // concept requirements
  .                 __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
  .                 //return __b < __a ? __b : __a;
591 ( 0.01%)        if (__b < __a)
 54 ( 0.00%)  	return __b;
 58 ( 0.00%)        return __a;
170 ( 0.00%)      }
  .           
  .             /**
  .              *  @brief This does what you think it does.
  .              *  @ingroup sorting_algorithms
  .              *  @param  __a  A thing of arbitrary type.
  .              *  @param  __b  Another thing of arbitrary type.
  .              *  @return   The greater of the parameters.
  .              *
  .              *  This is the simple classic generic implementation.  It will work on
  .              *  temporary expressions, since they are only evaluated once, unlike a
  .              *  preprocessor macro.
  .             */
  .             template<typename _Tp>
  .               _GLIBCXX_NODISCARD _GLIBCXX14_CONSTEXPR
  .               inline const _Tp&
650 ( 0.02%)      max(const _Tp& __a, const _Tp& __b)
1,988 ( 0.05%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (44x)
  .               {
  .                 // concept requirements
  .                 __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
  .                 //return  __a < __b ? __b : __a;
459 ( 0.01%)        if (__a < __b)
 46 ( 0.00%)  	return __b;
 42 ( 0.00%)        return __a;
130 ( 0.00%)      }
  .           
  .             /**
  .              *  @brief This does what you think it does.
  .              *  @ingroup sorting_algorithms
  .              *  @param  __a  A thing of arbitrary type.
  .              *  @param  __b  Another thing of arbitrary type.
  .              *  @param  __comp  A @link comparison_functors comparison functor@endlink.
  .              *  @return   The lesser of the parameters.
-- line 273 ----------------------------------------
-- line 308 ----------------------------------------
  .                 return __a;
  .               }
  .           
  .             // Fallback implementation of the function in bits/stl_iterator.h used to
  .             // remove the __normal_iterator wrapper. See copy, fill, ...
  .             template<typename _Iterator>
  .               _GLIBCXX20_CONSTEXPR
  .               inline _Iterator
576 ( 0.01%)      __niter_base(_Iterator __it)
2,221 ( 0.05%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (49x)
  .               _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
192 ( 0.00%)      { return __it; }
  .           
  .           #if __cplusplus < 201103L
  .             template<typename _Ite, typename _Seq>
  .               _Ite
  .               __niter_base(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq,
  .           		 std::random_access_iterator_tag>&);
  .           
  .            template<typename _Ite, typename _Cont, typename _Seq>
-- line 326 ----------------------------------------
-- line 338 ----------------------------------------
  .           #endif
  .           
  .             // Reverse the __niter_base transformation to get a
  .             // __normal_iterator back again (this assumes that __normal_iterator
  .             // is only used to wrap random access iterators, like pointers).
  .             template<typename _From, typename _To>
  .               _GLIBCXX20_CONSTEXPR
  .               inline _From
 44 ( 0.00%)      __niter_wrap(_From __from, _To __res)
184 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (4x)
124 ( 0.00%)      { return __from + (std::__niter_base(__res) - std::__niter_base(__from)); }
540 ( 0.01%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator+(long) const (4x)
484 ( 0.01%)  => /usr/include/c++/14/bits/stl_iterator.h:GraphAlgo::Edge* std::__niter_base<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >) (4x)
232 ( 0.01%)  => /usr/include/c++/14/bits/stl_algobase.h:GraphAlgo::Edge* std::__niter_base<GraphAlgo::Edge*>(GraphAlgo::Edge*) (4x)
  .           
  .             // No need to wrap, iterator already has the right type.
  .             template<typename _Iterator>
  .               _GLIBCXX20_CONSTEXPR
  .               inline _Iterator
  .               __niter_wrap(const _Iterator&, _Iterator __res)
  .               { return __res; }
  .           
-- line 355 ----------------------------------------
-- line 429 ----------------------------------------
  .           	      ++__first;
  .           	      ++__result;
  .           	    }
  .           	  return __result;
  .           	}
  .           
  .                 template<typename _Tp, typename _Up>
  .           	static void
 20 ( 0.00%)  	__assign_one(_Tp* __to, _Up* __from)
 94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
 24 ( 0.00%)  	{ *__to = std::move(*__from); }
118 ( 0.00%)  => /usr/include/c++/14/bits/move.h:std::remove_reference<GraphAlgo::Edge&>::type&& std::move<GraphAlgo::Edge&>(GraphAlgo::Edge&) (2x)
  .               };
  .           #endif
  .           
  .             template<bool _IsMove>
  .               struct __copy_move<_IsMove, true, random_access_iterator_tag>
  .               {
  .                 template<typename _Tp, typename _Up>
  .           	_GLIBCXX20_CONSTEXPR
  .           	static _Up*
 44 ( 0.00%)  	__copy_m(_Tp* __first, _Tp* __last, _Up* __result)
184 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (4x)
  .           	{
 16 ( 0.00%)  	  const ptrdiff_t _Num = __last - __first;
 26 ( 0.00%)  	  if (__builtin_expect(_Num > 1, true))
 22 ( 0.00%)  	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
820 ( 0.02%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
 20 ( 0.00%)  => ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S:__memcpy_avx_unaligned_erms (2x)
 10 ( 0.00%)  	  else if (_Num == 1)
  .           	    std::__copy_move<_IsMove, false, random_access_iterator_tag>::
 10 ( 0.00%)  	      __assign_one(__result, __first);
256 ( 0.01%)  => /usr/include/c++/14/bits/stl_algobase.h:void std::__copy_move<true, false, std::random_access_iterator_tag>::__assign_one<GraphAlgo::Edge, GraphAlgo::Edge>(GraphAlgo::Edge*, GraphAlgo::Edge*) (2x)
 32 ( 0.00%)  	  return __result + _Num;
  8 ( 0.00%)  	}
  .               };
  .           
  .           _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  .           
  .             template<typename _Tp, typename _Ref, typename _Ptr>
  .               struct _Deque_iterator;
  .           
  .             struct _Bit_iterator;
-- line 465 ----------------------------------------
-- line 504 ----------------------------------------
  .           	istreambuf_iterator<_CharT, char_traits<_CharT> >,
  .           	istreambuf_iterator<_CharT, char_traits<_CharT> >,
  .           	_GLIBCXX_STD_C::_Deque_iterator<_CharT, _CharT&, _CharT*>);
  .           #endif // HOSTED
  .           
  .             template<bool _IsMove, typename _II, typename _OI>
  .               _GLIBCXX20_CONSTEXPR
  .               inline _OI
 44 ( 0.00%)      __copy_move_a2(_II __first, _II __last, _OI __result)
184 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (4x)
  .               {
  .                 typedef typename iterator_traits<_II>::iterator_category _Category;
  .           #ifdef __cpp_lib_is_constant_evaluated
  .                 if (std::is_constant_evaluated())
  .           	return std::__copy_move<_IsMove, false, _Category>::
  .           	  __copy_m(__first, __last, __result);
  .           #endif
  .                 return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 44 ( 0.00%)  			      _Category>::__copy_m(__first, __last, __result);
1,448 ( 0.03%)  => /usr/include/c++/14/bits/stl_algobase.h:GraphAlgo::Edge* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<GraphAlgo::Edge, GraphAlgo::Edge>(GraphAlgo::Edge*, GraphAlgo::Edge*, GraphAlgo::Edge*) (4x)
  8 ( 0.00%)      }
  .           
  .             template<bool _IsMove,
  .           	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
  .               _OI
  .               __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
  .           		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
  .           		   _OI);
  .           
-- line 530 ----------------------------------------
-- line 539 ----------------------------------------
  .               typename __gnu_cxx::__enable_if<
  .                 __is_random_access_iter<_II>::__value,
  .                 _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
  .               __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
  .           
  .             template<bool _IsMove, typename _II, typename _OI>
  .               _GLIBCXX20_CONSTEXPR
  .               inline _OI
 44 ( 0.00%)      __copy_move_a1(_II __first, _II __last, _OI __result)
184 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (4x)
 52 ( 0.00%)      { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
1,728 ( 0.04%)  => /usr/include/c++/14/bits/stl_algobase.h:GraphAlgo::Edge* std::__copy_move_a2<true, GraphAlgo::Edge*, GraphAlgo::Edge*>(GraphAlgo::Edge*, GraphAlgo::Edge*, GraphAlgo::Edge*) (4x)
  .           
  .             template<bool _IsMove, typename _II, typename _OI>
  .               _GLIBCXX20_CONSTEXPR
  .               inline _OI
 52 ( 0.00%)      __copy_move_a(_II __first, _II __last, _OI __result)
184 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (4x)
  .               {
132 ( 0.00%)        return std::__niter_wrap(__result,
2,008 ( 0.05%)  => /usr/include/c++/14/bits/stl_algobase.h:GraphAlgo::Edge* std::__copy_move_a1<true, GraphAlgo::Edge*, GraphAlgo::Edge*>(GraphAlgo::Edge*, GraphAlgo::Edge*, GraphAlgo::Edge*) (4x)
1,608 ( 0.04%)  => /usr/include/c++/14/bits/stl_algobase.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > std::__niter_wrap<__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, GraphAlgo::Edge*>(__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, GraphAlgo::Edge*) (4x)
1,456 ( 0.03%)  => /usr/include/c++/14/bits/stl_iterator.h:GraphAlgo::Edge* std::__niter_base<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >) (12x)
  .           		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
  .           					     std::__niter_base(__last),
 20 ( 0.00%)  					     std::__niter_base(__result)));
 20 ( 0.00%)      }
  .           
  .             template<bool _IsMove,
  .           	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
  .               _GLIBCXX20_CONSTEXPR
  .               _OI
  .               __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
  .           		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
  .           		  _OI);
-- line 567 ----------------------------------------
-- line 667 ----------------------------------------
  .              *  [first,last); the move_backward function should be used instead.
  .              *
  .              *  Note that the end of the output range is permitted to be contained
  .              *  within [first,last).
  .             */
  .             template<typename _II, typename _OI>
  .               _GLIBCXX20_CONSTEXPR
  .               inline _OI
 48 ( 0.00%)      move(_II __first, _II __last, _OI __result)
184 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (4x)
  .               {
  .                 // concept requirements
  .                 __glibcxx_function_requires(_InputIteratorConcept<_II>)
  .                 __glibcxx_function_requires(_OutputIteratorConcept<_OI,
  .           	    typename iterator_traits<_II>::value_type&&>)
  .                 __glibcxx_requires_can_increment_range(__first, __last, __result);
  .           
 80 ( 0.00%)        return std::__copy_move_a<true>(std::__miter_base(__first),
5,480 ( 0.13%)  => /usr/include/c++/14/bits/stl_algobase.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > std::__copy_move_a<true, __gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, __gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, __gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, __gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >) (4x)
464 ( 0.01%)  => /usr/include/c++/14/bits/cpp_type_traits.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > std::__miter_base<__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >) (8x)
 20 ( 0.00%)  				      std::__miter_base(__last), __result);
 12 ( 0.00%)      }
  .           
  .           #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
  .           #else
  .           #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
  .           #endif
  .           
  .             template<bool _IsMove, bool _IsSimple, typename _Category>
  .               struct __copy_move_backward
-- line 693 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/bits/stl_tree.h
--------------------------------------------------------------------------------
Ir             

-- line 134 ----------------------------------------
    .             };
    .           
    .             // Helper type offering value initialization guarantee on the compare functor.
    .             template<typename _Key_compare>
    .               struct _Rb_tree_key_compare
    .               {
    .                 _Key_compare		_M_key_compare;
    .           
    9 ( 0.00%)        _Rb_tree_key_compare()
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .                 _GLIBCXX_NOEXCEPT_IF(
    .           	is_nothrow_default_constructible<_Key_compare>::value)
    .                 : _M_key_compare()
    3 ( 0.00%)        { }
    .           
    .                 _Rb_tree_key_compare(const _Key_compare& __comp)
    .                 : _M_key_compare(__comp)
    .                 { }
    .           
    .           #if __cplusplus >= 201103L
    .                 // Copy constructor added for consistency with C++98 mode.
    .                 _Rb_tree_key_compare(const _Rb_tree_key_compare&) = default;
-- line 154 ----------------------------------------
-- line 161 ----------------------------------------
    .               };
    .           
    .             // Helper type to manage default initialization of node count and header.
    .             struct _Rb_tree_header
    .             {
    .               _Rb_tree_node_base	_M_header;
    .               size_t		_M_node_count; // Keeps track of size of tree.
    .           
    9 ( 0.00%)      _Rb_tree_header() _GLIBCXX_NOEXCEPT
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .               {
    2 ( 0.00%)        _M_header._M_color = _S_red;
    6 ( 0.00%)        _M_reset();
   71 ( 0.00%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_header::_M_reset() (1x)
    3 ( 0.00%)      }
    .           
    .           #if __cplusplus >= 201103L
    .               _Rb_tree_header(_Rb_tree_header&& __x) noexcept
    .               {
    .                 if (__x._M_header._M_parent != nullptr)
    .           	_M_move_data(__x);
    .                 else
    .           	{
-- line 181 ----------------------------------------
-- line 194 ----------------------------------------
    .                 _M_header._M_right = __from._M_header._M_right;
    .                 _M_header._M_parent->_M_parent = &_M_header;
    .                 _M_node_count = __from._M_node_count;
    .           
    .                 __from._M_reset();
    .               }
    .           
    .               void
    9 ( 0.00%)      _M_reset()
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .               {
    2 ( 0.00%)        _M_header._M_parent = 0;
    3 ( 0.00%)        _M_header._M_left = &_M_header;
    3 ( 0.00%)        _M_header._M_right = &_M_header;
    2 ( 0.00%)        _M_node_count = 0;
    3 ( 0.00%)      }
    .             };
    .           
    .             template<typename _Val>
    .               struct _Rb_tree_node : public _Rb_tree_node_base
    .               {
    .                 typedef _Rb_tree_node<_Val>* _Link_type;
    .           
    .           #if __cplusplus < 201103L
-- line 216 ----------------------------------------
-- line 222 ----------------------------------------
    .           
    .                 const _Val*
    .                 _M_valptr() const
    .                 { return std::__addressof(_M_value_field); }
    .           #else
    .                 __gnu_cxx::__aligned_membuf<_Val> _M_storage;
    .           
    .                 _Val*
  180 ( 0.00%)        _M_valptr()
  908 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (20x)
  240 ( 0.01%)        { return _M_storage._M_ptr(); }
2,448 ( 0.06%)  => /usr/include/c++/14/ext/aligned_buffer.h:__gnu_cxx::__aligned_membuf<std::pair<int, int> >::_M_ptr() (20x)
    .           
    .                 const _Val*
1,566 ( 0.04%)        _M_valptr() const
7,834 ( 0.18%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (174x)
2,088 ( 0.05%)        { return _M_storage._M_ptr(); }
21,236 ( 0.50%)  => /usr/include/c++/14/ext/aligned_buffer.h:__gnu_cxx::__aligned_membuf<std::pair<int, int> >::_M_ptr() const (174x)
    .           #endif
    .               };
    .           
    .             _GLIBCXX_PURE _Rb_tree_node_base*
    .             _Rb_tree_increment(_Rb_tree_node_base* __x) throw ();
    .           
    .             _GLIBCXX_PURE const _Rb_tree_node_base*
    .             _Rb_tree_increment(const _Rb_tree_node_base* __x) throw ();
-- line 243 ----------------------------------------
-- line 261 ----------------------------------------
    .                 typedef _Rb_tree_iterator<_Tp>		_Self;
    .                 typedef _Rb_tree_node_base::_Base_ptr	_Base_ptr;
    .                 typedef _Rb_tree_node<_Tp>*		_Link_type;
    .           
    .                 _Rb_tree_iterator() _GLIBCXX_NOEXCEPT
    .                 : _M_node() { }
    .           
    .                 explicit
  270 ( 0.01%)        _Rb_tree_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
1,227 ( 0.03%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (27x)
  162 ( 0.00%)        : _M_node(__x) { }
    .           
    .                 reference
    .                 operator*() const _GLIBCXX_NOEXCEPT
    .                 { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
    .           
    .                 pointer
    .                 operator->() const _GLIBCXX_NOEXCEPT
    .                 { return static_cast<_Link_type> (_M_node)->_M_valptr(); }
-- line 278 ----------------------------------------
-- line 288 ----------------------------------------
    .                 operator++(int) _GLIBCXX_NOEXCEPT
    .                 {
    .           	_Self __tmp = *this;
    .           	_M_node = _Rb_tree_increment(_M_node);
    .           	return __tmp;
    .                 }
    .           
    .                 _Self&
   36 ( 0.00%)        operator--() _GLIBCXX_NOEXCEPT
  184 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (4x)
    .                 {
   32 ( 0.00%)  	_M_node = _Rb_tree_decrement(_M_node);
  946 ( 0.02%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
   71 ( 0.00%)  => ???:std::_Rb_tree_decrement(std::_Rb_tree_node_base*) (4x)
    4 ( 0.00%)  	return *this;
    8 ( 0.00%)        }
    .           
    .                 _Self
    .                 operator--(int) _GLIBCXX_NOEXCEPT
    .                 {
    .           	_Self __tmp = *this;
    .           	_M_node = _Rb_tree_decrement(_M_node);
    .           	return __tmp;
    .                 }
    .           
    .                 friend bool
   70 ( 0.00%)        operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
  319 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (7x)
   56 ( 0.00%)        { return __x._M_node == __y._M_node; }
    .           
    .           #if ! __cpp_lib_three_way_comparison
    .                 friend bool
    .                 operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    .                 { return __x._M_node != __y._M_node; }
    .           #endif
    .           
    .                 _Base_ptr _M_node;
-- line 320 ----------------------------------------
-- line 335 ----------------------------------------
    .                 typedef _Rb_tree_const_iterator<_Tp>		_Self;
    .                 typedef _Rb_tree_node_base::_Const_Base_ptr	_Base_ptr;
    .                 typedef const _Rb_tree_node<_Tp>*			_Link_type;
    .           
    .                 _Rb_tree_const_iterator() _GLIBCXX_NOEXCEPT
    .                 : _M_node() { }
    .           
    .                 explicit
1,120 ( 0.03%)        _Rb_tree_const_iterator(_Base_ptr __x) _GLIBCXX_NOEXCEPT
5,048 ( 0.12%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (112x)
  672 ( 0.02%)        : _M_node(__x) { }
    .           
  100 ( 0.00%)        _Rb_tree_const_iterator(const iterator& __it) _GLIBCXX_NOEXCEPT
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
   70 ( 0.00%)        : _M_node(__it._M_node) { }
    .           
    .                 iterator
    .                 _M_const_cast() const _GLIBCXX_NOEXCEPT
    .                 { return iterator(const_cast<typename iterator::_Base_ptr>(_M_node)); }
    .           
    .                 reference
    .                 operator*() const _GLIBCXX_NOEXCEPT
    .                 { return *static_cast<_Link_type>(_M_node)->_M_valptr(); }
-- line 355 ----------------------------------------
-- line 384 ----------------------------------------
    .                 operator--(int) _GLIBCXX_NOEXCEPT
    .                 {
    .           	_Self __tmp = *this;
    .           	_M_node = _Rb_tree_decrement(_M_node);
    .           	return __tmp;
    .                 }
    .           
    .                 friend bool
  680 ( 0.02%)        operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
3,068 ( 0.07%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (68x)
  544 ( 0.01%)        { return __x._M_node == __y._M_node; }
    .           
    .           #if ! __cpp_lib_three_way_comparison
    .                 friend bool
    .                 operator!=(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
    .                 { return __x._M_node != __y._M_node; }
    .           #endif
    .           
    .                 _Base_ptr _M_node;
-- line 401 ----------------------------------------
-- line 513 ----------------------------------------
    .           	_Base_ptr _M_nodes;
    .           	_Rb_tree& _M_t;
    .                 };
    .           
    .                 // Functor similar to the previous one but without any pool of nodes to
    .                 // recycle.
    .                 struct _Alloc_node
    .                 {
  100 ( 0.00%)  	_Alloc_node(_Rb_tree& __t)
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
   60 ( 0.00%)  	: _M_t(__t) { }
    .           
    .           	template<typename _Arg>
    .           	  _Link_type
  110 ( 0.00%)  	  operator()(_GLIBCXX_FWDREF(_Arg) __arg) const
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
  200 ( 0.00%)  	  { return _M_t._M_create_node(_GLIBCXX_FORWARD(_Arg, __arg)); }
12,260 ( 0.29%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_node<std::pair<int, int> >* std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_create_node<std::pair<int, int> >(std::pair<int, int>&&) (10x)
  574 ( 0.01%)  => /usr/include/c++/14/bits/move.h:std::pair<int, int>&& std::forward<std::pair<int, int> >(std::remove_reference<std::pair<int, int> >::type&) (10x)
    .           
    .                 private:
    .           	_Rb_tree& _M_t;
    .                 };
    .           
    .               public:
    .                 typedef _Key 				key_type;
    .                 typedef _Val 				value_type;
-- line 535 ----------------------------------------
-- line 537 ----------------------------------------
    .                 typedef const value_type* 		const_pointer;
    .                 typedef value_type& 			reference;
    .                 typedef const value_type& 		const_reference;
    .                 typedef size_t 				size_type;
    .                 typedef ptrdiff_t 			difference_type;
    .                 typedef _Alloc 				allocator_type;
    .           
    .                 _Node_allocator&
  360 ( 0.01%)        _M_get_Node_allocator() _GLIBCXX_NOEXCEPT
1,816 ( 0.04%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (40x)
  120 ( 0.00%)        { return this->_M_impl; }
    .           
    .                 const _Node_allocator&
    .                 _M_get_Node_allocator() const _GLIBCXX_NOEXCEPT
    .                 { return this->_M_impl; }
    .           
    .                 allocator_type
    .                 get_allocator() const _GLIBCXX_NOEXCEPT
    .                 { return allocator_type(_M_get_Node_allocator()); }
    .           
    .               protected:
    .                 _Link_type
   90 ( 0.00%)        _M_get_node()
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
  110 ( 0.00%)        { return _Alloc_traits::allocate(_M_get_Node_allocator(), 1); }
  574 ( 0.01%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_get_Node_allocator() (10x)
    .           
    .                 void
  100 ( 0.00%)        _M_put_node(_Link_type __p) _GLIBCXX_NOEXCEPT
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
  130 ( 0.00%)        { _Alloc_traits::deallocate(_M_get_Node_allocator(), __p, 1); }
  574 ( 0.01%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_get_Node_allocator() (10x)
    .           
    .           #if __cplusplus < 201103L
    .                 void
    .                 _M_construct_node(_Link_type __node, const value_type& __x)
    .                 {
    .           	__try
    .           	  { get_allocator().construct(__node->_M_valptr(), __x); }
    .           	__catch(...)
-- line 571 ----------------------------------------
-- line 580 ----------------------------------------
    .                 {
    .           	_Link_type __tmp = _M_get_node();
    .           	_M_construct_node(__tmp, __x);
    .           	return __tmp;
    .                 }
    .           #else
    .                 template<typename... _Args>
    .           	void
  130 ( 0.00%)  	_M_construct_node(_Link_type __node, _Args&&... __args)
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
    .           	{
    .           	  __try
    .           	    {
  100 ( 0.00%)  	      ::new(__node) _Rb_tree_node<_Val>;
  584 ( 0.01%)  => /usr/include/c++/14/new:operator new(unsigned long, void*) (10x)
  230 ( 0.01%)  	      _Alloc_traits::construct(_M_get_Node_allocator(),
1,892 ( 0.04%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_node<std::pair<int, int> >::_M_valptr() (10x)
  574 ( 0.01%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_get_Node_allocator() (10x)
  574 ( 0.01%)  => /usr/include/c++/14/bits/move.h:std::pair<int, int>&& std::forward<std::pair<int, int> >(std::remove_reference<std::pair<int, int> >::type&) (10x)
    .           				       __node->_M_valptr(),
    .           				       std::forward<_Args>(__args)...);
    .           	    }
    .           	  __catch(...)
    .           	    {
    .           	      __node->~_Rb_tree_node<_Val>();
    .           	      _M_put_node(__node);
    .           	      __throw_exception_again;
    .           	    }
   60 ( 0.00%)  	}
    .           
    .                 template<typename... _Args>
    .           	_Link_type
  100 ( 0.00%)  	_M_create_node(_Args&&... __args)
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
    .           	{
   70 ( 0.00%)  	  _Link_type __tmp = _M_get_node();
4,192 ( 0.10%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_get_node() (10x)
  120 ( 0.00%)  	  _M_construct_node(__tmp, std::forward<_Args>(__args)...);
6,680 ( 0.16%)  => /usr/include/c++/14/bits/stl_tree.h:void std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_construct_node<std::pair<int, int> >(std::_Rb_tree_node<std::pair<int, int> >*, std::pair<int, int>&&) (10x)
  574 ( 0.01%)  => /usr/include/c++/14/bits/move.h:std::pair<int, int>&& std::forward<std::pair<int, int> >(std::remove_reference<std::pair<int, int> >::type&) (10x)
   50 ( 0.00%)  	  return __tmp;
   20 ( 0.00%)  	}
    .           #endif
    .           
    .                 void
  110 ( 0.00%)        _M_destroy_node(_Link_type __p) _GLIBCXX_NOEXCEPT
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
    .                 {
    .           #if __cplusplus < 201103L
    .           	get_allocator().destroy(__p->_M_valptr());
    .           #else
  160 ( 0.00%)  	_Alloc_traits::destroy(_M_get_Node_allocator(), __p->_M_valptr());
1,884 ( 0.04%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_node<std::pair<int, int> >::_M_valptr() (10x)
  574 ( 0.01%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_get_Node_allocator() (10x)
    .           	__p->~_Rb_tree_node<_Val>();
    .           #endif
   40 ( 0.00%)        }
    .           
    .                 void
  100 ( 0.00%)        _M_drop_node(_Link_type __p) _GLIBCXX_NOEXCEPT
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
    .                 {
   80 ( 0.00%)  	_M_destroy_node(__p);
3,272 ( 0.08%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_destroy_node(std::_Rb_tree_node<std::pair<int, int> >*) (10x)
   80 ( 0.00%)  	_M_put_node(__p);
3,186 ( 0.07%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_put_node(std::_Rb_tree_node<std::pair<int, int> >*) (10x)
   30 ( 0.00%)        }
    .           
    .                 template<bool _MoveValue, typename _NodeGen>
    .           	_Link_type
    .           	_M_clone_node(_Link_type __x, _NodeGen& __node_gen)
    .           	{
    .           #if __cplusplus >= 201103L
    .           	  using _Vp = __conditional_t<_MoveValue,
    .           				      value_type&&,
-- line 639 ----------------------------------------
-- line 650 ----------------------------------------
    .               protected:
    .           #if _GLIBCXX_INLINE_VERSION
    .                 template<typename _Key_compare>
    .           #else
    .                 // Unused _Is_pod_comparator is kept as it is part of mangled name.
    .                 template<typename _Key_compare,
    .           	       bool /* _Is_pod_comparator */ = __is_pod(_Key_compare)>
    .           #endif
   14 ( 0.00%)  	struct _Rb_tree_impl
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .           	: public _Node_allocator
    .           	, public _Rb_tree_key_compare<_Key_compare>
    .           	, public _Rb_tree_header
    .           	{
    .           	  typedef _Rb_tree_key_compare<_Key_compare> _Base_key_compare;
    .           
   13 ( 0.00%)  	  _Rb_tree_impl()
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .           	    _GLIBCXX_NOEXCEPT_IF(
    .           		is_nothrow_default_constructible<_Node_allocator>::value
    .           		&& is_nothrow_default_constructible<_Base_key_compare>::value )
   13 ( 0.00%)  	  : _Node_allocator()
  140 ( 0.00%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_header::_Rb_tree_header() (1x)
   61 ( 0.00%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_key_compare<std::less<std::pair<int, int> > >::_Rb_tree_key_compare() (1x)
    3 ( 0.00%)  	  { }
    .           
    .           	  _Rb_tree_impl(const _Rb_tree_impl& __x)
    .           	  : _Node_allocator(_Alloc_traits::_S_select_on_copy(__x))
    .           	  , _Base_key_compare(__x._M_key_compare)
    .           	  , _Rb_tree_header()
    .           	  { }
    .           
    .           #if __cplusplus < 201103L
-- line 678 ----------------------------------------
-- line 724 ----------------------------------------
    .                 _M_rightmost() _GLIBCXX_NOEXCEPT
    .                 { return this->_M_impl._M_header._M_right; }
    .           
    .                 _Const_Base_ptr
    .                 _M_rightmost() const _GLIBCXX_NOEXCEPT
    .                 { return this->_M_impl._M_header._M_right; }
    .           
    .                 _Link_type
   99 ( 0.00%)        _M_mbegin() const _GLIBCXX_NOEXCEPT
  499 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (11x)
   44 ( 0.00%)        { return static_cast<_Link_type>(this->_M_impl._M_header._M_parent); }
    .           
    .                 _Link_type
   99 ( 0.00%)        _M_begin() _GLIBCXX_NOEXCEPT
  503 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (11x)
  121 ( 0.00%)        { return _M_mbegin(); }
  642 ( 0.02%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_mbegin() const (11x)
    .           
    .                 _Const_Link_type
  306 ( 0.01%)        _M_begin() const _GLIBCXX_NOEXCEPT
1,534 ( 0.04%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (34x)
    .                 {
    .           	return static_cast<_Const_Link_type>
   68 ( 0.00%)  	  (this->_M_impl._M_header._M_parent);
   68 ( 0.00%)        }
    .           
    .                 _Base_ptr
  180 ( 0.00%)        _M_end() _GLIBCXX_NOEXCEPT
  908 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (20x)
   80 ( 0.00%)        { return &this->_M_impl._M_header; }
    .           
    .                 _Const_Base_ptr
  306 ( 0.01%)        _M_end() const _GLIBCXX_NOEXCEPT
1,534 ( 0.04%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (34x)
  136 ( 0.00%)        { return &this->_M_impl._M_header; }
    .           
    .                 static const _Key&
1,566 ( 0.04%)        _S_key(_Const_Link_type __x)
7,842 ( 0.18%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (174x)
    .                 {
    .           #if __cplusplus >= 201103L
    .           	// If we're asking for the key we're presumably using the comparison
    .           	// object, and so this is a good place to sanity check it.
    .           	static_assert(__is_invocable<_Compare&, const _Key&, const _Key&>{},
    .           		      "comparison object must be invocable "
    .           		      "with two arguments of key type");
    .           # if __cplusplus >= 201703L
-- line 763 ----------------------------------------
-- line 765 ----------------------------------------
    .           	// 2542. Missing const requirements for associative containers
    .           	if constexpr (__is_invocable<_Compare&, const _Key&, const _Key&>{})
    .           	  static_assert(
    .           	      is_invocable_v<const _Compare&, const _Key&, const _Key&>,
    .           	      "comparison object must be invocable as const");
    .           # endif // C++17
    .           #endif // C++11
    .           
2,958 ( 0.07%)  	return _KeyOfValue()(*__x->_M_valptr());
32,724 ( 0.76%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_node<std::pair<int, int> >::_M_valptr() const (174x)
10,096 ( 0.24%)  => /usr/include/c++/14/bits/stl_function.h:std::_Identity<std::pair<int, int> >::operator()(std::pair<int, int> const&) const (174x)
  348 ( 0.01%)        }
    .           
    .                 static _Link_type
  198 ( 0.00%)        _S_left(_Base_ptr __x) _GLIBCXX_NOEXCEPT
  998 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (22x)
   88 ( 0.00%)        { return static_cast<_Link_type>(__x->_M_left); }
    .           
    .                 static _Const_Link_type
  495 ( 0.01%)        _S_left(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
2,479 ( 0.06%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (55x)
  220 ( 0.01%)        { return static_cast<_Const_Link_type>(__x->_M_left); }
    .           
    .                 static _Link_type
  189 ( 0.00%)        _S_right(_Base_ptr __x) _GLIBCXX_NOEXCEPT
  953 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (21x)
   84 ( 0.00%)        { return static_cast<_Link_type>(__x->_M_right); }
    .           
    .                 static _Const_Link_type
  441 ( 0.01%)        _S_right(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
2,209 ( 0.05%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (49x)
  196 ( 0.00%)        { return static_cast<_Const_Link_type>(__x->_M_right); }
    .           
    .                 static const _Key&
  423 ( 0.01%)        _S_key(_Const_Base_ptr __x)
2,127 ( 0.05%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (47x)
  470 ( 0.01%)        { return _S_key(static_cast<_Const_Link_type>(__x)); }
14,997 ( 0.35%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_key(std::_Rb_tree_node<std::pair<int, int> > const*) (47x)
    .           
    .                 static _Base_ptr
    .                 _S_minimum(_Base_ptr __x) _GLIBCXX_NOEXCEPT
    .                 { return _Rb_tree_node_base::_S_minimum(__x); }
    .           
    .                 static _Const_Base_ptr
    .                 _S_minimum(_Const_Base_ptr __x) _GLIBCXX_NOEXCEPT
    .                 { return _Rb_tree_node_base::_S_minimum(__x); }
-- line 802 ----------------------------------------
-- line 918 ----------------------------------------
    .                 _M_upper_bound(_Const_Link_type __x, _Const_Base_ptr __y,
    .           		     const _Key& __k) const;
    .           
    .               public:
    .                 // allocation/deallocation
    .           #if __cplusplus < 201103L
    .                 _Rb_tree() { }
    .           #else
   18 ( 0.00%)        _Rb_tree() = default;
  281 ( 0.01%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl<std::less<std::pair<int, int> >, true>::_Rb_tree_impl() (1x)
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .           #endif
    .           
    .                 _Rb_tree(const _Compare& __comp,
    .           	       const allocator_type& __a = allocator_type())
    .                 : _M_impl(__comp, _Node_allocator(__a)) { }
    .           
    .                 _Rb_tree(const _Rb_tree& __x)
    .                 : _M_impl(__x._M_impl)
-- line 934 ----------------------------------------
-- line 973 ----------------------------------------
    .                 noexcept( noexcept(
    .           	_Rb_tree(std::declval<_Rb_tree&&>(), std::declval<_Node_allocator&&>(),
    .           		 std::declval<typename _Alloc_traits::is_always_equal>())) )
    .                 : _Rb_tree(std::move(__x), std::move(__a),
    .           		 typename _Alloc_traits::is_always_equal{})
    .                 { }
    .           #endif
    .           
    9 ( 0.00%)        ~_Rb_tree() _GLIBCXX_NOEXCEPT
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
   23 ( 0.00%)        { _M_erase(_M_begin()); }
9,412 ( 0.22%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_erase(std::_Rb_tree_node<std::pair<int, int> >*) (1x)
  131 ( 0.00%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree_impl<std::less<std::pair<int, int> >, true>::~_Rb_tree_impl() (1x)
  127 ( 0.00%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_begin() (1x)
    .           
    .                 _Rb_tree&
    .                 operator=(const _Rb_tree& __x);
    .           
    .                 // Accessors.
    .                 _Compare
    .                 key_comp() const
    .                 { return _M_impl._M_key_compare; }
    .           
    .                 iterator
   63 ( 0.00%)        begin() _GLIBCXX_NOEXCEPT
  319 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (7x)
   84 ( 0.00%)        { return iterator(this->_M_impl._M_header._M_left); }
  431 ( 0.01%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_iterator<std::pair<int, int> >::_Rb_tree_iterator(std::_Rb_tree_node_base*) (7x)
    .           
    .                 const_iterator
    .                 begin() const _GLIBCXX_NOEXCEPT
    .                 { return const_iterator(this->_M_impl._M_header._M_left); }
    .           
    .                 iterator
    .                 end() _GLIBCXX_NOEXCEPT
    .                 { return iterator(&this->_M_impl._M_header); }
    .           
    .                 const_iterator
  702 ( 0.02%)        end() const _GLIBCXX_NOEXCEPT
3,522 ( 0.08%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (78x)
  936 ( 0.02%)        { return const_iterator(&this->_M_impl._M_header); }
4,762 ( 0.11%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_const_iterator<std::pair<int, int> >::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (78x)
    .           
    .                 reverse_iterator
    .                 rbegin() _GLIBCXX_NOEXCEPT
    .                 { return reverse_iterator(end()); }
    .           
    .                 const_reverse_iterator
    .                 rbegin() const _GLIBCXX_NOEXCEPT
    .                 { return const_reverse_iterator(end()); }
-- line 1014 ----------------------------------------
-- line 1021 ----------------------------------------
    .                 rend() const _GLIBCXX_NOEXCEPT
    .                 { return const_reverse_iterator(begin()); }
    .           
    .                 _GLIBCXX_NODISCARD bool
    .                 empty() const _GLIBCXX_NOEXCEPT
    .                 { return _M_impl._M_node_count == 0; }
    .           
    .                 size_type
  405 ( 0.01%)        size() const _GLIBCXX_NOEXCEPT
2,029 ( 0.05%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (45x)
  180 ( 0.00%)        { return _M_impl._M_node_count; }
    .           
    .                 size_type
    .                 max_size() const _GLIBCXX_NOEXCEPT
    .                 { return _Alloc_traits::max_size(_M_get_Node_allocator()); }
    .           
    .                 void
    .                 swap(_Rb_tree& __t)
    .                 _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Compare>::value);
-- line 1038 ----------------------------------------
-- line 1806 ----------------------------------------
    .             template<typename _Key, typename _Val, typename _KeyOfValue,
    .           	   typename _Compare, typename _Alloc>
    .           #if __cplusplus >= 201103L
    .               template<typename _Arg, typename _NodeGen>
    .           #else
    .               template<typename _NodeGen>
    .           #endif
    .                 typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
  150 ( 0.00%)        _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
    .                 _M_insert_(_Base_ptr __x, _Base_ptr __p,
    .           #if __cplusplus >= 201103L
    .           		 _Arg&& __v,
    .           #else
    .           		 const _Val& __v,
    .           #endif
    .           		 _NodeGen& __node_gen)
    .                 {
  117 ( 0.00%)  	bool __insert_left = (__x != 0 || __p == _M_end()
  584 ( 0.01%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_end() (10x)
  295 ( 0.01%)  			      || _M_impl._M_key_compare(_KeyOfValue()(__v),
3,451 ( 0.08%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_key(std::_Rb_tree_node_base const*) (9x)
1,333 ( 0.03%)  => /usr/include/c++/14/bits/stl_function.h:std::less<std::pair<int, int> >::operator()(std::pair<int, int> const&, std::pair<int, int> const&) const (9x)
  526 ( 0.01%)  => /usr/include/c++/14/bits/stl_function.h:std::_Identity<std::pair<int, int> >::operator()(std::pair<int, int>&) const (9x)
    .           							_S_key(__p)));
    .           
  150 ( 0.00%)  	_Link_type __z = __node_gen(_GLIBCXX_FORWARD(_Arg, __v));
13,598 ( 0.32%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_node<std::pair<int, int> >* std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Alloc_node::operator()<std::pair<int, int> >(std::pair<int, int>&&) const (10x)
  574 ( 0.01%)  => /usr/include/c++/14/bits/move.h:std::pair<int, int>&& std::forward<std::pair<int, int> >(std::remove_reference<std::pair<int, int> >::type&) (10x)
    .           
   94 ( 0.00%)  	_Rb_tree_insert_and_rebalance(__insert_left, __z, __p,
1,104 ( 0.03%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
  421 ( 0.01%)  => ???:std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&) (10x)
   20 ( 0.00%)  				      this->_M_impl._M_header);
   50 ( 0.00%)  	++_M_impl._M_node_count;
  110 ( 0.00%)  	return iterator(__z);
  614 ( 0.01%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_iterator<std::pair<int, int> >::_Rb_tree_iterator(std::_Rb_tree_node_base*) (10x)
   50 ( 0.00%)        }
    .           
    .             template<typename _Key, typename _Val, typename _KeyOfValue,
    .           	   typename _Compare, typename _Alloc>
    .           #if __cplusplus >= 201103L
    .               template<typename _Arg>
    .           #endif
    .               typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
    .               _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
-- line 1841 ----------------------------------------
-- line 1918 ----------------------------------------
    .           	    __throw_exception_again;
    .           	  }
    .           	return __top;
    .                 }
    .           
    .             template<typename _Key, typename _Val, typename _KeyOfValue,
    .           	   typename _Compare, typename _Alloc>
    .               void
  110 ( 0.00%)      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .               _M_erase(_Link_type __x)
    .               {
    .                 // Erase without rebalancing.
  116 ( 0.00%)        while (__x != 0)
    .           	{
  140 ( 0.00%)  	  _M_erase(_S_right(__x));
5,856 ( 0.14%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_erase(std::_Rb_tree_node<std::pair<int, int> >*)'2 (4x)
  236 ( 0.01%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_right(std::_Rb_tree_node_base*) (4x)
   70 ( 0.00%)  	  _Link_type __y = _S_left(__x);
  232 ( 0.01%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_left(std::_Rb_tree_node_base*) (4x)
   50 ( 0.00%)  	  _M_drop_node(__x);
2,888 ( 0.07%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_drop_node(std::_Rb_tree_node<std::pair<int, int> >*) (4x)
   20 ( 0.00%)  	  __x = __y;
    .           	}
   33 ( 0.00%)      }
    .           
    .             template<typename _Key, typename _Val, typename _KeyOfValue,
    .           	   typename _Compare, typename _Alloc>
    .               typename _Rb_tree<_Key, _Val, _KeyOfValue,
    .           		      _Compare, _Alloc>::iterator
    .               _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    .               _M_lower_bound(_Link_type __x, _Base_ptr __y,
    .           		   const _Key& __k)
-- line 1945 ----------------------------------------
-- line 1951 ----------------------------------------
    .           	  __x = _S_right(__x);
    .                 return iterator(__y);
    .               }
    .           
    .             template<typename _Key, typename _Val, typename _KeyOfValue,
    .           	   typename _Compare, typename _Alloc>
    .               typename _Rb_tree<_Key, _Val, _KeyOfValue,
    .           		      _Compare, _Alloc>::const_iterator
  442 ( 0.01%)      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1,534 ( 0.04%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (34x)
    .               _M_lower_bound(_Const_Link_type __x, _Const_Base_ptr __y,
    .           		   const _Key& __k) const
    .               {
  724 ( 0.02%)        while (__x != 0)
1,829 ( 0.04%)  	if (!_M_impl._M_key_compare(_S_key(__x), __k))
33,196 ( 0.78%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_key(std::_Rb_tree_node<std::pair<int, int> > const*) (104x)
15,265 ( 0.36%)  => /usr/include/c++/14/bits/stl_function.h:std::less<std::pair<int, int> >::operator()(std::pair<int, int> const&, std::pair<int, int> const&) const (104x)
  697 ( 0.02%)  	  __y = __x, __x = _S_left(__x);
3,194 ( 0.07%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_left(std::_Rb_tree_node_base const*) (55x)
    .           	else
  196 ( 0.00%)  	  __x = _S_right(__x);
2,846 ( 0.07%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_right(std::_Rb_tree_node_base const*) (49x)
  306 ( 0.01%)        return const_iterator(__y);
2,078 ( 0.05%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_const_iterator<std::pair<int, int> >::_Rb_tree_const_iterator(std::_Rb_tree_node_base const*) (34x)
  102 ( 0.00%)      }
    .           
    .             template<typename _Key, typename _Val, typename _KeyOfValue,
    .           	   typename _Compare, typename _Alloc>
    .               typename _Rb_tree<_Key, _Val, _KeyOfValue,
    .           		      _Compare, _Alloc>::iterator
    .               _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    .               _M_upper_bound(_Link_type __x, _Base_ptr __y,
    .           		   const _Key& __k)
-- line 1977 ----------------------------------------
-- line 2098 ----------------------------------------
    .               }
    .           
    .             template<typename _Key, typename _Val, typename _KeyOfValue,
    .           	   typename _Compare, typename _Alloc>
    .               pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
    .           			   _Compare, _Alloc>::_Base_ptr,
    .           	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
    .           			   _Compare, _Alloc>::_Base_ptr>
  110 ( 0.00%)      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
    .               _M_get_insert_unique_pos(const key_type& __k)
    .               {
    .                 typedef pair<_Base_ptr, _Base_ptr> _Res;
   70 ( 0.00%)        _Link_type __x = _M_begin();
1,238 ( 0.03%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_begin() (10x)
   40 ( 0.00%)        _Base_ptr __y = _M_end();
  584 ( 0.01%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_end() (10x)
   10 ( 0.00%)        bool __comp = true;
  208 ( 0.00%)        while (__x != 0)
    .           	{
   46 ( 0.00%)  	  __y = __x;
  368 ( 0.01%)  	  __comp = _M_impl._M_key_compare(__k, _S_key(__x));
7,341 ( 0.17%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_key(std::_Rb_tree_node<std::pair<int, int> > const*) (23x)
3,368 ( 0.08%)  => /usr/include/c++/14/bits/stl_function.h:std::less<std::pair<int, int> >::operator()(std::pair<int, int> const&, std::pair<int, int> const&) const (23x)
  291 ( 0.01%)  	  __x = __comp ? _S_left(__x) : _S_right(__x);
  700 ( 0.02%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_left(std::_Rb_tree_node_base*) (12x)
  642 ( 0.02%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_right(std::_Rb_tree_node_base*) (11x)
    .           	}
   80 ( 0.00%)        iterator __j = iterator(__y);
  614 ( 0.01%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_iterator<std::pair<int, int> >::_Rb_tree_iterator(std::_Rb_tree_node_base*) (10x)
   41 ( 0.00%)        if (__comp)
    .           	{
  107 ( 0.00%)  	  if (__j == begin())
  897 ( 0.02%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::begin() (7x)
  445 ( 0.01%)  => /usr/include/c++/14/bits/stl_tree.h:std::operator==(std::_Rb_tree_iterator<std::pair<int, int> > const&, std::_Rb_tree_iterator<std::pair<int, int> > const&) (7x)
   48 ( 0.00%)  	    return _Res(__x, __y);
  585 ( 0.01%)  => /usr/include/c++/14/bits/stl_pair.h:std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node<std::pair<int, int> >*&, std::_Rb_tree_node_base*&, true>(std::_Rb_tree_node<std::pair<int, int> >*&, std::_Rb_tree_node_base*&) (3x)
    .           	  else
   24 ( 0.00%)  	    --__j;
1,281 ( 0.03%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_iterator<std::pair<int, int> >::operator--() (4x)
    .           	}
  154 ( 0.00%)        if (_M_impl._M_key_compare(_S_key(__j._M_node), __k))
  988 ( 0.02%)  => /usr/include/c++/14/bits/stl_function.h:std::less<std::pair<int, int> >::operator()(std::pair<int, int> const&, std::pair<int, int> const&) const (7x)
2,689 ( 0.06%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_key(std::_Rb_tree_node_base const*) (7x)
   84 ( 0.00%)  	return _Res(__x, __y);
1,341 ( 0.03%)  => /usr/include/c++/14/bits/stl_pair.h:std::pair<std::_Rb_tree_node_base*, std::_Rb_tree_node_base*>::pair<std::_Rb_tree_node<std::pair<int, int> >*&, std::_Rb_tree_node_base*&, true>(std::_Rb_tree_node<std::pair<int, int> >*&, std::_Rb_tree_node_base*&) (7x)
    .                 return _Res(__j._M_node, 0);
   30 ( 0.00%)      }
    .           
    .             template<typename _Key, typename _Val, typename _KeyOfValue,
    .           	   typename _Compare, typename _Alloc>
    .               pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
    .           			   _Compare, _Alloc>::_Base_ptr,
    .           	 typename _Rb_tree<_Key, _Val, _KeyOfValue,
    .           			   _Compare, _Alloc>::_Base_ptr>
    .               _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
-- line 2138 ----------------------------------------
-- line 2152 ----------------------------------------
    .           
    .             template<typename _Key, typename _Val, typename _KeyOfValue,
    .           	   typename _Compare, typename _Alloc>
    .           #if __cplusplus >= 201103L
    .               template<typename _Arg>
    .           #endif
    .               pair<typename _Rb_tree<_Key, _Val, _KeyOfValue,
    .           			   _Compare, _Alloc>::iterator, bool>
  100 ( 0.00%)      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
    .           #if __cplusplus >= 201103L
    .               _M_insert_unique(_Arg&& __v)
    .           #else
    .               _M_insert_unique(const _Val& __v)
    .           #endif
    .               {
    .                 typedef pair<iterator, bool> _Res;
    .                 pair<_Base_ptr, _Base_ptr> __res
  150 ( 0.00%)  	= _M_get_insert_unique_pos(_KeyOfValue()(__v));
24,878 ( 0.58%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_get_insert_unique_pos(std::pair<int, int> const&) (10x)
  584 ( 0.01%)  => /usr/include/c++/14/bits/stl_function.h:std::_Identity<std::pair<int, int> >::operator()(std::pair<int, int>&) const (10x)
    .           
   60 ( 0.00%)        if (__res.second)
    .           	{
   80 ( 0.00%)  	  _Alloc_node __an(*this);
  614 ( 0.01%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Alloc_node::_Alloc_node(std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >&) (10x)
  280 ( 0.01%)  	  return _Res(_M_insert_(__res.first, __res.second,
23,695 ( 0.55%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree_iterator<std::pair<int, int> > std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_insert_<std::pair<int, int>, std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<int, int>&&, std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Alloc_node&) (10x)
1,922 ( 0.04%)  => /usr/include/c++/14/bits/stl_pair.h:std::pair<std::_Rb_tree_iterator<std::pair<int, int> >, bool>::pair<std::_Rb_tree_iterator<std::pair<int, int> >, bool, true>(std::_Rb_tree_iterator<std::pair<int, int> >&&, bool&&) (10x)
  574 ( 0.01%)  => /usr/include/c++/14/bits/move.h:std::pair<int, int>&& std::forward<std::pair<int, int> >(std::remove_reference<std::pair<int, int> >::type&) (10x)
    .           				 _GLIBCXX_FORWARD(_Arg, __v), __an),
   30 ( 0.00%)  		      true);
    .           	}
    .           
    .                 return _Res(iterator(__res.first), false);
   20 ( 0.00%)      }
    .           
    .             template<typename _Key, typename _Val, typename _KeyOfValue,
    .           	   typename _Compare, typename _Alloc>
    .           #if __cplusplus >= 201103L
    .               template<typename _Arg>
    .           #endif
    .               typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::iterator
    .               _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
-- line 2188 ----------------------------------------
-- line 2532 ----------------------------------------
    .           	      || _M_impl._M_key_compare(__k,
    .           					_S_key(__j._M_node))) ? end() : __j;
    .               }
    .           
    .             template<typename _Key, typename _Val, typename _KeyOfValue,
    .           	   typename _Compare, typename _Alloc>
    .               typename _Rb_tree<_Key, _Val, _KeyOfValue,
    .           		      _Compare, _Alloc>::const_iterator
  374 ( 0.01%)      _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
1,534 ( 0.04%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (34x)
    .               find(const _Key& __k) const
    .               {
  816 ( 0.02%)        const_iterator __j = _M_lower_bound(_M_begin(), _M_end(), __k);
62,409 ( 1.46%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_lower_bound(std::_Rb_tree_node<std::pair<int, int> > const*, std::_Rb_tree_node_base const*, std::pair<int, int> const&) const (34x)
1,976 ( 0.05%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_end() const (34x)
1,976 ( 0.05%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_begin() const (34x)
  510 ( 0.01%)        return (__j == end()
4,322 ( 0.10%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::end() const (34x)
2,146 ( 0.05%)  => /usr/include/c++/14/bits/stl_tree.h:std::operator==(std::_Rb_tree_const_iterator<std::pair<int, int> > const&, std::_Rb_tree_const_iterator<std::pair<int, int> > const&) (34x)
  527 ( 0.01%)  	      || _M_impl._M_key_compare(__k,
11,877 ( 0.28%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_S_key(std::_Rb_tree_node_base const*) (31x)
4,708 ( 0.11%)  => /usr/include/c++/14/bits/stl_function.h:std::less<std::pair<int, int> >::operator()(std::pair<int, int> const&, std::pair<int, int> const&) const (31x)
  433 ( 0.01%)  					_S_key(__j._M_node))) ? end() : __j;
1,274 ( 0.03%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::end() const (10x)
  102 ( 0.00%)      }
    .           
    .             template<typename _Key, typename _Val, typename _KeyOfValue,
    .           	   typename _Compare, typename _Alloc>
    .               typename _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::size_type
    .               _Rb_tree<_Key, _Val, _KeyOfValue, _Compare, _Alloc>::
    .               count(const _Key& __k) const
    .               {
    .                 pair<const_iterator, const_iterator> __p = equal_range(__k);
-- line 2555 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/bits/stl_iterator.h
--------------------------------------------------------------------------------
Ir             

-- line 1059 ----------------------------------------
    .           #if __cplusplus > 201703L && __glibcxx_concepts
    .                 using iterator_concept = std::__detail::__iter_concept<_Iterator>;
    .           #endif
    .           
    .                 _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
    .                 : _M_current(_Iterator()) { }
    .           
    .                 explicit _GLIBCXX20_CONSTEXPR
3,060 ( 0.07%)        __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
   98 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
2,142 ( 0.05%)        : _M_current(__i) { }
    .           
    .                 // Allow iterator to const_iterator conversion
    .           #if __cplusplus >= 201103L
    .                 template<typename _Iter, typename = __convertible_from<_Iter>>
    .           	_GLIBCXX20_CONSTEXPR
  100 ( 0.00%)  	__normal_iterator(const __normal_iterator<_Iter, _Container>& __i)
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
    .           	noexcept
    .           #else
    .                 // N.B. _Container::pointer is not actually in container requirements,
    .                 // but is present in std::vector and std::basic_string.
    .                 template<typename _Iter>
    .                   __normal_iterator(const __normal_iterator<_Iter,
    .           			  typename __enable_if<
    .           	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
    .           		      _Container>::__type>& __i)
    .           #endif
  120 ( 0.00%)          : _M_current(__i.base()) { }
  574 ( 0.01%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::base() const (10x)
    .           
    .                 // Forward iterator requirements
    .                 _GLIBCXX20_CONSTEXPR
    .                 reference
1,125 ( 0.03%)        operator*() const _GLIBCXX_NOEXCEPT
  458 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
  500 ( 0.01%)        { return *_M_current; }
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 pointer
  198 ( 0.00%)        operator->() const _GLIBCXX_NOEXCEPT
  994 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (22x)
   88 ( 0.00%)        { return _M_current; }
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 __normal_iterator&
  918 ( 0.02%)        operator++() _GLIBCXX_NOEXCEPT
  229 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (5x)
    .                 {
  510 ( 0.01%)  	++_M_current;
  102 ( 0.00%)  	return *this;
  204 ( 0.00%)        }
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 __normal_iterator
    .                 operator++(int) _GLIBCXX_NOEXCEPT
    .                 { return __normal_iterator(_M_current++); }
    .           
    .                 // Bidirectional iterator requirements
    .                 _GLIBCXX20_CONSTEXPR
    .                 __normal_iterator&
   54 ( 0.00%)        operator--() _GLIBCXX_NOEXCEPT
  278 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (6x)
    .                 {
   30 ( 0.00%)  	--_M_current;
    6 ( 0.00%)  	return *this;
   12 ( 0.00%)        }
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 __normal_iterator
    .                 operator--(int) _GLIBCXX_NOEXCEPT
    .                 { return __normal_iterator(_M_current--); }
    .           
    .                 // Random access iterator requirements
    .                 _GLIBCXX20_CONSTEXPR
-- line 1126 ----------------------------------------
-- line 1130 ----------------------------------------
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 __normal_iterator&
    .                 operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
    .                 { _M_current += __n; return *this; }
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 __normal_iterator
  280 ( 0.01%)        operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
1,276 ( 0.03%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (28x)
  476 ( 0.01%)        { return __normal_iterator(_M_current + __n); }
1,740 ( 0.04%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::__normal_iterator(GraphAlgo::Edge* const&) (28x)
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 __normal_iterator&
    .                 operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
    .                 { _M_current -= __n; return *this; }
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 __normal_iterator
  300 ( 0.01%)        operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
1,354 ( 0.03%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (30x)
  540 ( 0.01%)        { return __normal_iterator(_M_current - __n); }
1,864 ( 0.04%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::__normal_iterator(GraphAlgo::Edge* const&) (30x)
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 const _Iterator&
3,996 ( 0.09%)        base() const _GLIBCXX_NOEXCEPT
12,984 ( 0.30%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (288x)
1,332 ( 0.03%)        { return _M_current; }
    .               };
    .           
    .             // Note: In what follows, the left- and right-hand-side iterators are
    .             // allowed to vary in types (conceptually in cv-qualification) so that
    .             // comparison between cv-qualified and non-cv-qualified iterators be
    .             // valid.  However, the greedy and unfriendly operators in std::rel_ops
    .             // will make overload resolution ambiguous (when in scope) if we don't
    .             // provide overloads whose operands are of the same type.  Can someone
-- line 1162 ----------------------------------------
-- line 1208 ----------------------------------------
    .               operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
    .           	       const __normal_iterator<_IteratorR, _Container>& __rhs)
    .               _GLIBCXX_NOEXCEPT
    .               { return __lhs.base() == __rhs.base(); }
    .           
    .             template<typename _Iterator, typename _Container>
    .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .               inline bool
  385 ( 0.01%)      operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
1,534 ( 0.04%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (34x)
    .           	       const __normal_iterator<_Iterator, _Container>& __rhs)
    .               _GLIBCXX_NOEXCEPT
  700 ( 0.02%)      { return __lhs.base() == __rhs.base(); }
3,884 ( 0.09%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::base() const (68x)
    .           
    .             template<typename _IteratorL, typename _IteratorR, typename _Container>
    .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .               inline bool
    .               operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
    .           	       const __normal_iterator<_IteratorR, _Container>& __rhs)
    .               _GLIBCXX_NOEXCEPT
    .               { return __lhs.base() != __rhs.base(); }
    .           
    .             template<typename _Iterator, typename _Container>
    .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .               inline bool
1,518 ( 0.04%)      operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
4,512 ( 0.11%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (100x)
    .           	       const __normal_iterator<_Iterator, _Container>& __rhs)
    .               _GLIBCXX_NOEXCEPT
2,760 ( 0.06%)      { return __lhs.base() != __rhs.base(); }
11,408 ( 0.27%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::base() const (200x)
    .           
    .             // Random access iterator requirements
    .             template<typename _IteratorL, typename _IteratorR, typename _Container>
    .               _GLIBCXX_NODISCARD
    .               inline bool
    .               operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
    .           	      const __normal_iterator<_IteratorR, _Container>& __rhs)
    .               _GLIBCXX_NOEXCEPT
    .               { return __lhs.base() < __rhs.base(); }
    .           
    .             template<typename _Iterator, typename _Container>
    .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .               inline bool
   66 ( 0.00%)      operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
  274 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (6x)
    .           	      const __normal_iterator<_Iterator, _Container>& __rhs)
    .               _GLIBCXX_NOEXCEPT
  120 ( 0.00%)      { return __lhs.base() < __rhs.base(); }
  692 ( 0.02%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const (12x)
    .           
    .             template<typename _IteratorL, typename _IteratorR, typename _Container>
    .               _GLIBCXX_NODISCARD
    .               inline bool
    .               operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
    .           	      const __normal_iterator<_IteratorR, _Container>& __rhs)
    .               _GLIBCXX_NOEXCEPT
    .               { return __lhs.base() > __rhs.base(); }
-- line 1260 ----------------------------------------
-- line 1317 ----------------------------------------
    .               operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
    .           	      const __normal_iterator<_IteratorR, _Container>& __rhs)
    .           #endif
    .               { return __lhs.base() - __rhs.base(); }
    .           
    .             template<typename _Iterator, typename _Container>
    .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .               inline typename __normal_iterator<_Iterator, _Container>::difference_type
  330 ( 0.01%)      operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
  679 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (15x)
    .           	      const __normal_iterator<_Iterator, _Container>& __rhs)
    .               _GLIBCXX_NOEXCEPT
  690 ( 0.02%)      { return __lhs.base() - __rhs.base(); }
1,718 ( 0.04%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::base() const (30x)
    .           
    .             template<typename _Iterator, typename _Container>
    .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .               inline __normal_iterator<_Iterator, _Container>
    .               operator+(typename __normal_iterator<_Iterator, _Container>::difference_type
    .           	      __n, const __normal_iterator<_Iterator, _Container>& __i)
    .               _GLIBCXX_NOEXCEPT
    .               { return __normal_iterator<_Iterator, _Container>(__i.base() + __n); }
-- line 1336 ----------------------------------------
-- line 1340 ----------------------------------------
    .           
    .           namespace std _GLIBCXX_VISIBILITY(default)
    .           {
    .           _GLIBCXX_BEGIN_NAMESPACE_VERSION
    .           
    .             template<typename _Iterator, typename _Container>
    .               _GLIBCXX20_CONSTEXPR
    .               _Iterator
  144 ( 0.00%)      __niter_base(__gnu_cxx::__normal_iterator<_Iterator, _Container> __it)
  736 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (16x)
    .               _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
  144 ( 0.00%)      { return __it.base(); }
  916 ( 0.02%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::base() const (16x)
    .           
    .           #if __cplusplus >= 201103L
    .           
    .           #if __cplusplus <= 201703L
    .             // Need to overload __to_address because the pointer_traits primary template
    .             // will deduce element_type of __normal_iterator<T*, C> as T* rather than T.
    .             template<typename _Iterator, typename _Container>
    .               constexpr auto
-- line 1358 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: Graph.cpp
--------------------------------------------------------------------------------
Ir             

    .           #include "Graph.hpp"
    .           
    .           using namespace std;
    .           
    .           namespace GraphAlgo {
    .           
    .           // Constructor
   13 ( 0.00%)  Graph::Graph(int vertices, bool isDirected)
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
   23 ( 0.00%)      : numVertices(vertices), directed(isDirected), adjList(vertices) {}
4,460 ( 0.10%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::vector(unsigned long, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) (1x)
    .           
    .           // Copy Constructor
    .           Graph::Graph(const Graph& other)
    .               : numVertices(other.numVertices), directed(other.directed), adjList(other.adjList) {}
    .           
    .           // Copy Assignment Operator
    .           Graph& Graph::operator=(const Graph& other) {
    .               if (this != &other) {
-- line 17 ----------------------------------------
-- line 18 ----------------------------------------
    .                   numVertices = other.numVertices;
    .                   directed = other.directed;
    .                   adjList = other.adjList;
    .               }
    .               return *this;
    .           }
    .           
    .           //=============== Methods ===============
  120 ( 0.00%)  void Graph::addEdge(int src, int dst, int weight) {
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
  190 ( 0.00%)      adjList[src].emplace_back(dst, weight);
36,483 ( 0.85%)  => /usr/include/c++/14/bits/vector.tcc:GraphAlgo::Edge& std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::emplace_back<int&, int&>(int&, int&) (10x)
  654 ( 0.02%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::operator[](unsigned long) (10x)
   80 ( 0.00%)      if (!directed) {
  190 ( 0.00%)          adjList[dst].emplace_back(src, weight);
37,061 ( 0.87%)  => /usr/include/c++/14/bits/vector.tcc:GraphAlgo::Edge& std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::emplace_back<int&, int&>(int&, int&) (10x)
  654 ( 0.02%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::operator[](unsigned long) (10x)
    .               }
   30 ( 0.00%)  }
    .           
    9 ( 0.00%)  void Graph::printGraph() const {
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
   46 ( 0.00%)      for (int i = 0; i < numVertices; ++i) {
  139 ( 0.00%)          cout << "Vertex " << i << ": ";
3,769 ( 0.09%)  => ???:std::ostream::operator<<(int) (5x)
2,700 ( 0.06%)  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (10x)
  709 ( 0.02%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
  700 ( 0.02%)          for (const Edge& e : adjList[i]) {
4,762 ( 0.11%)  => /usr/include/c++/14/bits/stl_iterator.h:bool __gnu_cxx::operator!=<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&, __gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) (25x)
1,244 ( 0.03%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator++() (20x)
1,164 ( 0.03%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator*() const (20x)
  648 ( 0.02%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::end() const (5x)
  643 ( 0.02%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::begin() const (5x)
  329 ( 0.01%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::operator[](unsigned long) const (5x)
1,000 ( 0.02%)              cout << "(" << e.dst << ", w=" << e.weight << ") ";
14,972 ( 0.35%)  => ???:std::ostream::operator<<(int) (40x)
15,540 ( 0.36%)  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) (60x)
    .                   }
   44 ( 0.00%)          cout << '\n';
1,008 ( 0.02%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
1,411 ( 0.03%)  => ???:std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char) (5x)
    .               }
    3 ( 0.00%)  }
    .           
  252 ( 0.01%)  int Graph::getVertexCount() const {
1,276 ( 0.03%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (28x)
   56 ( 0.00%)      return numVertices;
   56 ( 0.00%)  }
    .           
  320 ( 0.01%)  const vector<Edge>& Graph::getNeighbors(int v) const {
1,456 ( 0.03%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (32x)
  384 ( 0.01%)      return adjList[v];
2,084 ( 0.05%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::operator[](unsigned long) const (32x)
   64 ( 0.00%)  }
    .           
   12 ( 0.00%)  } // namespace GraphAlgo
   19 ( 0.00%)  => ???:__gcov_init (1x)

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/bits/stl_deque.h
--------------------------------------------------------------------------------
Ir           

-- line 89 ----------------------------------------
  .             */
  .           
  .           #ifndef _GLIBCXX_DEQUE_BUF_SIZE
  .           #define _GLIBCXX_DEQUE_BUF_SIZE 512
  .           #endif
  .           
  .             _GLIBCXX_CONSTEXPR inline size_t
  .             __deque_buf_size(size_t __size)
 54 ( 0.00%)    { return (__size < _GLIBCXX_DEQUE_BUF_SIZE
290 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (6x)
 66 ( 0.00%)  	    ? size_t(_GLIBCXX_DEQUE_BUF_SIZE / __size) : size_t(1)); }
  .           
  .           
  .             /**
  .              *  @brief A deque::iterator.
  .              *
  .              *  Quite a bit of intelligence here.  Much of the functionality of
  .              *  deque is actually passed off to this class.  A deque holds two
  .              *  of these internally, marking its valid range.  Access to
-- line 106 ----------------------------------------
-- line 123 ----------------------------------------
  .           	using __iter = _Deque_iterator<_Tp, _CvTp&, __ptr_rebind<_Ptr, _CvTp>>;
  .               public:
  .                 typedef __iter<_Tp>				   iterator;
  .                 typedef __iter<const _Tp>				   const_iterator;
  .                 typedef __ptr_rebind<_Ptr, _Tp>			   _Elt_pointer;
  .                 typedef __ptr_rebind<_Ptr, _Elt_pointer>		   _Map_pointer;
  .           #endif
  .           
 14 ( 0.00%)        static size_t _S_buffer_size() _GLIBCXX_NOEXCEPT
 94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
 20 ( 0.00%)        { return __deque_buf_size(sizeof(_Tp)); }
134 ( 0.00%)  => /usr/include/c++/14/bits/stl_deque.h:std::__deque_buf_size(unsigned long) (2x)
  .           
  .                 typedef std::random_access_iterator_tag	iterator_category;
  .                 typedef _Tp				value_type;
  .                 typedef _Ptr				pointer;
  .                 typedef _Ref				reference;
  .                 typedef size_t				size_type;
  .                 typedef ptrdiff_t				difference_type;
  .                 typedef _Deque_iterator			_Self;
-- line 140 ----------------------------------------
-- line 143 ----------------------------------------
  .                 _Elt_pointer _M_first;
  .                 _Elt_pointer _M_last;
  .                 _Map_pointer _M_node;
  .           
  .                 _Deque_iterator(_Elt_pointer __x, _Map_pointer __y) _GLIBCXX_NOEXCEPT
  .                 : _M_cur(__x), _M_first(*__y),
  .           	_M_last(*__y + _S_buffer_size()), _M_node(__y) { }
  .           
 18 ( 0.00%)        _Deque_iterator() _GLIBCXX_NOEXCEPT
 98 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
 22 ( 0.00%)        : _M_cur(), _M_first(), _M_last(), _M_node() { }
  .           
  .           #if __cplusplus < 201103L
  .                 // Conversion from iterator to const_iterator.
  .                 _Deque_iterator(const iterator& __x) _GLIBCXX_NOEXCEPT
  .                 : _M_cur(__x._M_cur), _M_first(__x._M_first),
  .           	_M_last(__x._M_last), _M_node(__x._M_node) { }
  .           #else
  .                 // Conversion from iterator to const_iterator.
  .                 template<typename _Iter,
  .           	       typename = _Require<is_same<_Self, const_iterator>,
  .           				   is_same<_Iter, iterator>>>
  .                  _Deque_iterator(const _Iter& __x) noexcept
  .                  : _M_cur(__x._M_cur), _M_first(__x._M_first),
  .           	 _M_last(__x._M_last), _M_node(__x._M_node) { }
  .           
230 ( 0.01%)        _Deque_iterator(const _Deque_iterator& __x) noexcept
1,043 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (23x)
184 ( 0.00%)         : _M_cur(__x._M_cur), _M_first(__x._M_first),
253 ( 0.01%)  	 _M_last(__x._M_last), _M_node(__x._M_node) { }
  .           
  .                 _Deque_iterator& operator=(const _Deque_iterator&) = default;
  .           #endif
  .           
  .                 iterator
  .                 _M_const_cast() const _GLIBCXX_NOEXCEPT
  .                 { return iterator(_M_cur, _M_node); }
  .           
  .                 _GLIBCXX_NODISCARD
  .                 reference
189 ( 0.00%)        operator*() const _GLIBCXX_NOEXCEPT
949 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (21x)
 84 ( 0.00%)        { return *_M_cur; }
  .           
  .                 _GLIBCXX_NODISCARD
  .                 pointer
  .                 operator->() const _GLIBCXX_NOEXCEPT
  .                 { return _M_cur; }
  .           
  .                 _Self&
  .                 operator++() _GLIBCXX_NOEXCEPT
-- line 190 ----------------------------------------
-- line 202 ----------------------------------------
  .                 operator++(int) _GLIBCXX_NOEXCEPT
  .                 {
  .           	_Self __tmp = *this;
  .           	++*this;
  .           	return __tmp;
  .                 }
  .           
  .                 _Self&
189 ( 0.00%)        operator--() _GLIBCXX_NOEXCEPT
949 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (21x)
  .                 {
126 ( 0.00%)  	if (_M_cur == _M_first)
  .           	  {
  .           	    _M_set_node(_M_node - 1);
  .           	    _M_cur = _M_last;
  .           	  }
105 ( 0.00%)  	--_M_cur;
 21 ( 0.00%)  	return *this;
 42 ( 0.00%)        }
  .           
  .                 _Self
  .                 operator--(int) _GLIBCXX_NOEXCEPT
  .                 {
  .           	_Self __tmp = *this;
  .           	--*this;
  .           	return __tmp;
  .                 }
-- line 227 ----------------------------------------
-- line 255 ----------------------------------------
  .                 { return *(*this + __n); }
  .           
  .                 /**
  .                  *  Prepares to traverse new_node.  Sets everything except
  .                  *  _M_cur, which should therefore be set by the caller
  .                  *  immediately afterwards, based on _M_first and _M_last.
  .                  */
  .                 void
 22 ( 0.00%)        _M_set_node(_Map_pointer __new_node) _GLIBCXX_NOEXCEPT
 98 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
  .                 {
  6 ( 0.00%)  	_M_node = __new_node;
  8 ( 0.00%)  	_M_first = *__new_node;
 20 ( 0.00%)  	_M_last = _M_first + difference_type(_S_buffer_size());
262 ( 0.01%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_iterator<int, int&, int*>::_S_buffer_size() (2x)
  8 ( 0.00%)        }
  .           
  .                 _GLIBCXX_NODISCARD
  .                 friend bool
220 ( 0.01%)        operator==(const _Self& __x, const _Self& __y) _GLIBCXX_NOEXCEPT
994 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (22x)
176 ( 0.00%)        { return __x._M_cur == __y._M_cur; }
  .           
  .                 // Note: we also provide overloads whose operands are of the same type in
  .                 // order to avoid ambiguous overload resolution when std::rel_ops
  .                 // operators are in scope (for additional details, see libstdc++/3628)
  .                 template<typename _RefR, typename _PtrR>
  .           	_GLIBCXX_NODISCARD
  .           	friend bool
  .           	operator==(const _Self& __x,
-- line 281 ----------------------------------------
-- line 450 ----------------------------------------
  .           
  .                 allocator_type
  .                 get_allocator() const _GLIBCXX_NOEXCEPT
  .                 { return allocator_type(_M_get_Tp_allocator()); }
  .           
  .                 typedef _Deque_iterator<_Tp, _Tp&, _Ptr>	  iterator;
  .                 typedef _Deque_iterator<_Tp, const _Tp&, _Ptr_const>   const_iterator;
  .           
 10 ( 0.00%)        _Deque_base()
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  6 ( 0.00%)        : _M_impl()
290 ( 0.01%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::_Deque_impl::_Deque_impl() (1x)
 11 ( 0.00%)        { _M_initialize_map(0); }
1,882 ( 0.04%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::_M_initialize_map(unsigned long) (1x)
  .           
  .                 _Deque_base(size_t __num_elements)
  .                 : _M_impl()
  .                 { _M_initialize_map(__num_elements); }
  .           
  .                 _Deque_base(const allocator_type& __a, size_t __num_elements)
  .                 : _M_impl(__a)
  .                 { _M_initialize_map(__num_elements); }
-- line 468 ----------------------------------------
-- line 508 ----------------------------------------
  .           
  .                 struct _Deque_impl_data
  .                 {
  .           	_Map_pointer _M_map;
  .           	size_t _M_map_size;
  .           	iterator _M_start;
  .           	iterator _M_finish;
  .           
  9 ( 0.00%)  	_Deque_impl_data() _GLIBCXX_NOEXCEPT
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
 18 ( 0.00%)  	: _M_map(), _M_map_size(), _M_start(), _M_finish()
138 ( 0.00%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_iterator<int, int&, int*>::_Deque_iterator() (2x)
  3 ( 0.00%)  	{ }
  .           
  .           #if __cplusplus >= 201103L
  .           	_Deque_impl_data(const _Deque_impl_data&) = default;
  .           	_Deque_impl_data&
  .           	operator=(const _Deque_impl_data&) = default;
  .           
  .           	_Deque_impl_data(_Deque_impl_data&& __x) noexcept
  .           	: _Deque_impl_data(__x)
-- line 526 ----------------------------------------
-- line 534 ----------------------------------------
  .           	  // information used by TBAA.
  .           	  std::swap(*this, __x);
  .           	}
  .                 };
  .           
  .                 // This struct encapsulates the implementation of the std::deque
  .                 // standard container and at the same time makes use of the EBO
  .                 // for empty allocators.
 14 ( 0.00%)        struct _Deque_impl
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .                 : public _Tp_alloc_type, public _Deque_impl_data
  .                 {
 13 ( 0.00%)  	_Deque_impl() _GLIBCXX_NOEXCEPT_IF(
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .           	  is_nothrow_default_constructible<_Tp_alloc_type>::value)
  6 ( 0.00%)  	: _Tp_alloc_type()
217 ( 0.01%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::_Deque_impl_data::_Deque_impl_data() (1x)
  3 ( 0.00%)  	{ }
  .           
  .           	_Deque_impl(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
  .           	: _Tp_alloc_type(__a)
  .           	{ }
  .           
  .           #if __cplusplus >= 201103L
  .           	_Deque_impl(_Deque_impl&&) = default;
  .           
-- line 556 ----------------------------------------
-- line 560 ----------------------------------------
  .           
  .           	_Deque_impl(_Deque_impl&& __d, _Tp_alloc_type&& __a)
  .           	: _Tp_alloc_type(std::move(__a)), _Deque_impl_data(std::move(__d))
  .           	{ }
  .           #endif
  .                 };
  .           
  .                 _Tp_alloc_type&
108 ( 0.00%)        _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
548 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (12x)
 36 ( 0.00%)        { return this->_M_impl; }
  .           
  .                 const _Tp_alloc_type&
 18 ( 0.00%)        _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
  6 ( 0.00%)        { return this->_M_impl; }
  .           
  .                 _Map_alloc_type
 20 ( 0.00%)        _M_get_map_allocator() const _GLIBCXX_NOEXCEPT
 98 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
 30 ( 0.00%)        { return _Map_alloc_type(_M_get_Tp_allocator()); }
118 ( 0.00%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::_M_get_Tp_allocator() const (2x)
  .           
  .                 _Ptr
  9 ( 0.00%)        _M_allocate_node()
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .                 {
  .           	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Traits;
  9 ( 0.00%)  	return _Traits::allocate(_M_impl, __deque_buf_size(sizeof(_Tp)));
 69 ( 0.00%)  => /usr/include/c++/14/bits/stl_deque.h:std::__deque_buf_size(unsigned long) (1x)
  2 ( 0.00%)        }
  .           
  .                 void
 10 ( 0.00%)        _M_deallocate_node(_Ptr __p) _GLIBCXX_NOEXCEPT
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .                 {
  .           	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Traits;
 10 ( 0.00%)  	_Traits::deallocate(_M_impl, __p, __deque_buf_size(sizeof(_Tp)));
 69 ( 0.00%)  => /usr/include/c++/14/bits/stl_deque.h:std::__deque_buf_size(unsigned long) (1x)
  3 ( 0.00%)        }
  .           
  .                 _Map_pointer
 11 ( 0.00%)        _M_allocate_map(size_t __n)
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .                 {
 10 ( 0.00%)  	_Map_alloc_type __map_alloc = _M_get_map_allocator();
137 ( 0.00%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::_M_get_map_allocator() const (1x)
  3 ( 0.00%)  	return _Map_alloc_traits::allocate(__map_alloc, __n);
  3 ( 0.00%)        }
  .           
  .                 void
 11 ( 0.00%)        _M_deallocate_map(_Map_pointer __p, size_t __n) _GLIBCXX_NOEXCEPT
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .                 {
 12 ( 0.00%)  	_Map_alloc_type __map_alloc = _M_get_map_allocator();
133 ( 0.00%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::_M_get_map_allocator() const (1x)
  .           	_Map_alloc_traits::deallocate(__map_alloc, __p, __n);
  3 ( 0.00%)        }
  .           
  .                 void _M_initialize_map(size_t);
  .                 void _M_create_nodes(_Map_pointer __nstart, _Map_pointer __nfinish);
  .                 void _M_destroy_nodes(_Map_pointer __nstart,
  .           			    _Map_pointer __nfinish) _GLIBCXX_NOEXCEPT;
  .                 enum { _S_initial_map_size = 8 };
  .           
  .                 _Deque_impl _M_impl;
  .               };
  .           
  .             template<typename _Tp, typename _Alloc>
  9 ( 0.00%)      _Deque_base<_Tp, _Alloc>::
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .               ~_Deque_base() _GLIBCXX_NOEXCEPT
  .               {
  7 ( 0.00%)        if (this->_M_impl._M_map)
  .           	{
 10 ( 0.00%)  	  _M_destroy_nodes(this->_M_impl._M_start._M_node,
380 ( 0.01%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::_M_destroy_nodes(int**, int**) (1x)
  2 ( 0.00%)  			   this->_M_impl._M_finish._M_node + 1);
 11 ( 0.00%)  	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
429 ( 0.01%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::_M_deallocate_map(int**, unsigned long) (1x)
  .           	}
  9 ( 0.00%)      }
131 ( 0.00%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::_Deque_impl::~_Deque_impl() (1x)
  .           
  .             /**
  .              *  @brief Layout storage.
  .              *  @param  __num_elements  The count of T's for which to allocate space
  .              *                          at first.
  .              *  @return   Nothing.
  .              *
  .              *  The initial underlying memory layout is a bit complicated...
  .             */
  .             template<typename _Tp, typename _Alloc>
  .               void
 11 ( 0.00%)      _Deque_base<_Tp, _Alloc>::
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .               _M_initialize_map(size_t __num_elements)
  .               {
 11 ( 0.00%)        const size_t __num_nodes = (__num_elements / __deque_buf_size(sizeof(_Tp))
 69 ( 0.00%)  => /usr/include/c++/14/bits/stl_deque.h:std::__deque_buf_size(unsigned long) (1x)
  .           				  + 1);
  .           
 12 ( 0.00%)        this->_M_impl._M_map_size = std::max((size_t) _S_initial_map_size,
 68 ( 0.00%)  => /usr/include/c++/14/bits/stl_algobase.h:unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) (1x)
  3 ( 0.00%)  					   size_t(__num_nodes + 2));
 11 ( 0.00%)        this->_M_impl._M_map = _M_allocate_map(this->_M_impl._M_map_size);
578 ( 0.01%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::_M_allocate_map(unsigned long) (1x)
  .           
  .                 // For "small" maps (needing less than _M_map_size nodes), allocation
  .                 // starts in the middle elements and grows outwards.  So nstart may be
  .                 // the beginning of _M_map, but for small maps it may be as far in as
  .                 // _M_map+3.
  .           
  4 ( 0.00%)        _Map_pointer __nstart = (this->_M_impl._M_map
  5 ( 0.00%)  			       + (this->_M_impl._M_map_size - __num_nodes) / 2);
  5 ( 0.00%)        _Map_pointer __nfinish = __nstart + __num_nodes;
  .           
  .                 __try
  9 ( 0.00%)  	{ _M_create_nodes(__nstart, __nfinish); }
510 ( 0.01%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::_M_create_nodes(int**, int**) (1x)
  .                 __catch(...)
  .           	{
  .           	  _M_deallocate_map(this->_M_impl._M_map, this->_M_impl._M_map_size);
  .           	  this->_M_impl._M_map = _Map_pointer();
  .           	  this->_M_impl._M_map_size = 0;
  .           	  __throw_exception_again;
  .           	}
  .           
  9 ( 0.00%)        this->_M_impl._M_start._M_set_node(__nstart);
216 ( 0.01%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_iterator<int, int&, int*>::_M_set_node(int**) (1x)
 10 ( 0.00%)        this->_M_impl._M_finish._M_set_node(__nfinish - 1);
208 ( 0.00%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_iterator<int, int&, int*>::_M_set_node(int**) (1x)
  4 ( 0.00%)        this->_M_impl._M_start._M_cur = _M_impl._M_start._M_first;
  4 ( 0.00%)        this->_M_impl._M_finish._M_cur = (this->_M_impl._M_finish._M_first
  2 ( 0.00%)  					+ __num_elements
 11 ( 0.00%)  					% __deque_buf_size(sizeof(_Tp)));
 69 ( 0.00%)  => /usr/include/c++/14/bits/stl_deque.h:std::__deque_buf_size(unsigned long) (1x)
  4 ( 0.00%)      }
  .           
  .             template<typename _Tp, typename _Alloc>
  .               void
 12 ( 0.00%)      _Deque_base<_Tp, _Alloc>::
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .               _M_create_nodes(_Map_pointer __nstart, _Map_pointer __nfinish)
  .               {
  .                 _Map_pointer __cur;
  .                 __try
  .           	{
 13 ( 0.00%)  	  for (__cur = __nstart; __cur < __nfinish; ++__cur)
  8 ( 0.00%)  	    *__cur = this->_M_allocate_node();
424 ( 0.01%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::_M_allocate_node() (1x)
  .           	}
  .                 __catch(...)
  .           	{
  .           	  _M_destroy_nodes(__nstart, __cur);
  .           	  __throw_exception_again;
  .           	}
  4 ( 0.00%)      }
  .           
  .             template<typename _Tp, typename _Alloc>
  .               void
 11 ( 0.00%)      _Deque_base<_Tp, _Alloc>::
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .               _M_destroy_nodes(_Map_pointer __nstart,
  .           		     _Map_pointer __nfinish) _GLIBCXX_NOEXCEPT
  .               {
 13 ( 0.00%)        for (_Map_pointer __n = __nstart; __n < __nfinish; ++__n)
  9 ( 0.00%)  	_M_deallocate_node(*__n);
294 ( 0.01%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::_M_deallocate_node(int*) (1x)
  4 ( 0.00%)      }
  .           
  .             /**
  .              *  @brief  A standard container using fixed-size memory allocation and
  .              *  constant-time manipulation of elements at either end.
  .              *
  .              *  @ingroup sequences
  .              *
  .              *  @tparam _Tp  Type of element.
-- line 709 ----------------------------------------
-- line 847 ----------------------------------------
  .               public:
  .                 // [23.2.1.1] construct/copy/destroy
  .                 // (assign() and get_allocator() are also listed in this section)
  .           
  .                 /**
  .                  *  @brief  Creates a %deque with no elements.
  .                  */
  .           #if __cplusplus >= 201103L
 18 ( 0.00%)        deque() = default;
2,248 ( 0.05%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::_Deque_base() (1x)
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .           #else
  .                 deque() { }
  .           #endif
  .           
  .                 /**
  .                  *  @brief  Creates a %deque with no elements.
  .                  *  @param  __a  An allocator object.
  .                  */
-- line 863 ----------------------------------------
-- line 1019 ----------------------------------------
  .           	}
  .           #endif
  .           
  .                 /**
  .                  *  The dtor only erases the elements, and note that if the elements
  .                  *  themselves are pointers, the pointed-to memory is not touched in any
  .                  *  way.  Managing the pointer is the user's responsibility.
  .                  */
 10 ( 0.00%)        ~deque()
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
 42 ( 0.00%)        { _M_destroy_data(begin(), end(), _M_get_Tp_allocator()); }
1,037 ( 0.02%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::~_Deque_base() (1x)
149 ( 0.00%)  => /usr/include/c++/14/bits/stl_deque.h:std::deque<int, std::allocator<int> >::begin() (1x)
145 ( 0.00%)  => /usr/include/c++/14/bits/stl_deque.h:std::deque<int, std::allocator<int> >::end() (1x)
 64 ( 0.00%)  => /usr/include/c++/14/bits/stl_deque.h:std::deque<int, std::allocator<int> >::_M_destroy_data(std::_Deque_iterator<int, int&, int*>, std::_Deque_iterator<int, int&, int*>, std::allocator<int> const&) (1x)
 61 ( 0.00%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::_M_get_Tp_allocator() (1x)
  .           
  .                 /**
  .                  *  @brief  %Deque assignment operator.
  .                  *  @param  __x  A %deque of identical element and allocator types.
  .                  *
  .                  *  All the elements of @a x are copied.
  .                  *
  .                  *  The newly-created %deque uses a copy of the allocator object used
-- line 1036 ----------------------------------------
-- line 1143 ----------------------------------------
  .           
  .                 // iterators
  .                 /**
  .                  *  Returns a read/write iterator that points to the first element in the
  .                  *  %deque.  Iteration is done in ordinary element order.
  .                  */
  .                 _GLIBCXX_NODISCARD
  .                 iterator
 10 ( 0.00%)        begin() _GLIBCXX_NOEXCEPT
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
 12 ( 0.00%)        { return this->_M_impl._M_start; }
 78 ( 0.00%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_iterator<int, int&, int*>::_Deque_iterator(std::_Deque_iterator<int, int&, int*> const&) (1x)
  .           
  .                 /**
  .                  *  Returns a read-only (constant) iterator that points to the first
  .                  *  element in the %deque.  Iteration is done in ordinary element order.
  .                  */
  .                 _GLIBCXX_NODISCARD
  .                 const_iterator
  .                 begin() const _GLIBCXX_NOEXCEPT
-- line 1160 ----------------------------------------
-- line 1162 ----------------------------------------
  .           
  .                 /**
  .                  *  Returns a read/write iterator that points one past the last
  .                  *  element in the %deque.  Iteration is done in ordinary
  .                  *  element order.
  .                  */
  .                 _GLIBCXX_NODISCARD
  .                 iterator
220 ( 0.01%)        end() _GLIBCXX_NOEXCEPT
998 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (22x)
264 ( 0.01%)        { return this->_M_impl._M_finish; }
1,632 ( 0.04%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_iterator<int, int&, int*>::_Deque_iterator(std::_Deque_iterator<int, int&, int*> const&) (22x)
  .           
  .                 /**
  .                  *  Returns a read-only (constant) iterator that points one past
  .                  *  the last element in the %deque.  Iteration is done in
  .                  *  ordinary element order.
  .                  */
  .                 _GLIBCXX_NODISCARD
  .                 const_iterator
-- line 1179 ----------------------------------------
-- line 1339 ----------------------------------------
  .                 { _M_shrink_to_fit(); }
  .           #endif
  .           
  .                 /**
  .                  *  Returns true if the %deque is empty.  (Thus begin() would
  .                  *  equal end().)
  .                  */
  .                 _GLIBCXX_NODISCARD bool
198 ( 0.00%)        empty() const _GLIBCXX_NOEXCEPT
994 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (22x)
330 ( 0.01%)        { return this->_M_impl._M_finish == this->_M_impl._M_start; }
1,390 ( 0.03%)  => /usr/include/c++/14/bits/stl_deque.h:std::operator==(std::_Deque_iterator<int, int&, int*> const&, std::_Deque_iterator<int, int&, int*> const&) (22x)
  .           
  .                 // element access
  .                 /**
  .                  *  @brief Subscript access to the data contained in the %deque.
  .                  *  @param __n The index of the element for which data should be
  .                  *  accessed.
  .                  *  @return  Read/write reference to data.
  .                  *
-- line 1356 ----------------------------------------
-- line 1460 ----------------------------------------
  .                 }
  .           
  .                 /**
  .                  *  Returns a read/write reference to the data at the last element of the
  .                  *  %deque.
  .                  */
  .                 _GLIBCXX_NODISCARD
  .                 reference
189 ( 0.00%)        back() _GLIBCXX_NOEXCEPT
949 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (21x)
  .                 {
  .           	__glibcxx_requires_nonempty();
168 ( 0.00%)  	iterator __tmp = end();
2,969 ( 0.07%)  => /usr/include/c++/14/bits/stl_deque.h:std::deque<int, std::allocator<int> >::end() (21x)
126 ( 0.00%)  	--__tmp;
1,432 ( 0.03%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_iterator<int, int&, int*>::operator--() (21x)
189 ( 0.00%)  	return *__tmp;
1,222 ( 0.03%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_iterator<int, int&, int*>::operator*() const (21x)
 42 ( 0.00%)        }
  .           
  .                 /**
  .                  *  Returns a read-only (constant) reference to the data at the last
  .                  *  element of the %deque.
  .                  */
  .                 _GLIBCXX_NODISCARD
  .                 const_reference
  .                 back() const _GLIBCXX_NOEXCEPT
-- line 1482 ----------------------------------------
-- line 1530 ----------------------------------------
  .                  *  @param  __x  Data to be added.
  .                  *
  .                  *  This is a typical stack operation.  The function creates an
  .                  *  element at the end of the %deque and assigns the given data
  .                  *  to it.  Due to the nature of a %deque this operation can be
  .                  *  done in constant time.
  .                  */
  .                 void
132 ( 0.00%)        push_back(const value_type& __x)
499 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (11x)
  .                 {
 77 ( 0.00%)  	if (this->_M_impl._M_finish._M_cur
 33 ( 0.00%)  	    != this->_M_impl._M_finish._M_last - 1)
  .           	  {
 77 ( 0.00%)  	    _Alloc_traits::construct(this->_M_impl,
  .           				     this->_M_impl._M_finish._M_cur, __x);
 55 ( 0.00%)  	    ++this->_M_impl._M_finish._M_cur;
  .           	  }
  .           	else
  .           	  _M_push_back_aux(__x);
 77 ( 0.00%)        }
  .           
  .           #if __cplusplus >= 201103L
  .                 void
  .                 push_back(value_type&& __x)
  .                 { emplace_back(std::move(__x)); }
  .           
  .                 template<typename... _Args>
  .           #if __cplusplus > 201402L
-- line 1557 ----------------------------------------
-- line 1589 ----------------------------------------
  .                  *  @brief  Removes last element.
  .                  *
  .                  *  This is a typical stack operation.  It shrinks the %deque by one.
  .                  *
  .                  *  Note that no data is returned, and if the last element's data is
  .                  *  needed, it should be retrieved before pop_back() is called.
  .                  */
  .                 void
110 ( 0.00%)        pop_back() _GLIBCXX_NOEXCEPT
499 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (11x)
  .                 {
  .           	__glibcxx_requires_nonempty();
 77 ( 0.00%)  	if (this->_M_impl._M_finish._M_cur
 22 ( 0.00%)  	    != this->_M_impl._M_finish._M_first)
  .           	  {
 55 ( 0.00%)  	    --this->_M_impl._M_finish._M_cur;
154 ( 0.00%)  	    _Alloc_traits::destroy(_M_get_Tp_allocator(),
631 ( 0.01%)  => /usr/include/c++/14/bits/stl_deque.h:std::_Deque_base<int, std::allocator<int> >::_M_get_Tp_allocator() (11x)
  .           				   this->_M_impl._M_finish._M_cur);
  .           	  }
  .           	else
  .           	  _M_pop_back_aux();
 44 ( 0.00%)        }
  .           
  .           #if __cplusplus >= 201103L
  .                 /**
  .                  *  @brief  Inserts an object in %deque before specified iterator.
  .                  *  @param  __position  A const_iterator into the %deque.
  .                  *  @param  __args  Arguments.
  .                  *  @return  An iterator that points to the inserted data.
  .                  *
-- line 1617 ----------------------------------------
-- line 2083 ----------------------------------------
  .                 // Called by ~deque().
  .                 // NB: Doesn't deallocate the nodes.
  .                 template<typename _Alloc1>
  .           	void
  .           	_M_destroy_data(iterator __first, iterator __last, const _Alloc1&)
  .           	{ _M_destroy_data_aux(__first, __last); }
  .           
  .                 void
 12 ( 0.00%)        _M_destroy_data(iterator __first, iterator __last,
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .           		      const std::allocator<_Tp>&)
  .                 {
  .           	if (!__has_trivial_destructor(value_type))
  .           	  _M_destroy_data_aux(__first, __last);
  3 ( 0.00%)        }
  .           
  .                 // Called by erase(q1, q2).
  .                 void
  .                 _M_erase_at_begin(iterator __pos)
  .                 {
  .           	_M_destroy_data(begin(), __pos, _M_get_Tp_allocator());
  .           	_M_destroy_nodes(this->_M_impl._M_start._M_node, __pos._M_node);
  .           	this->_M_impl._M_start = __pos;
-- line 2104 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/bits/stl_function.h
--------------------------------------------------------------------------------
Ir             

-- line 396 ----------------------------------------
    .               };
    .           
    .             /// One of the @link comparison_functors comparison functors@endlink.
    .             template<typename _Tp>
    .               struct less : public binary_function<_Tp, _Tp, bool>
    .               {
    .                 _GLIBCXX14_CONSTEXPR
    .                 bool
1,914 ( 0.04%)        operator()(const _Tp& __x, const _Tp& __y) const
7,850 ( 0.18%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (174x)
2,262 ( 0.05%)        { return __x < __y; }
13,636 ( 0.32%)  => /usr/include/c++/14/bits/stl_pair.h:bool std::operator< <int, int>(std::pair<int, int> const&, std::pair<int, int> const&) (174x)
    .               };
    .           
    .             /// One of the @link comparison_functors comparison functors@endlink.
    .             template<typename _Tp>
    .               struct greater_equal : public binary_function<_Tp, _Tp, bool>
    .               {
    .                 _GLIBCXX14_CONSTEXPR
    .                 bool
-- line 413 ----------------------------------------
-- line 1151 ----------------------------------------
    .               { return pointer_to_binary_function<_Arg1, _Arg2, _Result>(__x); }
    .             /** @}  */
    .           
    .             template<typename _Tp>
    .               struct _Identity
    .               : public unary_function<_Tp, _Tp>
    .               {
    .                 _Tp&
  190 ( 0.00%)        operator()(_Tp& __x) const
  863 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (19x)
   57 ( 0.00%)        { return __x; }
    .           
    .                 const _Tp&
1,740 ( 0.04%)        operator()(const _Tp& __x) const
7,834 ( 0.18%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (174x)
  522 ( 0.01%)        { return __x; }
    .               };
    .           
    .             // Partial specialization, avoids confusing errors in e.g. std::set<const T>.
    .             template<typename _Tp> struct _Identity<const _Tp> : _Identity<_Tp> { };
    .           
    .             template<typename _Pair>
    .               struct _Select1st
    .               : public unary_function<_Pair, typename _Pair::first_type>
-- line 1172 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/bits/vector.tcc
--------------------------------------------------------------------------------
Ir           

-- line 103 ----------------------------------------
  .             template<typename _Tp, typename _Alloc>
  .               template<typename... _Args>
  .           #if __cplusplus > 201402L
  .                 _GLIBCXX20_CONSTEXPR
  .                 typename vector<_Tp, _Alloc>::reference
  .           #else
  .                 void
  .           #endif
280 ( 0.01%)        vector<_Tp, _Alloc>::
908 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (20x)
  .                 emplace_back(_Args&&... __args)
  .                 {
135 ( 0.00%)  	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
  .           	  {
  .           	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
100 ( 0.00%)  	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
578 ( 0.01%)  => /usr/include/c++/14/bits/move.h:int& std::forward<int&>(std::remove_reference<int&>::type&) (10x)
  .           				     std::forward<_Args>(__args)...);
 30 ( 0.00%)  	    ++this->_M_impl._M_finish;
  .           	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
  .           	  }
  .           	else
330 ( 0.01%)  	  _M_realloc_append(std::forward<_Args>(__args)...);
59,066 ( 1.38%)  => /usr/include/c++/14/bits/vector.tcc:void std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_realloc_append<int&, int&>(int&, int&) (15x)
1,718 ( 0.04%)  => /usr/include/c++/14/bits/move.h:int& std::forward<int&>(std::remove_reference<int&>::type&) (30x)
  .           #if __cplusplus > 201402L
180 ( 0.00%)  	return back();
8,040 ( 0.19%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::back() (20x)
  .           #endif
120 ( 0.00%)        }
  .           #endif
  .           
  .             template<typename _Tp, typename _Alloc>
  .               _GLIBCXX20_CONSTEXPR
  .               typename vector<_Tp, _Alloc>::iterator
  .               vector<_Tp, _Alloc>::
  .           #if __cplusplus >= 201103L
  .               insert(const_iterator __position, const value_type& __x)
-- line 135 ----------------------------------------
-- line 173 ----------------------------------------
  .           #endif
  .           
  .                 return iterator(this->_M_impl._M_start + __n);
  .               }
  .           
  .             template<typename _Tp, typename _Alloc>
  .               _GLIBCXX20_CONSTEXPR
  .               typename vector<_Tp, _Alloc>::iterator
110 ( 0.00%)      vector<_Tp, _Alloc>::
454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
  .               _M_erase(iterator __position)
  .               {
262 ( 0.01%)        if (__position + 1 != end())
1,904 ( 0.04%)  => /usr/include/c++/14/bits/stl_iterator.h:bool __gnu_cxx::operator!=<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&, __gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) (10x)
1,344 ( 0.03%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator+(long) const (10x)
1,284 ( 0.03%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::end() (10x)
 80 ( 0.00%)  	_GLIBCXX_MOVE3(__position + 1, end(), __position);
6,288 ( 0.15%)  => /usr/include/c++/14/bits/stl_algobase.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > std::move<__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, __gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, __gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, __gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >) (4x)
540 ( 0.01%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator+(long) const (4x)
516 ( 0.01%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::end() (4x)
 50 ( 0.00%)        --this->_M_impl._M_finish;
 90 ( 0.00%)        _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
  .                 _GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
 10 ( 0.00%)        return __position;
 30 ( 0.00%)      }
  .           
  .             template<typename _Tp, typename _Alloc>
  .               _GLIBCXX20_CONSTEXPR
  .               typename vector<_Tp, _Alloc>::iterator
  .               vector<_Tp, _Alloc>::
  .               _M_erase(iterator __first, iterator __last)
  .               {
  .                 if (__first != __last)
-- line 198 ----------------------------------------
-- line 573 ----------------------------------------
  .                 this->_M_impl._M_end_of_storage = __new_start + __len;
  .               }
  .           
  .           #if __cplusplus >= 201103L
  .             template<typename _Tp, typename _Alloc>
  .               template<typename... _Args>
  .                 _GLIBCXX20_CONSTEXPR
  .                 void
270 ( 0.01%)        vector<_Tp, _Alloc>::
679 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (15x)
  .                 _M_realloc_append(_Args&&... __args)
  .           #else
  .             template<typename _Tp, typename _Alloc>
  .               void
  .               vector<_Tp, _Alloc>::
  .               _M_realloc_append(const _Tp& __x)
  .           #endif
  .               {
180 ( 0.00%)        const size_type __len = _M_check_len(1u, "vector::_M_realloc_append");
14,824 ( 0.35%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_check_len(unsigned long, char const*) const (15x)
 40 ( 0.00%)        if (__len <= 0)
  .           	__builtin_unreachable ();
 60 ( 0.00%)        pointer __old_start = this->_M_impl._M_start;
 60 ( 0.00%)        pointer __old_finish = this->_M_impl._M_finish;
460 ( 0.01%)        const size_type __elems = end() - begin();
2,907 ( 0.07%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::difference_type __gnu_cxx::operator-<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&, __gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) (15x)
1,928 ( 0.05%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::end() (15x)
1,913 ( 0.04%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::begin() (15x)
180 ( 0.00%)        pointer __new_start(this->_M_allocate(__len));
4,770 ( 0.11%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_allocate(unsigned long) (15x)
 40 ( 0.00%)        pointer __new_finish(__new_start);
  .           
  .                 // RAII guard for allocated storage.
  .                 struct _Guard
  .                 {
  .           	pointer _M_storage;	    // Storage to deallocate
  .           	size_type _M_len;
  .           	_Tp_alloc_type& _M_alloc;
  .           
  .           	_GLIBCXX20_CONSTEXPR
240 ( 0.01%)  	_Guard(pointer __s, size_type __l, _Tp_alloc_type& __a)
229 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (5x)
180 ( 0.00%)  	: _M_storage(__s), _M_len(__l), _M_alloc(__a)
 60 ( 0.00%)  	{ }
  .           
  .           	_GLIBCXX20_CONSTEXPR
180 ( 0.00%)  	~_Guard()
679 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (15x)
  .           	{
122 ( 0.00%)  	  if (_M_storage)
  .           	    __gnu_cxx::__alloc_traits<_Tp_alloc_type>::
126 ( 0.00%)  	      deallocate(_M_alloc, _M_storage, _M_len);
 60 ( 0.00%)  	}
  .           
  .                 private:
  .           	_Guard(const _Guard&);
  .                 };
  .           
  .                 {
180 ( 0.00%)  	_Guard __guard(__new_start, __len, _M_impl);
1,039 ( 0.02%)  => /usr/include/c++/14/bits/vector.tcc:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_realloc_append<int&, int&>(int&, int&)::_Guard::_Guard(GraphAlgo::Edge*, unsigned long, std::allocator<GraphAlgo::Edge>&) (15x)
  .           
  .           	// The order of the three operations is dictated by the C++11
  .           	// case, where the moves could alter a new element belonging
  .           	// to the existing vector.  This is an issue only for callers
  .           	// taking the element by lvalue ref (see last bullet of C++11
  .           	// [res.on.arguments]).
  .           
  .           	// If this throws, the existing elements are unchanged.
  .           #if __cplusplus >= 201103L
480 ( 0.01%)  	_Alloc_traits::construct(this->_M_impl,
1,718 ( 0.04%)  => /usr/include/c++/14/bits/move.h:int& std::forward<int&>(std::remove_reference<int&>::type&) (30x)
859 ( 0.02%)  => /usr/include/c++/14/bits/ptr_traits.h:GraphAlgo::Edge* std::__to_address<GraphAlgo::Edge>(GraphAlgo::Edge*) (15x)
 40 ( 0.00%)  				 std::__to_address(__new_start + __elems),
  .           				 std::forward<_Args>(__args)...);
  .           #else
  .           	_Alloc_traits::construct(this->_M_impl,
  .           				 __new_start + __elems,
  .           				 __x);
  .           #endif
  .           
  .           #if __cplusplus >= 201103L
  .           	if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
  .           	  {
  .           	    // Relocation cannot throw.
180 ( 0.00%)  	    __new_finish = _S_relocate(__old_start, __old_finish,
14,471 ( 0.34%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_S_relocate(GraphAlgo::Edge*, GraphAlgo::Edge*, GraphAlgo::Edge*, std::allocator<GraphAlgo::Edge>&) (15x)
140 ( 0.00%)  				       __new_start, _M_get_Tp_allocator());
859 ( 0.02%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_get_Tp_allocator() (15x)
 20 ( 0.00%)  	    ++__new_finish;
  .           	  }
  .           	else
  .           #endif
  .           	  {
  .           	    // RAII type to destroy initialized elements.
  .           	    struct _Guard_elts
  .           	    {
  .           	      pointer _M_first, _M_last;  // Elements to destroy
-- line 657 ----------------------------------------
-- line 678 ----------------------------------------
  .           			     __new_start, _M_get_Tp_allocator());
  .           
  .           	    ++__new_finish;
  .           
  .           	    // New storage has been fully initialized, destroy the old elements.
  .           	    __guard_elts._M_first = __old_start;
  .           	    __guard_elts._M_last = __old_finish;
  .           	  }
 40 ( 0.00%)  	__guard._M_storage = __old_start;
100 ( 0.00%)  	__guard._M_len = this->_M_impl._M_end_of_storage - __old_start;
120 ( 0.00%)        }
4,705 ( 0.11%)  => /usr/include/c++/14/bits/vector.tcc:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_realloc_append<int&, int&>(int&, int&)::_Guard::~_Guard() (15x)
  .                 // deallocate should be called before assignments to _M_impl,
  .                 // to avoid call-clobbering
  .           
 60 ( 0.00%)        this->_M_impl._M_start = __new_start;
 60 ( 0.00%)        this->_M_impl._M_finish = __new_finish;
120 ( 0.00%)        this->_M_impl._M_end_of_storage = __new_start + __len;
135 ( 0.00%)      }
  .           
  .             template<typename _Tp, typename _Alloc>
  .               _GLIBCXX20_CONSTEXPR
  .               void
  .               vector<_Tp, _Alloc>::
  .               _M_fill_insert(iterator __position, size_type __n, const value_type& __x)
  .               {
  .                 if (__n != 0)
-- line 703 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/bits/stl_stack.h
--------------------------------------------------------------------------------
Ir           

-- line 91 ----------------------------------------
  .              *  type.
  .              *
  .              *  Members not found in @a normal containers are @c container_type,
  .              *  which is a typedef for the second Sequence parameter, and @c
  .              *  push, @c pop, and @c top, which are standard %stack/FILO
  .              *  operations.
  .             */
  .             template<typename _Tp, typename _Sequence = deque<_Tp> >
 18 ( 0.00%)      class stack
1,557 ( 0.04%)  => /usr/include/c++/14/bits/stl_deque.h:std::deque<int, std::allocator<int> >::~deque() (1x)
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .               {
  .           #ifdef _GLIBCXX_CONCEPT_CHECKS
  .                 // concept requirements
  .                 typedef typename _Sequence::value_type _Sequence_value_type;
  .           # if __cplusplus < 201103L
  .                 __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
  .                 __glibcxx_class_requires(_Sequence, _BackInsertionSequenceConcept)
  .           # endif
-- line 107 ----------------------------------------
-- line 154 ----------------------------------------
  .                  */
  .           #if __cplusplus < 201103L
  .                 explicit
  .                 stack(const _Sequence& __c = _Sequence())
  .                 : c(__c) { }
  .           #else
  .                 template<typename _Seq = _Sequence, typename _Requires = typename
  .           	       enable_if<is_default_constructible<_Seq>::value>::type>
  9 ( 0.00%)  	stack()
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
 16 ( 0.00%)  	: c() { }
2,315 ( 0.05%)  => /usr/include/c++/14/bits/stl_deque.h:std::deque<int, std::allocator<int> >::deque() (1x)
  .           
  .                 explicit
  .                 stack(const _Sequence& __c)
  .                 : c(__c) { }
  .           
  .                 explicit
  .                 stack(_Sequence&& __c)
  .                 : c(std::move(__c)) { }
-- line 171 ----------------------------------------
-- line 207 ----------------------------------------
  .           	: c(__first, __last, __a) { }
  .           #endif
  .           #endif
  .           
  .                 /**
  .                  *  Returns true if the %stack is empty.
  .                  */
  .                 _GLIBCXX_NODISCARD bool
198 ( 0.00%)        empty() const
994 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (22x)
242 ( 0.01%)        { return c.empty(); }
2,912 ( 0.07%)  => /usr/include/c++/14/bits/stl_deque.h:std::deque<int, std::allocator<int> >::empty() const (22x)
  .           
  .                 /**  Returns the number of elements in the %stack.  */
  .                 _GLIBCXX_NODISCARD
  .                 size_type
  .                 size() const
  .                 { return c.size(); }
  .           
  .                 /**
  .                  *  Returns a read/write reference to the data at the first
  .                  *  element of the %stack.
  .                  */
  .                 _GLIBCXX_NODISCARD
  .                 reference
189 ( 0.00%)        top()
949 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (21x)
  .                 {
  .           	__glibcxx_requires_nonempty();
189 ( 0.00%)  	return c.back();
7,286 ( 0.17%)  => /usr/include/c++/14/bits/stl_deque.h:std::deque<int, std::allocator<int> >::back() (21x)
 42 ( 0.00%)        }
  .           
  .                 /**
  .                  *  Returns a read-only (constant) reference to the data at the first
  .                  *  element of the %stack.
  .                  */
  .                 _GLIBCXX_NODISCARD
  .                 const_reference
  .                 top() const
-- line 242 ----------------------------------------
-- line 250 ----------------------------------------
  .                  *  @param  __x  Data to be added.
  .                  *
  .                  *  This is a typical %stack operation.  The function creates an
  .                  *  element at the top of the %stack and assigns the given data
  .                  *  to it.  The time complexity of the operation depends on the
  .                  *  underlying sequence.
  .                  */
  .                 void
110 ( 0.00%)        push(const value_type& __x)
503 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (11x)
121 ( 0.00%)        { c.push_back(__x); }
3,239 ( 0.08%)  => /usr/include/c++/14/bits/stl_deque.h:std::deque<int, std::allocator<int> >::push_back(int const&) (11x)
  .           
  .           #if __cplusplus >= 201103L
  .                 void
  .                 push(value_type&& __x)
  .                 { c.push_back(std::move(__x)); }
  .           
  .           #if __cplusplus > 201402L
  .                 template<typename... _Args>
-- line 267 ----------------------------------------
-- line 283 ----------------------------------------
  .                  *  by one.  The time complexity of the operation depends on the
  .                  *  underlying sequence.
  .                  *
  .                  *  Note that no data is returned, and if the first element's
  .                  *  data is needed, it should be retrieved before pop() is
  .                  *  called.
  .                  */
  .                 void
 99 ( 0.00%)        pop()
499 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (11x)
  .                 {
  .           	__glibcxx_requires_nonempty();
 66 ( 0.00%)  	c.pop_back();
1,614 ( 0.04%)  => /usr/include/c++/14/bits/stl_deque.h:std::deque<int, std::allocator<int> >::pop_back() (11x)
 33 ( 0.00%)        }
  .           
  .           #if __cplusplus >= 201103L
  .                 void
  .                 swap(stack& __s)
  .           #if __cplusplus > 201402L || !defined(__STRICT_ANSI__) // c++1z or gnu++11
  .                 noexcept(__is_nothrow_swappable<_Sequence>::value)
  .           #else
  .                 noexcept(__is_nothrow_swappable<_Tp>::value)
-- line 303 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/bits/stl_bvector.h
--------------------------------------------------------------------------------
Ir             

-- line 80 ----------------------------------------
    .           _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
    .           
    .             struct _Bit_reference
    .             {
    .               _Bit_type * _M_p;
    .               _Bit_type _M_mask;
    .           
    .               _GLIBCXX20_CONSTEXPR
  660 ( 0.02%)      _Bit_reference(_Bit_type * __x, _Bit_type __y)
2,704 ( 0.06%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (60x)
  540 ( 0.01%)      : _M_p(__x), _M_mask(__y) { }
    .           
    .               _GLIBCXX20_CONSTEXPR
    .               _Bit_reference() _GLIBCXX_NOEXCEPT : _M_p(0), _M_mask(0) { }
    .           
    .           #if __cplusplus >= 201103L
    .               _Bit_reference(const _Bit_reference&) = default;
    .           #endif
    .           
    .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
  450 ( 0.01%)      operator bool() const _GLIBCXX_NOEXCEPT
2,258 ( 0.05%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (50x)
  500 ( 0.01%)      { return !!(*_M_p & _M_mask); }
    .           
    .               _GLIBCXX20_CONSTEXPR
    .               _Bit_reference&
  110 ( 0.00%)      operator=(bool __x) _GLIBCXX_NOEXCEPT
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
    .               {
   50 ( 0.00%)        if (__x)
  100 ( 0.00%)  	*_M_p |= _M_mask;
    .                 else
    .           	*_M_p &= ~_M_mask;
   10 ( 0.00%)        return *this;
   20 ( 0.00%)      }
    .           
    .           #if __cplusplus > 202002L
    .               constexpr const _Bit_reference&
    .               operator=(bool __x) const noexcept
    .               {
    .                 if (__x)
    .           	*_M_p |= _M_mask;
    .                 else
-- line 119 ----------------------------------------
-- line 181 ----------------------------------------
    .               _Bit_type * _M_p;
    .               unsigned int _M_offset;
    .           
    .               _GLIBCXX20_CONSTEXPR _GLIBCXX_ALWAYS_INLINE
    .               void
    .               _M_assume_normalized() const
    .               {
    .           #if __has_attribute(__assume__) && !defined(__clang__)
  366 ( 0.01%)        unsigned int __ofst = _M_offset;
  244 ( 0.01%)        __attribute__ ((__assume__ (__ofst < unsigned(_S_word_bit))));
    .           #endif
  122 ( 0.00%)      }
    .           
    .               _GLIBCXX20_CONSTEXPR
  770 ( 0.02%)      _Bit_iterator_base(_Bit_type * __x, unsigned int __y)
3,158 ( 0.07%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (70x)
  630 ( 0.01%)      : _M_p(__x), _M_offset(__y) { }
    .           
    .               _GLIBCXX20_CONSTEXPR
    .               void
    .               _M_bump_up()
    .               {
    .                 _M_assume_normalized();
    .                 if (_M_offset++ == int(_S_word_bit) - 1)
    .           	{
-- line 204 ----------------------------------------
-- line 216 ----------------------------------------
    .           	{
    .           	  _M_offset = int(_S_word_bit) - 1;
    .           	  --_M_p;
    .           	}
    .               }
    .           
    .               _GLIBCXX20_CONSTEXPR
    .               void
  744 ( 0.02%)      _M_incr(ptrdiff_t __i)
2,794 ( 0.07%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (62x)
    .               {
    .                 _M_assume_normalized();
  372 ( 0.01%)        difference_type __n = __i + _M_offset;
  682 ( 0.02%)        _M_p += __n / int(_S_word_bit);
  496 ( 0.01%)        __n = __n % int(_S_word_bit);
  124 ( 0.00%)        if (__n < 0)
    .           	{
    .           	  __n += int(_S_word_bit);
    .           	  --_M_p;
    .           	}
  248 ( 0.01%)        _M_offset = static_cast<unsigned int>(__n);
  186 ( 0.00%)      }
    .           
    .               _GLIBCXX_NODISCARD
    .               friend _GLIBCXX20_CONSTEXPR bool
    .               operator==(const _Bit_iterator_base& __x, const _Bit_iterator_base& __y)
    .               {
    .                 __x._M_assume_normalized();
    .                 __y._M_assume_normalized();
    .                 return __x._M_p == __y._M_p && __x._M_offset == __y._M_offset;
-- line 244 ----------------------------------------
-- line 305 ----------------------------------------
    .           #if __cplusplus > 201703L
    .               typedef void	    pointer;
    .           #else
    .               typedef _Bit_reference* pointer;
    .           #endif
    .               typedef _Bit_iterator   iterator;
    .           
    .               _GLIBCXX20_CONSTEXPR
  160 ( 0.00%)      _Bit_iterator() : _Bit_iterator_base(0, 0) { }
  524 ( 0.01%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_iterator_base::_Bit_iterator_base(unsigned long*, unsigned int) (8x)
  368 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (8x)
    .           
    .               _GLIBCXX20_CONSTEXPR
  682 ( 0.02%)      _Bit_iterator(_Bit_type * __x, unsigned int __y)
2,798 ( 0.07%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (62x)
  744 ( 0.02%)      : _Bit_iterator_base(__x, __y) { }
4,034 ( 0.09%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_iterator_base::_Bit_iterator_base(unsigned long*, unsigned int) (62x)
    .           
    .               _GLIBCXX20_CONSTEXPR
    .               iterator
    .               _M_const_cast() const
    .               { return *this; }
    .           
    .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .               reference
  540 ( 0.01%)      operator*() const
2,704 ( 0.06%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (60x)
    .               {
  120 ( 0.00%)        _M_assume_normalized();
  960 ( 0.02%)        return reference(_M_p, 1UL << _M_offset);
3,904 ( 0.09%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_reference::_Bit_reference(unsigned long*, unsigned long) (60x)
  120 ( 0.00%)      }
    .           
    .               _GLIBCXX20_CONSTEXPR
    .               iterator&
    .               operator++()
    .               {
    .                 _M_bump_up();
    .                 return *this;
    .               }
-- line 338 ----------------------------------------
-- line 360 ----------------------------------------
    .               {
    .                 iterator __tmp = *this;
    .                 _M_bump_down();
    .                 return __tmp;
    .               }
    .           
    .               _GLIBCXX20_CONSTEXPR
    .               iterator&
  620 ( 0.01%)      operator+=(difference_type __i)
2,794 ( 0.07%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (62x)
    .               {
  496 ( 0.01%)        _M_incr(__i);
6,018 ( 0.14%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_iterator_base::_M_incr(long) (62x)
   62 ( 0.00%)        return *this;
  124 ( 0.00%)      }
    .           
    .               _GLIBCXX20_CONSTEXPR
    .               iterator&
    .               operator-=(difference_type __i)
    .               {
    .                 *this += -__i;
    .                 return *this;
    .               }
    .           
    .               _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .               reference
  600 ( 0.01%)      operator[](difference_type __i) const
2,704 ( 0.06%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (60x)
1,080 ( 0.03%)      { return *(*this + __i); }
14,344 ( 0.34%)  => /usr/include/c++/14/bits/stl_bvector.h:std::operator+(std::_Bit_iterator const&, long) (60x)
8,708 ( 0.20%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_iterator::operator*() const (60x)
    .           
    .               _GLIBCXX_NODISCARD
    .               friend _GLIBCXX20_CONSTEXPR iterator
  620 ( 0.01%)      operator+(const iterator& __x, difference_type __n)
2,798 ( 0.07%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (62x)
    .               {
  310 ( 0.01%)        iterator __tmp = __x;
  496 ( 0.01%)        __tmp += __n;
10,114 ( 0.24%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_iterator::operator+=(long) (62x)
  372 ( 0.01%)        return __tmp;
  124 ( 0.00%)      }
    .           
    .               _GLIBCXX_NODISCARD
    .               friend _GLIBCXX20_CONSTEXPR iterator
    .               operator+(difference_type __n, const iterator& __x)
    .               { return __x + __n; }
    .           
    .               _GLIBCXX_NODISCARD
    .               friend _GLIBCXX20_CONSTEXPR iterator
-- line 402 ----------------------------------------
-- line 543 ----------------------------------------
    .           	  _GLIBCXX20_CONSTEXPR
    .           	  void operator=(_Bit_iterator __it) { _M_p = __it._M_p; }
    .           	} _M_start;
    .           #endif
    .           	_Bit_iterator	_M_finish;
    .           	_Bit_pointer	_M_end_of_storage;
    .           
    .           	_GLIBCXX20_CONSTEXPR
   36 ( 0.00%)  	_Bvector_impl_data() _GLIBCXX_NOEXCEPT
  188 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (4x)
   60 ( 0.00%)  	: _M_start(), _M_finish(), _M_end_of_storage()
1,052 ( 0.02%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_iterator::_Bit_iterator() (8x)
   12 ( 0.00%)  	{ }
    .           
    .           #if __cplusplus >= 201103L
    .           	_Bvector_impl_data(const _Bvector_impl_data&) = default;
    .           
    .           	_Bvector_impl_data&
    .           	operator=(const _Bvector_impl_data&) = default;
    .           
    .           	_GLIBCXX20_CONSTEXPR
-- line 561 ----------------------------------------
-- line 569 ----------------------------------------
    .           	{
    .           	  *this = __x;
    .           	  __x._M_reset();
    .           	}
    .           #endif
    .           
    .           	_GLIBCXX20_CONSTEXPR
    .           	void
   20 ( 0.00%)  	_M_reset() _GLIBCXX_NOEXCEPT
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
   44 ( 0.00%)  	{ *this = _Bvector_impl_data(); }
  668 ( 0.02%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_Bvector_impl_data() (2x)
    .           
    .           	_GLIBCXX20_CONSTEXPR
    .           	void
    .           	_M_swap_data(_Bvector_impl_data& __x) _GLIBCXX_NOEXCEPT
    .           	{
    .           	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
    .           	  // information used by TBAA.
    .           	  std::swap(*this, __x);
    .           	}
    .                 };
    .           
   28 ( 0.00%)        struct _Bvector_impl
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
    .           	: public _Bit_alloc_type, public _Bvector_impl_data
    .                 {
    .           	_GLIBCXX20_CONSTEXPR
    .           	_Bvector_impl() _GLIBCXX_NOEXCEPT_IF(
    .           	  is_nothrow_default_constructible<_Bit_alloc_type>::value)
    .           #if __cpp_concepts && __glibcxx_type_trait_variable_templates
    .           	requires is_default_constructible_v<_Bit_alloc_type>
    .           #endif
    .           	: _Bit_alloc_type()
    .           	{ }
    .           
    .           	_GLIBCXX20_CONSTEXPR
   36 ( 0.00%)  	_Bvector_impl(const _Bit_alloc_type& __a) _GLIBCXX_NOEXCEPT
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
   12 ( 0.00%)  	: _Bit_alloc_type(__a)
  680 ( 0.02%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_Bvector_impl_data() (2x)
    6 ( 0.00%)  	{ }
    .           
    .           #if __cplusplus >= 201103L
    .           	// Not defaulted, to enforce noexcept(true) even when
    .           	// !is_nothrow_move_constructible<_Bit_alloc_type>.
    .           	_GLIBCXX20_CONSTEXPR
    .           	_Bvector_impl(_Bvector_impl&& __x) noexcept
    .           	: _Bit_alloc_type(std::move(__x)), _Bvector_impl_data(std::move(__x))
    .           	{ }
-- line 613 ----------------------------------------
-- line 615 ----------------------------------------
    .           	_GLIBCXX20_CONSTEXPR
    .           	_Bvector_impl(_Bit_alloc_type&& __a, _Bvector_impl&& __x) noexcept
    .           	: _Bit_alloc_type(std::move(__a)), _Bvector_impl_data(std::move(__x))
    .           	{ }
    .           #endif
    .           
    .           	_GLIBCXX20_CONSTEXPR
    .           	_Bit_type*
   36 ( 0.00%)  	_M_end_addr() const _GLIBCXX_NOEXCEPT
  188 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (4x)
    .           	{
   28 ( 0.00%)  	  if (this->_M_end_of_storage)
   40 ( 0.00%)  	    return std::__addressof(this->_M_end_of_storage[-1]) + 1;
  232 ( 0.01%)  => /usr/include/c++/14/bits/move.h:unsigned long* std::__addressof<unsigned long>(unsigned long&) (4x)
    .           	  return 0;
    8 ( 0.00%)  	}
    .                 };
    .           
    .               public:
    .                 typedef _Alloc allocator_type;
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 _Bit_alloc_type&
    .                 _M_get_Bit_allocator() _GLIBCXX_NOEXCEPT
-- line 636 ----------------------------------------
-- line 648 ----------------------------------------
    .           
    .           #if __cplusplus >= 201103L
    .                 _Bvector_base() = default;
    .           #else
    .                 _Bvector_base() { }
    .           #endif
    .           
    .                 _GLIBCXX20_CONSTEXPR
   20 ( 0.00%)        _Bvector_base(const allocator_type& __a)
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
   30 ( 0.00%)        : _M_impl(_Bit_alloc_type(__a)) { }
  832 ( 0.02%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_Bvector_impl(std::allocator<unsigned long> const&) (2x)
    .           
    .           #if __cplusplus >= 201103L
    .                 _Bvector_base(_Bvector_base&&) = default;
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 _Bvector_base(_Bvector_base&& __x, const allocator_type& __a) noexcept
    .                 : _M_impl(_Bit_alloc_type(__a), std::move(__x._M_impl))
    .                 { }
    .           #endif
    .           
    .                 _GLIBCXX20_CONSTEXPR
   18 ( 0.00%)        ~_Bvector_base()
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
   30 ( 0.00%)        { this->_M_deallocate(); }
1,584 ( 0.04%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_M_deallocate() (2x)
  254 ( 0.01%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::~_Bvector_impl() (2x)
    .           
    .               protected:
    .                 _Bvector_impl _M_impl;
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 _Bit_pointer
   20 ( 0.00%)        _M_allocate(size_t __n)
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
    .                 {
   20 ( 0.00%)  	_Bit_pointer __p = _Bit_alloc_traits::allocate(_M_impl, _S_nword(__n));
  122 ( 0.00%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_S_nword(unsigned long) (2x)
    .           #if __cpp_lib_is_constant_evaluated && __cpp_constexpr_dynamic_alloc
    .           	if (std::is_constant_evaluated())
    .           	  {
    .           	    __n = _S_nword(__n);
    .           	    for (size_t __i = 0; __i < __n; ++__i)
    .           	      std::construct_at(std::to_address(__p) + __i);
    .           	  }
    .           #endif
    2 ( 0.00%)  	return __p;
    4 ( 0.00%)        }
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 void
   18 ( 0.00%)        _M_deallocate()
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
    .                 {
   14 ( 0.00%)  	if (_M_impl._M_start._M_p)
    .           	  {
   26 ( 0.00%)  	    const size_t __n = _M_impl._M_end_addr() - _M_impl._M_start._M_p;
  264 ( 0.01%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_M_end_addr() const (2x)
   12 ( 0.00%)  	    _Bit_alloc_traits::deallocate(_M_impl,
   10 ( 0.00%)  					  _M_impl._M_end_of_storage - __n,
    .           					  __n);
   12 ( 0.00%)  	    _M_impl._M_reset();
  826 ( 0.02%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_M_reset() (2x)
    .           	  }
    6 ( 0.00%)        }
    .           
    .           #if __cplusplus >= 201103L
    .                 _GLIBCXX20_CONSTEXPR
    .                 void
    .                 _M_move_data(_Bvector_base&& __x) noexcept
    .                 { _M_impl._M_move_data(std::move(__x._M_impl)); }
    .           #endif
    .           
    .                 _GLIBCXX_CONSTEXPR
    .                 static size_t
   36 ( 0.00%)        _S_nword(size_t __n)
  188 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (4x)
   20 ( 0.00%)        { return (__n + int(_S_word_bit) - 1) / int(_S_word_bit); }
    .               };
    .           
    .             /**
    .              *  @brief  A specialization of vector for booleans which offers fixed time
    .              *  access to individual elements in any order.
    .              *
    .              *  @ingroup sequences
    .              *  @headerfile vector
-- line 723 ----------------------------------------
-- line 787 ----------------------------------------
    .           #if __cplusplus >= 201103L
    .                 _GLIBCXX20_CONSTEXPR
    .                 explicit
    .                 vector(size_type __n, const allocator_type& __a = allocator_type())
    .                 : vector(__n, false, __a)
    .                 { }
    .           
    .                 _GLIBCXX20_CONSTEXPR
   26 ( 0.00%)        vector(size_type __n, const bool& __value,
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
    .           	     const allocator_type& __a = allocator_type())
    .           #else
    .                 explicit
    .                 vector(size_type __n, const bool& __value = bool(),
    .           	     const allocator_type& __a = allocator_type())
    .           #endif
   16 ( 0.00%)        : _Base(__a)
1,112 ( 0.03%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_base(std::allocator<bool> const&) (2x)
    .                 {
   16 ( 0.00%)  	_M_initialize(__n);
1,792 ( 0.04%)  => /usr/include/c++/14/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::_M_initialize(unsigned long) (2x)
   20 ( 0.00%)  	_M_initialize_value(__value);
1,414 ( 0.03%)  => /usr/include/c++/14/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::_M_initialize_value(bool) (2x)
    8 ( 0.00%)        }
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 vector(const vector& __x)
    .                 : _Base(_Bit_alloc_traits::_S_select_on_copy(__x._M_get_Bit_allocator()))
    .                 {
    .           	const_iterator __xbegin = __x.begin(), __xend = __x.end();
    .           	_M_initialize(__x.size());
    .           	_M_copy_aligned(__xbegin, __xend, begin());
-- line 814 ----------------------------------------
-- line 882 ----------------------------------------
    .           	{
    .           	  // Check whether it's an integral type. If so, it's not an iterator.
    .           	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
    .           	  _M_initialize_dispatch(__first, __last, _Integral());
    .           	}
    .           #endif
    .           
    .                 _GLIBCXX20_CONSTEXPR
   36 ( 0.00%)        ~vector() _GLIBCXX_NOEXCEPT { }
1,980 ( 0.05%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::~_Bvector_base() (2x)
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 vector&
    .                 operator=(const vector& __x)
    .                 {
    .           	if (&__x == this)
    .           	  return *this;
    .           #if __cplusplus >= 201103L
-- line 898 ----------------------------------------
-- line 987 ----------------------------------------
    .                 _GLIBCXX20_CONSTEXPR
    .                 void
    .                 assign(initializer_list<bool> __l)
    .                 { _M_assign_aux(__l.begin(), __l.end(), random_access_iterator_tag()); }
    .           #endif
    .           
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 iterator
  540 ( 0.01%)        begin() _GLIBCXX_NOEXCEPT
2,704 ( 0.06%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (60x)
1,080 ( 0.03%)        { return iterator(this->_M_impl._M_start._M_p, 0); }
7,984 ( 0.19%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_iterator::_Bit_iterator(unsigned long*, unsigned int) (60x)
    .           
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 const_iterator
    .                 begin() const _GLIBCXX_NOEXCEPT
    .                 { return const_iterator(this->_M_impl._M_start._M_p, 0); }
    .           
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 iterator
-- line 1004 ----------------------------------------
-- line 1078 ----------------------------------------
    .           
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 bool
    .                 empty() const _GLIBCXX_NOEXCEPT
    .                 { return begin() == end(); }
    .           
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 reference
  600 ( 0.01%)        operator[](size_type __n)
2,712 ( 0.06%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (60x)
1,140 ( 0.03%)        { return begin()[__n]; }
27,436 ( 0.64%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_iterator::operator[](long) const (60x)
12,308 ( 0.29%)  => /usr/include/c++/14/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::begin() (60x)
    .           
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 const_reference
    .                 operator[](size_type __n) const
    .                 { return begin()[__n]; }
    .           
    .               protected:
    .                 _GLIBCXX20_CONSTEXPR
-- line 1095 ----------------------------------------
-- line 1341 ----------------------------------------
    .                 {
    .           	_Bit_type* __q = std::copy(__first._M_p, __last._M_p, __result._M_p);
    .           	return std::copy(const_iterator(__last._M_p, 0), __last,
    .           			 iterator(__q, 0));
    .                 }
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 void
   20 ( 0.00%)        _M_initialize(size_type __n)
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
    .                 {
   10 ( 0.00%)  	if (__n)
    .           	  {
   18 ( 0.00%)  	    _Bit_pointer __q = this->_M_allocate(__n);
  546 ( 0.01%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_M_allocate(unsigned long) (2x)
   22 ( 0.00%)  	    this->_M_impl._M_end_of_storage = __q + _S_nword(__n);
  122 ( 0.00%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_S_nword(unsigned long) (2x)
   30 ( 0.00%)  	    iterator __start = iterator(std::__addressof(*__q), 0);
  274 ( 0.01%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_iterator::_Bit_iterator(unsigned long*, unsigned int) (2x)
  118 ( 0.00%)  => /usr/include/c++/14/bits/move.h:unsigned long* std::__addressof<unsigned long>(unsigned long&) (2x)
   10 ( 0.00%)  	    this->_M_impl._M_start = __start;
   30 ( 0.00%)  	    this->_M_impl._M_finish = __start + difference_type(__n);
  490 ( 0.01%)  => /usr/include/c++/14/bits/stl_bvector.h:std::operator+(std::_Bit_iterator const&, long) (2x)
    .           	  }
    8 ( 0.00%)        }
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 void
   24 ( 0.00%)        _M_initialize_value(bool __x) _GLIBCXX_NOEXCEPT
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
    .                 {
   16 ( 0.00%)  	if (_Bit_type* __p = this->_M_impl._M_start._M_p)
   36 ( 0.00%)  	  __fill_bvector_n(__p, this->_M_impl._M_end_addr() - __p, __x);
  968 ( 0.02%)  => /usr/include/c++/14/bits/stl_bvector.h:std::__fill_bvector_n(unsigned long*, unsigned long, bool) (2x)
  268 ( 0.01%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_M_end_addr() const (2x)
    8 ( 0.00%)        }
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 void
    .                 _M_reallocate(size_type __n);
    .           
    .           #if __cplusplus >= 201103L
    .                 _GLIBCXX20_CONSTEXPR
    .                 bool
-- line 1375 ----------------------------------------
-- line 1580 ----------------------------------------
    .                 *__v &= ~__mask;
    .             }
    .           
    .             // Fill N full words, as if using memset, but usable in constant expressions.
    .             __attribute__((__nonnull__))
    .             _GLIBCXX20_CONSTEXPR
    .             inline void
    .             __fill_bvector_n(_Bit_type* __p, size_t __n, bool __x) _GLIBCXX_NOEXCEPT
   24 ( 0.00%)    {
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
    .           #if __cpp_lib_is_constant_evaluated
    .               if (std::is_constant_evaluated())
    .               {
    .                 for (size_t __i = 0; __i < __n; ++__i)
    .           	__p[__i] = __x ? ~0ul : 0ul;
    .                 return;
    .               }
    .           #endif
   24 ( 0.00%)      __builtin_memset(__p, __x ? ~0 : 0, __n * sizeof(_Bit_type));
  796 ( 0.02%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
   24 ( 0.00%)  => ./string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:__memset_avx2_unaligned_erms (2x)
    6 ( 0.00%)    }
    .           
    .           
    .             _GLIBCXX20_CONSTEXPR
    .             inline void
    .             __fill_a1(_GLIBCXX_STD_C::_Bit_iterator __first,
    .           	    _GLIBCXX_STD_C::_Bit_iterator __last, const bool& __x)
    .             {
    .               if (__first._M_p != __last._M_p)
-- line 1606 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/bits/stl_set.h
--------------------------------------------------------------------------------
Ir             

-- line 161 ----------------------------------------
    .           
    .                 // allocation/deallocation
    .                 /**
    .                  *  @brief  Default constructor creates no elements.
    .                  */
    .           #if __cplusplus < 201103L
    .                 set() : _M_t() { }
    .           #else
   18 ( 0.00%)        set() = default;
  348 ( 0.01%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_Rb_tree() (1x)
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .           #endif
    .           
    .                 /**
    .                  *  @brief  Creates a %set with no elements.
    .                  *  @param  __comp  Comparator to use.
    .                  *  @param  __a  An allocator object.
    .                  */
    .                 explicit
-- line 177 ----------------------------------------
-- line 275 ----------------------------------------
    .           	: _M_t(_Key_alloc_type(__a))
    .           	{ _M_t._M_insert_range_unique(__first, __last); }
    .           
    .                 /**
    .                  *  The dtor only erases the elements, and note that if the elements
    .                  *  themselves are pointers, the pointed-to memory is not touched in any
    .                  *  way. Managing the pointer is the user's responsibility.
    .                  */
   18 ( 0.00%)        ~set() = default;
9,751 ( 0.23%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::~_Rb_tree() (1x)
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .           #endif
    .           
    .                 /**
    .                  *  @brief  %Set assignment operator.
    .                  *
    .                  *  Whether the allocator is copied depends on the allocator traits.
    .                  */
    .           #if __cplusplus < 201103L
-- line 291 ----------------------------------------
-- line 413 ----------------------------------------
    .           
    .                 ///  Returns true if the %set is empty.
    .                 _GLIBCXX_NODISCARD bool
    .                 empty() const _GLIBCXX_NOEXCEPT
    .                 { return _M_t.empty(); }
    .           
    .                 ///  Returns the size of the %set.
    .                 size_type
  405 ( 0.01%)        size() const _GLIBCXX_NOEXCEPT
2,029 ( 0.05%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (45x)
  495 ( 0.01%)        { return _M_t.size(); }
2,614 ( 0.06%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::size() const (45x)
    .           
    .                 ///  Returns the maximum size of the %set.
    .                 size_type
    .                 max_size() const _GLIBCXX_NOEXCEPT
    .                 { return _M_t.max_size(); }
    .           
    .                 /**
    .                  *  @brief  Swaps data with another %set.
-- line 430 ----------------------------------------
-- line 512 ----------------------------------------
    .                 {
    .           	std::pair<typename _Rep_type::iterator, bool> __p =
    .           	  _M_t._M_insert_unique(__x);
    .           	return std::pair<iterator, bool>(__p.first, __p.second);
    .                 }
    .           
    .           #if __cplusplus >= 201103L
    .                 std::pair<iterator, bool>
  110 ( 0.00%)        insert(value_type&& __x)
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
    .                 {
    .           	std::pair<typename _Rep_type::iterator, bool> __p =
  150 ( 0.00%)  	  _M_t._M_insert_unique(std::move(__x));
53,441 ( 1.25%)  => /usr/include/c++/14/bits/stl_tree.h:std::pair<std::_Rb_tree_iterator<std::pair<int, int> >, bool> std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::_M_insert_unique<std::pair<int, int> >(std::pair<int, int>&&) (10x)
  574 ( 0.01%)  => /usr/include/c++/14/bits/move.h:std::remove_reference<std::pair<int, int>&>::type&& std::move<std::pair<int, int>&>(std::pair<int, int>&) (10x)
  130 ( 0.00%)  	return std::pair<iterator, bool>(__p.first, __p.second);
2,606 ( 0.06%)  => /usr/include/c++/14/bits/stl_pair.h:std::pair<std::_Rb_tree_const_iterator<std::pair<int, int> >, bool>::pair<std::_Rb_tree_iterator<std::pair<int, int> >&, bool&, true>(std::_Rb_tree_iterator<std::pair<int, int> >&, bool&) (10x)
   30 ( 0.00%)        }
    .           #endif
    .           
    .                 /**
    .                  *  @brief Attempts to insert an element into the %set.
    .                  *  @param  __position  An iterator that serves as a hint as to where the
    .                  *                    element should be inserted.
    .                  *  @param  __x  Element to be inserted.
    .                  *  @return An iterator that points to the element with key of
-- line 533 ----------------------------------------
-- line 742 ----------------------------------------
    .                  *  @brief  Finds the number of elements.
    .                  *  @param  __x  Element to located.
    .                  *  @return  Number of elements with specified key.
    .                  *
    .                  *  This function only makes sense for multisets; for set the result will
    .                  *  either be 0 (not present) or 1 (present).
    .                  */
    .                 size_type
  340 ( 0.01%)        count(const key_type& __x) const
1,534 ( 0.04%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (34x)
1,094 ( 0.03%)        { return _M_t.find(__x) == _M_t.end() ? 0 : 1; }
94,984 ( 2.22%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::find(std::pair<int, int> const&) const (34x)
4,326 ( 0.10%)  => /usr/include/c++/14/bits/stl_tree.h:std::_Rb_tree<std::pair<int, int>, std::pair<int, int>, std::_Identity<std::pair<int, int> >, std::less<std::pair<int, int> >, std::allocator<std::pair<int, int> > >::end() const (34x)
2,146 ( 0.05%)  => /usr/include/c++/14/bits/stl_tree.h:std::operator==(std::_Rb_tree_const_iterator<std::pair<int, int> > const&, std::_Rb_tree_const_iterator<std::pair<int, int> > const&) (34x)
    .           
    .           #if __cplusplus > 201103L
    .                 template<typename _Kt>
    .           	auto
    .           	count(const _Kt& __x) const
    .           	-> decltype(_M_t._M_count_tr(__x))
    .           	{ return _M_t._M_count_tr(__x); }
    .           #endif
-- line 759 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: GraphAlgorithms.cpp
--------------------------------------------------------------------------------
Ir             

-- line 6 ----------------------------------------
    .           #include <algorithm>
    .           #include <iostream>
    .           
    .           using namespace std;
    .           
    .           namespace GraphAlgo {
    .           
    .           // Constructor: store reference to input graph
   16 ( 0.00%)  GraphAlgorithms::GraphAlgorithms(const Graph& g) : graph(g) {}
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .           
  110 ( 0.00%)  void GraphAlgorithms::dfsUtil(int v, vector<bool>& visited) const {
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
  180 ( 0.00%)      visited[v] = true;
1,500 ( 0.04%)  => /usr/include/c++/14/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::operator[](unsigned long) (2x)
  152 ( 0.00%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_reference::operator=(bool) (2x)
    .           
    .               // Visit all neighbors
1,390 ( 0.03%)      for (const Edge& e : graph.getNeighbors(v)) {
1,904 ( 0.04%)  => /usr/include/c++/14/bits/stl_iterator.h:bool __gnu_cxx::operator!=<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&, __gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) (10x)
  496 ( 0.01%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator++() (8x)
  468 ( 0.01%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator*() const (8x)
  272 ( 0.01%)  => /home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/Graph.cpp:GraphAlgo::Graph::getNeighbors(int) const (2x)
  260 ( 0.01%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::end() const (2x)
  258 ( 0.01%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::begin() const (2x)
  864 ( 0.02%)          if (!visited[e.dst]) {
5,892 ( 0.14%)  => /usr/include/c++/14/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::operator[](unsigned long) (8x)
  516 ( 0.01%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_reference::operator bool() const (8x)
   88 ( 0.00%)              dfsUtil(e.dst, visited);
49,124 ( 1.15%)  => GraphAlgorithms.cpp:GraphAlgo::GraphAlgorithms::dfsUtil(int, std::vector<bool, std::allocator<bool> >&) const'2 (2x)
    .                   }
    .               }
   30 ( 0.00%)  }
    .           
   20 ( 0.00%)  bool GraphAlgorithms::isEulerian() const {
   98 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
    .               // Check if all degrees are even
  182 ( 0.00%)      for (int i = 0; i < graph.getVertexCount(); i++) {
  700 ( 0.02%)  => /home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/Graph.cpp:GraphAlgo::Graph::getVertexCount() const (12x)
  190 ( 0.00%)          if (graph.getNeighbors(i).size() % 2 != 0)
1,348 ( 0.03%)  => /home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/Graph.cpp:GraphAlgo::Graph::getNeighbors(int) const (10x)
  634 ( 0.01%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::size() const (10x)
    .                       return false;
    .               }
    .           
    .               // Connectivity check (ignore isolated vertices)
   34 ( 0.00%)      vector<bool> visited(graph.getVertexCount(), false);
4,498 ( 0.11%)  => /usr/include/c++/14/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::vector(unsigned long, bool const&, std::allocator<bool> const&) (2x)
  120 ( 0.00%)  => /home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/Graph.cpp:GraphAlgo::Graph::getVertexCount() const (2x)
    2 ( 0.00%)      int start = -1;
    .           
    .               // Find any vertex with degree > 0 to start DFS
   32 ( 0.00%)      for (int i = 0; i < graph.getVertexCount(); i++) {
  120 ( 0.00%)  => /home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/Graph.cpp:GraphAlgo::Graph::getVertexCount() const (2x)
   34 ( 0.00%)          if (!graph.getNeighbors(i).empty()) {
1,076 ( 0.03%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::empty() const (2x)
  272 ( 0.01%)  => /home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/Graph.cpp:GraphAlgo::Graph::getNeighbors(int) const (2x)
   10 ( 0.00%)              start = i;
    2 ( 0.00%)              break;
    .                   }
    .               }
    .           
    .               // If no edges exist (all isolated nodes), it's Eulerian
    4 ( 0.00%)      if (start == -1)
    .                   return true;
    .           
   20 ( 0.00%)      dfsUtil(start, visited);
61,474 ( 1.44%)  => GraphAlgorithms.cpp:GraphAlgo::GraphAlgorithms::dfsUtil(int, std::vector<bool, std::allocator<bool> >&) const (2x)
    .           
    .               // Verify all non-isolated vertices were visited
  178 ( 0.00%)      for (int i = 0; i < graph.getVertexCount(); i++) {
  700 ( 0.02%)  => /home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/Graph.cpp:GraphAlgo::Graph::getVertexCount() const (12x)
  430 ( 0.01%)          if (!graph.getNeighbors(i).empty() && !visited[i])
7,364 ( 0.17%)  => /usr/include/c++/14/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::operator[](unsigned long) (10x)
5,264 ( 0.12%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::empty() const (10x)
1,344 ( 0.03%)  => /home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/Graph.cpp:GraphAlgo::Graph::getNeighbors(int) const (10x)
  644 ( 0.02%)  => /usr/include/c++/14/bits/stl_bvector.h:std::_Bit_reference::operator bool() const (10x)
    .                       return false;
    .               }
    .           
    2 ( 0.00%)      return true;
   22 ( 0.00%)  }
2,110 ( 0.05%)  => /usr/include/c++/14/bits/stl_bvector.h:std::vector<bool, std::allocator<bool> >::~vector() (2x)
    .           
    .           //  Uses Hierholzer's algorithm
   11 ( 0.00%)  vector<int> GraphAlgorithms::findEulerianCircuit() const {
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    6 ( 0.00%)      vector<int> circuit;
  274 ( 0.01%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<int, std::allocator<int> >::vector() (1x)
    .           
    6 ( 0.00%)      if (!isEulerian()) {
43,994 ( 1.03%)  => GraphAlgorithms.cpp:GraphAlgo::GraphAlgorithms::isEulerian() const (1x)
    .                   cout << "Eulerian circuit does not exist.\n";
    3 ( 0.00%)          return circuit;
    .               }
    .           
    .               // Create copy of adjacency list
   16 ( 0.00%)      vector<vector<Edge>> tempAdj = graph.getAdjList();
25,797 ( 0.60%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::vector(std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > > const&) (1x)
   62 ( 0.00%)  => /home/hacker/vscode/C_plus_plus/OS_Final_Ex/Part4/Graph.hpp:GraphAlgo::Graph::getAdjList() const (1x)
    .           
    6 ( 0.00%)      stack<int> s;
2,389 ( 0.06%)  => /usr/include/c++/14/bits/stl_stack.h:std::stack<int, std::deque<int, std::allocator<int> > >::stack<std::deque<int, std::allocator<int> >, void>() (1x)
    1 ( 0.00%)      int start = 0;
   17 ( 0.00%)      for (int i = 0; i < tempAdj.size(); i++) {
   68 ( 0.00%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::size() const (1x)
   14 ( 0.00%)          if (!tempAdj[i].empty()) {
  530 ( 0.01%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::empty() const (1x)
   69 ( 0.00%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::operator[](unsigned long) (1x)
    5 ( 0.00%)              start = i;
    1 ( 0.00%)              break;
    .                   }
    .               }
    8 ( 0.00%)      s.push(start);
  379 ( 0.01%)  => /usr/include/c++/14/bits/stl_stack.h:std::stack<int, std::deque<int, std::allocator<int> > >::push(int const&) (1x)
    .           
  262 ( 0.01%)      while (!s.empty()) {
4,346 ( 0.10%)  => /usr/include/c++/14/bits/stl_stack.h:std::stack<int, std::deque<int, std::allocator<int> > >::empty() const (22x)
  168 ( 0.00%)          int u = s.top();
8,655 ( 0.20%)  => /usr/include/c++/14/bits/stl_stack.h:std::stack<int, std::deque<int, std::allocator<int> > >::top() (21x)
    .           
  306 ( 0.01%)          if (tempAdj[u].empty()) {
11,050 ( 0.26%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::empty() const (21x)
1,369 ( 0.03%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::operator[](unsigned long) (21x)
   88 ( 0.00%)              circuit.push_back(u);
17,987 ( 0.42%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<int, std::allocator<int> >::push_back(int const&) (11x)
   74 ( 0.00%)              s.pop();
2,311 ( 0.05%)  => /usr/include/c++/14/bits/stl_stack.h:std::stack<int, std::deque<int, std::allocator<int> > >::pop() (11x)
    .                   } else {
    .                       // Get next neighbor
  160 ( 0.00%)              Edge e = tempAdj[u].back();
4,014 ( 0.09%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::back() (10x)
  654 ( 0.02%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::operator[](unsigned long) (10x)
  140 ( 0.00%)              tempAdj[u].pop_back();
  654 ( 0.02%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::operator[](unsigned long) (10x)
  734 ( 0.02%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::pop_back() (10x)
    .           
    .                       // Remove reverse edge manually
   20 ( 0.00%)              int v = e.dst;
  100 ( 0.00%)              auto& adjV = tempAdj[v];
  654 ( 0.02%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::operator[](unsigned long) (10x)
  592 ( 0.01%)              for (auto it = adjV.begin(); it != adjV.end(); ++it) {
4,192 ( 0.10%)  => /usr/include/c++/14/bits/stl_iterator.h:bool __gnu_cxx::operator!=<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&, __gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) (22x)
2,820 ( 0.07%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::end() (22x)
1,274 ( 0.03%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::begin() (10x)
  748 ( 0.02%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator++() (12x)
  294 ( 0.01%)                  if (it->dst == u) {
1,280 ( 0.03%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator->() const (22x)
  160 ( 0.00%)                      adjV.erase(it);
19,868 ( 0.46%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::erase(__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >) (10x)
1,248 ( 0.03%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::__normal_iterator<GraphAlgo::Edge*, void>(__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) (10x)
   10 ( 0.00%)                      break;
    .                           }
    .                       }
    .           
  143 ( 0.00%)              s.push(v);
3,594 ( 0.08%)  => /usr/include/c++/14/bits/stl_stack.h:std::stack<int, std::deque<int, std::allocator<int> > >::push(int const&) (10x)
    .                   }
    .               }
    .           
   20 ( 0.00%)      reverse(circuit.begin(), circuit.end());
4,651 ( 0.11%)  => /usr/include/c++/14/bits/stl_algo.h:void std::reverse<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >) (1x)
  132 ( 0.00%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<int, std::allocator<int> >::end() (1x)
  131 ( 0.00%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<int, std::allocator<int> >::begin() (1x)
    .               return circuit;
   17 ( 0.00%)  }
4,895 ( 0.11%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::~vector() (1x)
1,624 ( 0.04%)  => /usr/include/c++/14/bits/stl_stack.h:std::stack<int, std::deque<int, std::allocator<int> > >::~stack() (1x)
    .           
    .           
    .           
   12 ( 0.00%)  } // namespace GraphAlgo1,721,075 (40.23%)  => ???:__gcov_exit (1x)

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/bits/move.h
--------------------------------------------------------------------------------
Ir             

-- line 43 ----------------------------------------
    .           
    .             // Used, in C++03 mode too, by allocators, etc.
    .             /**
    .              *  @brief Same as C++11 std::addressof
    .              *  @ingroup utilities
    .              */
    .             template<typename _Tp>
    .               inline _GLIBCXX_CONSTEXPR _Tp*
  819 ( 0.02%)      __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  912 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (20x)
  273 ( 0.01%)      { return __builtin_addressof(__r); }
    .           
    .           #if __cplusplus >= 201103L
    .           
    .             /**
    .              *  @addtogroup utilities
    .              *  @{
    .              */
    .           
-- line 60 ----------------------------------------
-- line 63 ----------------------------------------
    .              *  @return The parameter cast to the specified type.
    .              *
    .              *  This function is used to implement "perfect forwarding".
    .              *  @since C++11
    .              */
    .             template<typename _Tp>
    .               _GLIBCXX_NODISCARD
    .               constexpr _Tp&&
3,456 ( 0.08%)      forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
1,152 ( 0.03%)      { return static_cast<_Tp&&>(__t); }
    .           
    .             /**
    .              *  @brief  Forward an rvalue.
    .              *  @return The parameter cast to the specified type.
    .              *
    .              *  This function is used to implement "perfect forwarding".
    .              *  @since C++11
    .              */
-- line 80 ----------------------------------------
-- line 129 ----------------------------------------
    .              *  @brief  Convert a value to an rvalue.
    .              *  @param  __t  A thing of arbitrary type.
    .              *  @return The parameter cast to an rvalue-reference to allow moving it.
    .              *  @since C++11
    .             */
    .             template<typename _Tp>
    .               _GLIBCXX_NODISCARD
    .               constexpr typename std::remove_reference<_Tp>::type&&
  378 ( 0.01%)      move(_Tp&& __t) noexcept
  773 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (17x)
  126 ( 0.00%)      { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    .           
    .           
    .             template<typename _Tp>
    .               struct __move_if_noexcept_cond
    .               : public __and_<__not_<is_nothrow_move_constructible<_Tp>>,
    .                               is_copy_constructible<_Tp>>::type { };
    .           
    .             /**
-- line 146 ----------------------------------------
-- line 218 ----------------------------------------
    .               inline
    .           #if __cplusplus >= 201103L
    .               typename enable_if<__and_<__not_<__is_tuple_like<_Tp>>,
    .           			      is_move_constructible<_Tp>,
    .           			      is_move_assignable<_Tp>>::value>::type
    .           #else
    .               void
    .           #endif
   50 ( 0.00%)      swap(_Tp& __a, _Tp& __b)
  229 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (5x)
    .               _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
    .           				is_nothrow_move_assignable<_Tp>>::value)
    .               {
    .           #if __cplusplus < 201103L
    .                 // concept requirements
    .                 __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
    .           #endif
   40 ( 0.00%)        _Tp __tmp = _GLIBCXX_MOVE(__a);
  289 ( 0.01%)  => /usr/include/c++/14/bits/move.h:std::remove_reference<int&>::type&& std::move<int&>(int&) (5x)
   45 ( 0.00%)        __a = _GLIBCXX_MOVE(__b);
  289 ( 0.01%)  => /usr/include/c++/14/bits/move.h:std::remove_reference<int&>::type&& std::move<int&>(int&) (5x)
   45 ( 0.00%)        __b = _GLIBCXX_MOVE(__tmp);
  289 ( 0.01%)  => /usr/include/c++/14/bits/move.h:std::remove_reference<int&>::type&& std::move<int&>(int&) (5x)
   15 ( 0.00%)      }
    .           
    .             // _GLIBCXX_RESOLVE_LIB_DEFECTS
    .             // DR 809. std::swap should be overloaded for array types.
    .             /// Swap the contents of two arrays.
    .             template<typename _Tp, size_t _Nm>
    .               _GLIBCXX20_CONSTEXPR
    .               inline
    .           #if __cplusplus >= 201103L
-- line 245 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/new
--------------------------------------------------------------------------------
Ir             

-- line 172 ----------------------------------------
    .             _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
    .           void operator delete[](void*, std::size_t, std::align_val_t)
    .             _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
    .           #endif // __cpp_sized_deallocation
    .           #endif // __cpp_aligned_new
    .           
    .           // Default placement versions of operator new.
    .           _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
1,391 ( 0.03%)  { return __p; }
4,859 ( 0.11%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (107x)
    .           _GLIBCXX_NODISCARD inline void* operator new[](std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
    .           { return __p; }
    .           
    .           // Default placement versions of operator delete.
    .           inline void operator delete  (void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    .           inline void operator delete[](void*, void*) _GLIBCXX_USE_NOEXCEPT { }
    .           //@}
    .           } // extern "C++"
-- line 188 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/bits/stl_pair.h
--------------------------------------------------------------------------------
Ir             

-- line 744 ----------------------------------------
    .           
    .                 /// Construct from two const lvalues, allowing implicit conversions.
    .                 template<typename _U1 = _T1, typename _U2=_T2, typename
    .           	       enable_if<_PCCP::template
    .           			   _ConstructiblePair<_U1, _U2>()
    .           	                 && _PCCP::template
    .           			   _ImplicitlyConvertiblePair<_U1, _U2>(),
    .                                    bool>::type=true>
  484 ( 0.01%)        constexpr pair(const _T1& __a, const _T2& __b)
1,988 ( 0.05%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (44x)
  484 ( 0.01%)        : first(__a), second(__b) { }
    .           
    .                 /// Construct from two const lvalues, disallowing implicit conversions.
    .                  template<typename _U1 = _T1, typename _U2=_T2, typename
    .           		enable_if<_PCCP::template
    .           			    _ConstructiblePair<_U1, _U2>()
    .           	                  && !_PCCP::template
    .           			    _ImplicitlyConvertiblePair<_U1, _U2>(),
    .                                    bool>::type=false>
-- line 761 ----------------------------------------
-- line 873 ----------------------------------------
    .           #endif
    .           
    .                 template<typename _U1, typename _U2, typename
    .           	       enable_if<_PCCP::template
    .           			   _MoveConstructiblePair<_U1, _U2>()
    .           			  && _PCCP::template
    .           			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
    .                                    bool>::type=true>
  340 ( 0.01%)  	constexpr pair(_U1&& __x, _U2&& __y)
  458 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
  580 ( 0.01%)  	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y))
  574 ( 0.01%)  => /usr/include/c++/14/bits/move.h:std::_Rb_tree_node<std::pair<int, int> >*& std::forward<std::_Rb_tree_node<std::pair<int, int> >*&>(std::remove_reference<std::_Rb_tree_node<std::pair<int, int> >*&>::type&) (10x)
  574 ( 0.01%)  => /usr/include/c++/14/bits/move.h:std::_Rb_tree_node_base*& std::forward<std::_Rb_tree_node_base*&>(std::remove_reference<std::_Rb_tree_node_base*&>::type&) (10x)
  100 ( 0.00%)  	{ __glibcxx_no_dangling_refs(_U1&&, _U2&&); }
    .           
    .                 template<typename _U1, typename _U2, typename
    .           	       enable_if<_PCCP::template
    .           			   _MoveConstructiblePair<_U1, _U2>()
    .           			  && !_PCCP::template
    .           			   _ImplicitlyMoveConvertiblePair<_U1, _U2>(),
    .                                    bool>::type=false>
    .           	explicit constexpr pair(_U1&& __x, _U2&& __y)
-- line 891 ----------------------------------------
-- line 1037 ----------------------------------------
    .              *
    .              * For two pairs of the same type, `P` is ordered before `Q` if
    .              * `P.first` is less than `Q.first`, or if `P.first` and `Q.first`
    .              * are equivalent (neither is less than the other) and `P.second` is less
    .              * than `Q.second`.
    .             */
    .             template<typename _T1, typename _T2>
    .               inline _GLIBCXX_CONSTEXPR bool
1,740 ( 0.04%)      operator<(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
7,834 ( 0.18%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (174x)
  696 ( 0.02%)      { return __x.first < __y.first
3,366 ( 0.08%)  	     || (!(__y.first < __x.first) && __x.second < __y.second); }
    .           
    .             /// Uses @c operator== to find the result.
    .             template<typename _T1, typename _T2>
    .               inline _GLIBCXX_CONSTEXPR bool
    .               operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    .               { return !(__x == __y); }
    .           
    .             /// Uses @c operator< to find the result.
-- line 1055 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/bits/stl_vector.h
--------------------------------------------------------------------------------
Ir             

-- line 90 ----------------------------------------
    .           
    .                 struct _Vector_impl_data
    .                 {
    .           	pointer _M_start;
    .           	pointer _M_finish;
    .           	pointer _M_end_of_storage;
    .           
    .           	_GLIBCXX20_CONSTEXPR
  117 ( 0.00%)  	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  458 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
   78 ( 0.00%)  	: _M_start(), _M_finish(), _M_end_of_storage()
   39 ( 0.00%)  	{ }
    .           
    .           #if __cplusplus >= 201103L
    .           	_GLIBCXX20_CONSTEXPR
    .           	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
    .           	: _M_start(__x._M_start), _M_finish(__x._M_finish),
    .           	  _M_end_of_storage(__x._M_end_of_storage)
    .           	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
    .           #endif
-- line 108 ----------------------------------------
-- line 124 ----------------------------------------
    .           	  // information used by TBAA.
    .           	  _Vector_impl_data __tmp;
    .           	  __tmp._M_copy_data(*this);
    .           	  _M_copy_data(__x);
    .           	  __x._M_copy_data(__tmp);
    .           	}
    .                 };
    .           
  182 ( 0.00%)        struct _Vector_impl
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .           	: public _Tp_alloc_type, public _Vector_impl_data
    .                 {
    .           	_GLIBCXX20_CONSTEXPR
   78 ( 0.00%)  	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .           	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
    .           #if __cpp_lib_concepts
    .           	requires is_default_constructible_v<_Tp_alloc_type>
    .           #endif
   36 ( 0.00%)  	: _Tp_alloc_type()
   67 ( 0.00%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() (1x)
   18 ( 0.00%)  	{ }
    .           
    .           	_GLIBCXX20_CONSTEXPR
  126 ( 0.00%)  	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
   42 ( 0.00%)  	: _Tp_alloc_type(__a)
  130 ( 0.00%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::_Vector_impl_data::_Vector_impl_data() (2x)
   21 ( 0.00%)  	{ }
    .           
    .           #if __cplusplus >= 201103L
    .           	// Not defaulted, to enforce noexcept(true) even when
    .           	// !is_nothrow_move_constructible<_Tp_alloc_type>.
    .           	_GLIBCXX20_CONSTEXPR
    .           	_Vector_impl(_Vector_impl&& __x) noexcept
    .           	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
    .           	{ }
-- line 155 ----------------------------------------
-- line 292 ----------------------------------------
    .           #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
    .                 };
    .           
    .               public:
    .                 typedef _Alloc allocator_type;
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 _Tp_alloc_type&
  360 ( 0.01%)        _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
  192 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (4x)
  120 ( 0.00%)        { return this->_M_impl; }
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 const _Tp_alloc_type&
  414 ( 0.01%)        _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  138 ( 0.00%)        { return this->_M_impl; }
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 allocator_type
    .                 get_allocator() const _GLIBCXX_NOEXCEPT
    .                 { return allocator_type(_M_get_Tp_allocator()); }
    .           
    .           #if __cplusplus >= 201103L
  108 ( 0.00%)        _Vector_base() = default;
  140 ( 0.00%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl() (1x)
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .           #else
    .                 _Vector_base() { }
    .           #endif
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
    .                 : _M_impl(__a) { }
    .           
-- line 322 ----------------------------------------
-- line 324 ----------------------------------------
    .           #if !_GLIBCXX_INLINE_VERSION
    .                 _GLIBCXX20_CONSTEXPR
    .                 _Vector_base(size_t __n)
    .                 : _M_impl()
    .                 { _M_create_storage(__n); }
    .           #endif
    .           
    .                 _GLIBCXX20_CONSTEXPR
   84 ( 0.00%)        _Vector_base(size_t __n, const allocator_type& __a)
   98 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
   56 ( 0.00%)        : _M_impl(__a)
  282 ( 0.01%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::_Vector_impl::_Vector_impl(std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) (2x)
   84 ( 0.00%)        { _M_create_storage(__n); }
1,560 ( 0.04%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::_M_create_storage(unsigned long) (2x)
    .           
    .           #if __cplusplus >= 201103L
    .                 _Vector_base(_Vector_base&&) = default;
    .           
    .                 // Kept for ABI compatibility.
    .           # if !_GLIBCXX_INLINE_VERSION
    .                 _GLIBCXX20_CONSTEXPR
    .                 _Vector_base(_Tp_alloc_type&& __a) noexcept
-- line 342 ----------------------------------------
-- line 358 ----------------------------------------
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 _Vector_base(const allocator_type& __a, _Vector_base&& __x)
    .                 : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
    .                 { }
    .           #endif
    .           
    .                 _GLIBCXX20_CONSTEXPR
  117 ( 0.00%)        ~_Vector_base() _GLIBCXX_NOEXCEPT
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
    .                 {
  130 ( 0.00%)  	_M_deallocate(_M_impl._M_start,
2,418 ( 0.06%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_deallocate(GraphAlgo::Edge*, unsigned long) (10x)
   93 ( 0.00%)  		      _M_impl._M_end_of_storage - _M_impl._M_start);
  117 ( 0.00%)        }
1,238 ( 0.03%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_Vector_impl::~_Vector_impl() (10x)
    .           
    .               public:
    .                 _Vector_impl _M_impl;
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 pointer
  270 ( 0.01%)        _M_allocate(size_t __n)
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
    .                 {
    .           	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
  243 ( 0.01%)  	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
   54 ( 0.00%)        }
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 void
  143 ( 0.00%)        _M_deallocate(pointer __p, size_t __n)
   94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
    .                 {
    .           	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
   65 ( 0.00%)  	if (__p)
   78 ( 0.00%)  	  _Tr::deallocate(_M_impl, __p, __n);
   39 ( 0.00%)        }
    .           
    .               protected:
    .           
    .                 _GLIBCXX20_CONSTEXPR
    .                 void
   70 ( 0.00%)        _M_create_storage(size_t __n)
  229 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (5x)
    .                 {
   70 ( 0.00%)  	this->_M_impl._M_start = this->_M_allocate(__n);
1,799 ( 0.04%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_allocate(unsigned long) (5x)
   28 ( 0.00%)  	this->_M_impl._M_finish = this->_M_impl._M_start;
   55 ( 0.00%)  	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
   21 ( 0.00%)        }
    .               };
    .           
    .             /**
    .              *  @brief A standard container which offers fixed time access to
    .              *  individual elements in any order.
    .              *
    .              *  @ingroup sequences
    .              *  @headerfile vector
-- line 409 ----------------------------------------
-- line 496 ----------------------------------------
    .                 }
    .           
    .                 static pointer
    .                 _S_do_relocate(pointer, pointer, pointer __result,
    .           		     _Tp_alloc_type&, false_type) noexcept
    .                 { return __result; }
    .           
    .                 static _GLIBCXX20_CONSTEXPR pointer
  240 ( 0.01%)        _S_relocate(pointer __first, pointer __last, pointer __result,
  679 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (15x)
    .           		  _Tp_alloc_type& __alloc) noexcept
    .                 {
    .           #if __cpp_if_constexpr
    .           	// All callers have already checked _S_use_relocate() so just do it.
  240 ( 0.01%)  	return std::__relocate_a(__first, __last, __result, __alloc);
13,402 ( 0.31%)  => /usr/include/c++/14/bits/stl_uninitialized.h:GraphAlgo::Edge* std::__relocate_a<GraphAlgo::Edge*, GraphAlgo::Edge*, std::allocator<GraphAlgo::Edge> >(GraphAlgo::Edge*, GraphAlgo::Edge*, GraphAlgo::Edge*, std::allocator<GraphAlgo::Edge>&) (15x)
    .           #else
    .           	using __do_it = __bool_constant<_S_use_relocate()>;
    .           	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
    .           #endif
   40 ( 0.00%)        }
    .           #endif // C++11
    .           
    .               protected:
    .                 using _Base::_M_allocate;
    .                 using _Base::_M_deallocate;
    .                 using _Base::_M_impl;
    .                 using _Base::_M_get_Tp_allocator;
    .           
-- line 522 ----------------------------------------
-- line 523 ----------------------------------------
    .               public:
    .                 // [23.2.4.1] construct/copy/destroy
    .                 // (assign() and get_allocator() are also listed in this section)
    .           
    .                 /**
    .                  *  @brief  Creates a %vector with no elements.
    .                  */
    .           #if __cplusplus >= 201103L
  108 ( 0.00%)        vector() = default;
  207 ( 0.00%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<int, std::allocator<int> >::_Vector_base() (1x)
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .           #else
    .                 vector() { }
    .           #endif
    .           
    .                 /**
    .                  *  @brief  Creates a %vector with no elements.
    .                  *  @param  __a  An allocator object.
    .                  */
-- line 539 ----------------------------------------
-- line 548 ----------------------------------------
    .                  *  @param  __n  The number of elements to initially create.
    .                  *  @param  __a  An allocator.
    .                  *
    .                  *  This constructor fills the %vector with @a __n default
    .                  *  constructed elements.
    .                  */
    .                 explicit
    .                 _GLIBCXX20_CONSTEXPR
   12 ( 0.00%)        vector(size_type __n, const allocator_type& __a = allocator_type())
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
   18 ( 0.00%)        : _Base(_S_check_init_len(__n, __a), __a)
1,342 ( 0.03%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::_Vector_base(unsigned long, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) (1x)
  299 ( 0.01%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::_S_check_init_len(unsigned long, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) (1x)
   12 ( 0.00%)        { _M_default_initialize(__n); }
2,728 ( 0.06%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::_M_default_initialize(unsigned long) (1x)
    .           
    .                 /**
    .                  *  @brief  Creates a %vector with copies of an exemplar element.
    .                  *  @param  __n  The number of elements to initially create.
    .                  *  @param  __value  An element to copy.
    .                  *  @param  __a  An allocator.
    .                  *
    .                  *  This constructor fills the %vector with @a __n copies of @a __value.
-- line 566 ----------------------------------------
-- line 593 ----------------------------------------
    .                  *  All the elements of @a __x are copied, but any unused capacity in
    .                  *  @a __x  will not be copied
    .                  *  (i.e. capacity() == size() in the new %vector).
    .                  *
    .                  *  The newly-created %vector uses a copy of the allocator object used
    .                  *  by @a __x (unless the allocator traits dictate a different object).
    .                  */
    .                 _GLIBCXX20_CONSTEXPR
   78 ( 0.00%)        vector(const vector& __x)
  229 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (5x)
    .                 : _Base(__x.size(),
  198 ( 0.00%)  	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
3,280 ( 0.08%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_Vector_base(unsigned long, std::allocator<GraphAlgo::Edge> const&) (5x)
  319 ( 0.01%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::size() const (5x)
  289 ( 0.01%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_get_Tp_allocator() const (5x)
    .                 {
   12 ( 0.00%)  	this->_M_impl._M_finish =
  138 ( 0.00%)  	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
14,434 ( 0.34%)  => /usr/include/c++/14/bits/stl_uninitialized.h:GraphAlgo::Edge* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, GraphAlgo::Edge*, GraphAlgo::Edge>(__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, __gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >, GraphAlgo::Edge*, std::allocator<GraphAlgo::Edge>&) (5x)
  644 ( 0.02%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::end() const (5x)
  639 ( 0.01%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::begin() const (5x)
    .           				      this->_M_impl._M_start,
   42 ( 0.00%)  				      _M_get_Tp_allocator());
  289 ( 0.01%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_get_Tp_allocator() (5x)
   42 ( 0.00%)        }
    .           
    .           #if __cplusplus >= 201103L
    .                 /**
    .                  *  @brief  %Vector move constructor.
    .                  *
    .                  *  The newly-created %vector contains the exact contents of the
    .                  *  moved instance.
    .                  *  The contents of the moved instance are a valid, but unspecified
-- line 617 ----------------------------------------
-- line 725 ----------------------------------------
    .           
    .                 /**
    .                  *  The dtor only erases the elements, and note that if the
    .                  *  elements themselves are pointers, the pointed-to memory is
    .                  *  not touched in any way.  Managing the pointer is the user's
    .                  *  responsibility.
    .                  */
    .                 _GLIBCXX20_CONSTEXPR
  117 ( 0.00%)        ~vector() _GLIBCXX_NOEXCEPT
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .                 {
   91 ( 0.00%)  	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
   78 ( 0.00%)  		      _M_get_Tp_allocator());
   61 ( 0.00%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() (1x)
    .           	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
  117 ( 0.00%)        }
  442 ( 0.01%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<int, std::allocator<int> >::~_Vector_base() (1x)
    .           
    .                 /**
    .                  *  @brief  %Vector assignment operator.
    .                  *  @param  __x  A %vector of identical element and allocator types.
    .                  *
    .                  *  All the elements of @a __x are copied, but any unused capacity in
    .                  *  @a __x will not be copied.
    .                  *
-- line 746 ----------------------------------------
-- line 865 ----------------------------------------
    .                 // iterators
    .                 /**
    .                  *  Returns a read/write iterator that points to the first
    .                  *  element in the %vector.  Iteration is done in ordinary
    .                  *  element order.
    .                  */
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 iterator
  369 ( 0.01%)        begin() _GLIBCXX_NOEXCEPT
1,587 ( 0.04%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (35x)
  451 ( 0.01%)        { return iterator(this->_M_impl._M_start); }
2,174 ( 0.05%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::__normal_iterator(GraphAlgo::Edge* const&) (35x)
    .           
    .                 /**
    .                  *  Returns a read-only (constant) iterator that points to the
    .                  *  first element in the %vector.  Iteration is done in ordinary
    .                  *  element order.
    .                  */
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 const_iterator
  495 ( 0.01%)        begin() const _GLIBCXX_NOEXCEPT
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  605 ( 0.01%)        { return const_iterator(this->_M_impl._M_start); }
   66 ( 0.00%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > const*, std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > > >::__normal_iterator(std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > const* const&) (1x)
    .           
    .                 /**
    .                  *  Returns a read/write iterator that points one past the last
    .                  *  element in the %vector.  Iteration is done in ordinary
    .                  *  element order.
    .                  */
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 iterator
  783 ( 0.02%)        end() _GLIBCXX_NOEXCEPT
  278 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (6x)
1,044 ( 0.02%)        { return iterator(this->_M_impl._M_finish); }
  376 ( 0.01%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) (6x)
    .           
    .                 /**
    .                  *  Returns a read-only (constant) iterator that points one past
    .                  *  the last element in the %vector.  Iteration is done in
    .                  *  ordinary element order.
    .                  */
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 const_iterator
  495 ( 0.01%)        end() const _GLIBCXX_NOEXCEPT
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  660 ( 0.02%)        { return const_iterator(this->_M_impl._M_finish); }
   66 ( 0.00%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > const*, std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > > >::__normal_iterator(std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > const* const&) (1x)
    .           
    .                 /**
    .                  *  Returns a read/write reverse iterator that points to the
    .                  *  last element in the %vector.  Iteration is done in reverse
    .                  *  element order.
    .                  */
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 reverse_iterator
-- line 912 ----------------------------------------
-- line 946 ----------------------------------------
    .           #if __cplusplus >= 201103L
    .                 /**
    .                  *  Returns a read-only (constant) iterator that points to the
    .                  *  first element in the %vector.  Iteration is done in ordinary
    .                  *  element order.
    .                  */
    .                 [[__nodiscard__]] _GLIBCXX20_CONSTEXPR
    .                 const_iterator
   90 ( 0.00%)        cbegin() const noexcept
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
  110 ( 0.00%)        { return const_iterator(this->_M_impl._M_start); }
  624 ( 0.01%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::__normal_iterator(GraphAlgo::Edge const* const&) (10x)
    .           
    .                 /**
    .                  *  Returns a read-only (constant) iterator that points one past
    .                  *  the last element in the %vector.  Iteration is done in
    .                  *  ordinary element order.
    .                  */
    .                 [[__nodiscard__]] _GLIBCXX20_CONSTEXPR
    .                 const_iterator
-- line 963 ----------------------------------------
-- line 984 ----------------------------------------
    .                 crend() const noexcept
    .                 { return const_reverse_iterator(begin()); }
    .           #endif
    .           
    .                 // [23.2.4.2] capacity
    .                 /**  Returns the number of elements in the %vector.  */
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 size_type
1,080 ( 0.03%)        size() const _GLIBCXX_NOEXCEPT
   98 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
1,082 ( 0.03%)        { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
    .           
    .                 /**  Returns the size() of the largest possible %vector.  */
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 size_type
  360 ( 0.01%)        max_size() const _GLIBCXX_NOEXCEPT
  458 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
  640 ( 0.01%)        { return _S_max_size(_M_get_Tp_allocator()); }
1,418 ( 0.03%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) (10x)
  574 ( 0.01%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() const (10x)
    .           
    .           #if __cplusplus >= 201103L
    .                 /**
    .                  *  @brief  Resizes the %vector to the specified number of elements.
    .                  *  @param  __new_size  Number of elements the %vector should contain.
    .                  *
    .                  *  This function will %resize the %vector to the specified
    .                  *  number of elements.  If the number is smaller than the
-- line 1007 ----------------------------------------
-- line 1082 ----------------------------------------
    .                 }
    .           
    .                 /**
    .                  *  Returns true if the %vector is empty.  (Thus begin() would
    .                  *  equal end().)
    .                  */
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 bool
  306 ( 0.01%)        empty() const _GLIBCXX_NOEXCEPT
1,546 ( 0.04%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (34x)
  918 ( 0.02%)        { return begin() == end(); }
6,472 ( 0.15%)  => /usr/include/c++/14/bits/stl_iterator.h:bool __gnu_cxx::operator==<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&, __gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) (34x)
4,356 ( 0.10%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::end() const (34x)
4,322 ( 0.10%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::begin() const (34x)
    .           
    .                 /**
    .                  *  @brief  Attempt to preallocate enough memory for specified number of
    .                  *          elements.
    .                  *  @param  __n  Number of elements required.
    .                  *  @throw  std::length_error  If @a n exceeds @c max_size().
    .                  *
    .                  *  This function attempts to reserve enough memory for the
-- line 1099 ----------------------------------------
-- line 1120 ----------------------------------------
    .                  *
    .                  *  This operator allows for easy, array-style, data access.
    .                  *  Note that data access with this operator is unchecked and
    .                  *  out_of_range lookups are not defined. (For checked lookups
    .                  *  see at().)
    .                  */
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 reference
  830 ( 0.02%)        operator[](size_type __n) _GLIBCXX_NOEXCEPT
3,268 ( 0.08%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (72x)
    .                 {
    .           	__glibcxx_requires_subscript(__n);
  631 ( 0.01%)  	return *(this->_M_impl._M_start + __n);
  166 ( 0.00%)        }
    .           
    .                 /**
    .                  *  @brief  Subscript access to the data contained in the %vector.
    .                  *  @param __n The index of the element for which data should be
    .                  *  accessed.
    .                  *  @return  Read-only (constant) reference to data.
    .                  *
    .                  *  This operator allows for easy, array-style, data access.
    .                  *  Note that data access with this operator is unchecked and
    .                  *  out_of_range lookups are not defined. (For checked lookups
    .                  *  see at().)
    .                  */
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 const_reference
  370 ( 0.01%)        operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1,673 ( 0.04%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (37x)
    .                 {
    .           	__glibcxx_requires_subscript(__n);
  296 ( 0.01%)  	return *(this->_M_impl._M_start + __n);
   74 ( 0.00%)        }
    .           
    .               protected:
    .                 /// Safety check used only from at().
    .                 _GLIBCXX20_CONSTEXPR
    .                 void
    .                 _M_range_check(size_type __n) const
    .                 {
    .           	if (__n >= this->size())
-- line 1159 ----------------------------------------
-- line 1227 ----------------------------------------
    .                 }
    .           
    .                 /**
    .                  *  Returns a read/write reference to the data at the last
    .                  *  element of the %vector.
    .                  */
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 reference
  270 ( 0.01%)        back() _GLIBCXX_NOEXCEPT
1,358 ( 0.03%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (30x)
    .                 {
    .           	__glibcxx_requires_nonempty();
  720 ( 0.02%)  	return *(end() - 1);
4,058 ( 0.09%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator-(long) const (30x)
3,844 ( 0.09%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::end() (30x)
1,744 ( 0.04%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator*() const (30x)
   60 ( 0.00%)        }
    .           
    .                 /**
    .                  *  Returns a read-only (constant) reference to the data at the
    .                  *  last element of the %vector.
    .                  */
    .                 _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
    .                 const_reference
    .                 back() const _GLIBCXX_NOEXCEPT
-- line 1247 ----------------------------------------
-- line 1275 ----------------------------------------
    .                  *  This is a typical stack operation.  The function creates an
    .                  *  element at the end of the %vector and assigns the given data
    .                  *  to it.  Due to the nature of a %vector this operation can be
    .                  *  done in constant time if the %vector has preallocated space
    .                  *  available.
    .                  */
    .                 _GLIBCXX20_CONSTEXPR
    .                 void
  132 ( 0.00%)        push_back(const value_type& __x)
  499 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (11x)
    .                 {
   84 ( 0.00%)  	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
    .           	  {
    .           	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
   42 ( 0.00%)  	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
    .           				     __x);
   30 ( 0.00%)  	    ++this->_M_impl._M_finish;
    .           	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
    .           	  }
    .           	else
   40 ( 0.00%)  	  _M_realloc_append(__x);
15,834 ( 0.37%)  => /usr/include/c++/14/bits/vector.tcc:void std::vector<int, std::allocator<int> >::_M_realloc_append<int const&>(int const&) (5x)
   72 ( 0.00%)        }
    .           
    .           #if __cplusplus >= 201103L
    .                 _GLIBCXX20_CONSTEXPR
    .                 void
    .                 push_back(value_type&& __x)
    .                 { emplace_back(std::move(__x)); }
    .           
    .                 template<typename... _Args>
-- line 1303 ----------------------------------------
-- line 1316 ----------------------------------------
    .                  *  This is a typical stack operation. It shrinks the %vector by one.
    .                  *
    .                  *  Note that no data is returned, and if the last element's
    .                  *  data is needed, it should be retrieved before pop_back() is
    .                  *  called.
    .                  */
    .                 _GLIBCXX20_CONSTEXPR
    .                 void
   90 ( 0.00%)        pop_back() _GLIBCXX_NOEXCEPT
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
    .                 {
    .           	__glibcxx_requires_nonempty();
   50 ( 0.00%)  	--this->_M_impl._M_finish;
   90 ( 0.00%)  	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
    .           	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
   30 ( 0.00%)        }
    .           
    .           #if __cplusplus >= 201103L
    .                 /**
    .                  *  @brief  Inserts an object in %vector before specified iterator.
    .                  *  @param  __position  A const_iterator into the %vector.
    .                  *  @param  __args  Arguments.
    .                  *  @return  An iterator that points to the inserted data.
    .                  *
-- line 1338 ----------------------------------------
-- line 1528 ----------------------------------------
    .                  *  The user is also cautioned that this function only erases
    .                  *  the element, and that if the element is itself a pointer,
    .                  *  the pointed-to memory is not touched in any way.  Managing
    .                  *  the pointer is the user's responsibility.
    .                  */
    .                 _GLIBCXX20_CONSTEXPR
    .                 iterator
    .           #if __cplusplus >= 201103L
  110 ( 0.00%)        erase(const_iterator __position)
  454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
  450 ( 0.01%)        { return _M_erase(begin() + (__position - cbegin())); }
13,012 ( 0.30%)  => /usr/include/c++/14/bits/vector.tcc:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::_M_erase(__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >) (10x)
1,942 ( 0.05%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::difference_type __gnu_cxx::operator-<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(__gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&, __gnu_cxx::__normal_iterator<GraphAlgo::Edge const*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) (10x)
1,348 ( 0.03%)  => /usr/include/c++/14/bits/stl_iterator.h:__gnu_cxx::__normal_iterator<GraphAlgo::Edge*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >::operator+(long) const (10x)
1,278 ( 0.03%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::cbegin() const (10x)
1,274 ( 0.03%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::begin() (10x)
    .           #else
    .                 erase(iterator __position)
    .                 { return _M_erase(__position); }
    .           #endif
    .           
    .                 /**
    .                  *  @brief  Remove a range of elements.
    .                  *  @param  __first  Iterator pointing to the first element to be erased.
-- line 1545 ----------------------------------------
-- line 1709 ----------------------------------------
    .           	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
    .           					_M_get_Tp_allocator());
    .                 }
    .           
    .           #if __cplusplus >= 201103L
    .                 // Called by the vector(n) constructor.
    .                 _GLIBCXX20_CONSTEXPR
    .                 void
   10 ( 0.00%)        _M_default_initialize(size_type __n)
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .                 {
    2 ( 0.00%)  	this->_M_impl._M_finish =
    9 ( 0.00%)  	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
2,587 ( 0.06%)  => /usr/include/c++/14/bits/stl_uninitialized.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >* std::__uninitialized_default_n_a<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >*, unsigned long, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >*, unsigned long, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >&) (1x)
    7 ( 0.00%)  					   _M_get_Tp_allocator());
   61 ( 0.00%)  => /usr/include/c++/14/bits/stl_vector.h:std::_Vector_base<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::_M_get_Tp_allocator() (1x)
    3 ( 0.00%)        }
    .           #endif
    .           
    .                 // Internal assign functions follow.  The *_aux functions do the actual
    .                 // assignment work for the range versions.
    .           
    .                 // Called by the range assign to implement [23.1.1]/9
    .           
    .                 // _GLIBCXX_RESOLVE_LIB_DEFECTS
-- line 1730 ----------------------------------------
-- line 1898 ----------------------------------------
    .                 iterator
    .                 _M_emplace_aux(const_iterator __position, value_type&& __v)
    .                 { return _M_insert_rval(__position, std::move(__v)); }
    .           #endif
    .           
    .                 // Called by _M_fill_insert, _M_insert_aux etc.
    .                 _GLIBCXX20_CONSTEXPR
    .                 size_type
  240 ( 0.01%)        _M_check_len(size_type __n, const char* __s) const
  679 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (15x)
    .                 {
  340 ( 0.01%)  	if (max_size() - size() < __n)
4,036 ( 0.09%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::max_size() const (15x)
  949 ( 0.02%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::size() const (15x)
   60 ( 0.00%)  	  __throw_length_error(__N(__s));
    .           
  500 ( 0.01%)  	const size_type __len = size() + (std::max)(size(), __n);
1,898 ( 0.04%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::size() const (30x)
  984 ( 0.02%)  => /usr/include/c++/14/bits/stl_algobase.h:unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) (15x)
  540 ( 0.01%)  	return (__len < size() || __len > max_size()) ? max_size() : __len;
4,024 ( 0.09%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::max_size() const (15x)
  949 ( 0.02%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::size() const (15x)
   60 ( 0.00%)        }
    .           
    .                 // Called by constructors to check initial size.
    .                 static _GLIBCXX20_CONSTEXPR size_type
   17 ( 0.00%)        _S_check_init_len(size_type __n, const allocator_type& __a)
   49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
    .                 {
   10 ( 0.00%)  	if (__n > _S_max_size(_Tp_alloc_type(__a)))
  149 ( 0.00%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::_S_max_size(std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > const&) (1x)
    3 ( 0.00%)  	  __throw_length_error(
    .           	      __N("cannot create std::vector larger than max_size()"));
    1 ( 0.00%)  	return __n;
    3 ( 0.00%)        }
    .           
    .                 static _GLIBCXX20_CONSTEXPR size_type
  369 ( 0.01%)        _S_max_size(const _Tp_alloc_type& __a) _GLIBCXX_NOEXCEPT
1,354 ( 0.03%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (30x)
    .                 {
    .           	// std::distance(begin(), end()) cannot be greater than PTRDIFF_MAX,
    .           	// and realistically we can't store more than PTRDIFF_MAX/sizeof(T)
    .           	// (even if std::allocator_traits::max_size says we can).
  328 ( 0.01%)  	const size_t __diffmax
    .           	  = __gnu_cxx::__numeric_traits<ptrdiff_t>::__max / sizeof(_Tp);
   41 ( 0.00%)  	const size_t __allocmax = _Alloc_traits::max_size(__a);
  369 ( 0.01%)  	return (std::min)(__diffmax, __allocmax);
1,924 ( 0.04%)  => /usr/include/c++/14/bits/stl_algobase.h:unsigned long const& std::min<unsigned long>(unsigned long const&, unsigned long const&) (30x)
   82 ( 0.00%)        }
    .           
    .                 // Internal erase functions follow.
    .           
    .                 // Called by erase(q1,q2), clear(), resize(), _M_fill_assign,
    .                 // _M_assign_aux.
    .                 _GLIBCXX20_CONSTEXPR
    .                 void
    .                 _M_erase_at_end(pointer __pos) _GLIBCXX_NOEXCEPT
-- line 1943 ----------------------------------------

--------------------------------------------------------------------------------
-- Auto-annotated source: Graph.hpp
--------------------------------------------------------------------------------
Ir           

-- line 6 ----------------------------------------
  .           
  .           using namespace std;
  .           
  .           namespace GraphAlgo {
  .           
  .           struct Edge {
  .               int dst;
  .               int weight;
400 ( 0.01%)      Edge(int destination, int w) : dst(destination), weight(w) {}
908 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (20x)
  .           };
  .           
  .           class Graph {
  .           private:
  .               int numVertices;
  .               bool directed;
  .               vector<vector<Edge>> adjList;
  .           
-- line 22 ----------------------------------------
-- line 26 ----------------------------------------
  .           
  .               // Copy Constructor 
  .               Graph(const Graph& other);
  .           
  .               // Copy Assignment Operator 
  .               Graph& operator=(const Graph& other);
  .           
  .               // Destructor 
 19 ( 0.00%)      ~Graph() = default;
5,039 ( 0.12%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >, std::allocator<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > > >::~vector() (1x)
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .           
  .               // Methods
  .               void addEdge(int src, int dst, int weight = 1);
  .               void printGraph() const;
  .               int getVertexCount() const;
  .               const vector<Edge>& getNeighbors(int v) const;
 13 ( 0.00%)      const vector<vector<Edge>>& getAdjList() const { return adjList; }
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .           
  .           };
  .           
  .           } // namespace GraphAlgo
  .           
  .           #endif // GRAPH_HPP

--------------------------------------------------------------------------------
-- Auto-annotated source: /usr/include/c++/14/bits/stl_construct.h
--------------------------------------------------------------------------------
Ir           

-- line 101 ----------------------------------------
  .             /**
  .              * Constructs an object in existing memory by invoking an allocated
  .              * object's constructor with an initializer.
  .              */
  .           #if __cplusplus >= 201103L
  .             template<typename _Tp, typename... _Args>
  .               _GLIBCXX20_CONSTEXPR
  .               inline void
365 ( 0.01%)      _Construct(_Tp* __p, _Args&&... __args)
904 ( 0.02%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (20x)
  .               {
  .           #if __cpp_constexpr_dynamic_alloc // >= C++20
  .                 if (std::__is_constant_evaluated())
  .           	{
  .           	  // Allow std::_Construct to be used in constant expressions.
  .           	  std::construct_at(__p, std::forward<_Args>(__args)...);
  .           	  return;
  .           	}
  .           #endif
595 ( 0.01%)        ::new((void*)__p) _Tp(std::forward<_Args>(__args)...);
1,164 ( 0.03%)  => /usr/include/c++/14/new:operator new(unsigned long, void*) (20x)
1,144 ( 0.03%)  => /usr/include/c++/14/bits/move.h:GraphAlgo::Edge const& std::forward<GraphAlgo::Edge const&>(std::remove_reference<GraphAlgo::Edge const&>::type&) (20x)
190 ( 0.00%)      }
  .           #else
  .             template<typename _T1, typename _T2>
  .               inline void
  .               _Construct(_T1* __p, const _T2& __value)
  .               {
  .                 // _GLIBCXX_RESOLVE_LIB_DEFECTS
  .                 // 402. wrong new expression in [some_]allocator::construct
  .                 ::new(static_cast<void*>(__p)) _T1(__value);
-- line 128 ----------------------------------------
-- line 138 ----------------------------------------
  .               _GLIBCXX20_CONSTEXPR void
  .               _Destroy(_ForwardIterator __first, _ForwardIterator __last);
  .           
  .             /**
  .              * Destroy the object pointed to by a pointer type.
  .              */
  .             template<typename _Tp>
  .               _GLIBCXX14_CONSTEXPR inline void
 90 ( 0.00%)      _Destroy(_Tp* __pointer)
454 ( 0.01%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (10x)
  .               {
  .           #if __cpp_constexpr_dynamic_alloc // >= C++20
  .                 std::destroy_at(__pointer);
  .           #else
 60 ( 0.00%)        __pointer->~_Tp();
7,136 ( 0.17%)  => /usr/include/c++/14/bits/stl_vector.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >::~vector() (10x)
  .           #endif
 30 ( 0.00%)      }
  .           
  .             template<bool>
  .               struct _Destroy_aux
  .               {
  .                 template<typename _ForwardIterator>
  .           	static _GLIBCXX20_CONSTEXPR void
 20 ( 0.00%)  	__destroy(_ForwardIterator __first, _ForwardIterator __last)
 94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
  .           	{
 84 ( 0.00%)  	  for (; __first != __last; ++__first)
 80 ( 0.00%)  	    std::_Destroy(std::__addressof(*__first));
7,770 ( 0.18%)  => /usr/include/c++/14/bits/stl_construct.h:void std::_Destroy<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >*) (10x)
574 ( 0.01%)  => /usr/include/c++/14/bits/move.h:std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >* std::__addressof<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> > >(std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >&) (10x)
  6 ( 0.00%)  	}
  .               };
  .           
  .             template<>
  .               struct _Destroy_aux<true>
  .               {
  .                 template<typename _ForwardIterator>
  .                   static void
143 ( 0.00%)          __destroy(_ForwardIterator, _ForwardIterator) { }
 49 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (1x)
  .               };
  .           
  .             /**
  .              * Destroy a range of objects.  If the value_type of the object has
  .              * a trivial destructor, the compiler should optimize all of this
  .              * away, otherwise the objects' destructors must be invoked.
  .              */
  .             template<typename _ForwardIterator>
  .               _GLIBCXX20_CONSTEXPR inline void
130 ( 0.00%)      _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 94 ( 0.00%)  => ./gmon/../sysdeps/x86_64/_mcount.S:mcount (2x)
  .               {
  .                 typedef typename iterator_traits<_ForwardIterator>::value_type
  .                                  _Value_type;
  .           #if __cplusplus >= 201103L
  .                 // A deleted destructor is trivial, this ensures we reject such types:
  .                 static_assert(is_destructible<_Value_type>::value,
  .           		    "value type is destructible");
  .           #endif
  .           #if __cpp_constexpr_dynamic_alloc // >= C++20
  .                 if (std::__is_constant_evaluated())
  .           	return std::_Destroy_aux<false>::__destroy(__first, __last);
  .           #endif
  .                 std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
104 ( 0.00%)  	__destroy(__first, __last);
8,628 ( 0.20%)  => /usr/include/c++/14/bits/stl_construct.h:void std::_Destroy_aux<false>::__destroy<std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >*>(std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >*, std::vector<GraphAlgo::Edge, std::allocator<GraphAlgo::Edge> >*) (2x)
 39 ( 0.00%)      }
  .           
  .             template<bool>
  .               struct _Destroy_n_aux
  .               {
  .                 template<typename _ForwardIterator, typename _Size>
  .           	static _GLIBCXX20_CONSTEXPR _ForwardIterator
  .           	__destroy_n(_ForwardIterator __first, _Size __count)
  .           	{
-- line 205 ----------------------------------------

--------------------------------------------------------------------------------
The following files chosen for auto-annotation could not be found:
--------------------------------------------------------------------------------
  ./elf/../bits/stdlib-bsearch.h
  ./elf/../sysdeps/generic/dl-new-hash.h
  ./elf/../sysdeps/generic/dl-protected.h
  ./elf/../sysdeps/generic/ldsodefs.h
  ./elf/../sysdeps/nptl/dl-tls_init_tp.c
  ./elf/../sysdeps/unix/sysv/linux/dl-sysdep.c
  ./elf/../sysdeps/x86/dl-cacheinfo.h
  ./elf/../sysdeps/x86_64/dl-machine.h
  ./elf/../sysdeps/x86_64/dl-trampoline.h
  ./elf/./dl-find_object.h
  ./elf/./dl-map-segments.h
  ./elf/./dl-tls_block_align.h
  ./elf/./elf/dl-cache.c
  ./elf/./elf/dl-catch.c
  ./elf/./elf/dl-deps.c
  ./elf/./elf/dl-environ.c
  ./elf/./elf/dl-find_object.c
  ./elf/./elf/dl-fini.c
  ./elf/./elf/dl-hwcaps_split.c
  ./elf/./elf/dl-init.c
  ./elf/./elf/dl-load.c
  ./elf/./elf/dl-lookup.c
  ./elf/./elf/dl-minimal-malloc.c
  ./elf/./elf/dl-minimal.c
  ./elf/./elf/dl-misc.c
  ./elf/./elf/dl-object.c
  ./elf/./elf/dl-reloc.c
  ./elf/./elf/dl-runtime.c
  ./elf/./elf/dl-sort-maps.c
  ./elf/./elf/dl-tunables.c
  ./elf/./elf/dl-tunables.h
  ./elf/./elf/dl-version.c
  ./elf/./elf/do-rel.h
  ./elf/./elf/get-dynamic-info.h
  ./elf/./elf/libc-dl-profstub.c
  ./elf/./elf/rtld.c
  ./elf/./get-dynamic-info.h
  ./gmon/../string/bits/string_fortified.h
  ./gmon/../sysdeps/x86_64/_mcount.S
  ./gmon/./gmon/gmon.c
  ./gmon/./gmon/mcount.c
  ./iconv/./iconv/gconv_simple.c
  ./libio/../string/bits/string_fortified.h
  ./libio/./libio/fileops.c
  ./libio/./libio/genops.c
  ./libio/./libio/iofflush.c
  ./libio/./libio/iofread.c
  ./libio/./libio/iofwrite.c
  ./libio/./libio/libioP.h
  ./malloc/./malloc/malloc.c
  ./misc/../sysdeps/unix/sysv/linux/mmap64.c
  ./nptl/./nptl/cancellation.c
  ./posix/./posix/getopt.c
  ./setjmp/../sysdeps/x86_64/setjmp.S
  ./stdlib/../stdlib/strtol_l.c
  ./stdlib/../string/bits/string_fortified.h
  ./stdlib/./stdlib/cxa_atexit.c
  ./stdlib/./stdlib/cxa_finalize.c
  ./stdlib/./stdlib/exit.c
  ./stdlib/./stdlib/getenv.c
  ./stdlib/./stdlib/rand.c
  ./stdlib/./stdlib/random.c
  ./stdlib/./stdlib/random_r.c
  ./string/../string/strcspn.c
  ./string/../sysdeps/x86_64/multiarch/../multiarch/memset-vec-unaligned-erms.S
  ./string/../sysdeps/x86_64/multiarch/../multiarch/strchr-sse2.S
  ./string/../sysdeps/x86_64/multiarch/../multiarch/strcmp-sse2.S
  ./string/../sysdeps/x86_64/multiarch/../multiarch/strlen-sse2.S
  ./string/../sysdeps/x86_64/multiarch/memcmp-avx2-movbe.S
  ./string/../sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S
  ./string/../sysdeps/x86_64/multiarch/strcmp-avx2.S
  ./string/../sysdeps/x86_64/multiarch/strlen-avx2.S
  ./wcsmbs/./wcsmbs/btowc.c
  ./wcsmbs/./wcsmbs/wctob.c
  ./wcsmbs/./wcsmbsload.h
  ./wctype/./wctype/wctype_l.c

--------------------------------------------------------------------------------
Ir               
--------------------------------------------------------------------------------
175,838 ( 4.11%)  events annotated

